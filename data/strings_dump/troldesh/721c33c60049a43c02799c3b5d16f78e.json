{"strings": {"static_strings": ["!This program cannot be run in DOS mode.", "RichLu@", "`.rdata", "@.data", "Ed_^[d", "@@AAJu", "uRh0b\\", "WWh|~\\", "VWt2hh", "D$ +D$", "D$$+D$ Yj", "D$ +D$", "D$ +D$", "L$D_^d", "SSSSSh", "SSSSSS", "qShLW\\", "9u t_9s", "PWWWWh", "tuh|S\\", "t'h\\T\\", "t'hLV\\", "tR8_xuM", "D$ _^d", "9u v63", "YF;u r", "j jAYjlZ", "j jyYjoZ", "j jyYjqZ", "j jyYjnZ", "j jyYjhZ", "j jyYjgZ", "j jsYj~Z", "j jsYjuZ", "t~HtHHt9Ht", "t.j4[j", "j&jCYjwZ", "j&jCYjkZ", "jAYjiZ", "jAYjhZ", "jAYjhZ", "jAYjlZ", "jAYjjZ", "jAYjkZ", "jAYjfZ", "jAYjeZ", "jAYjdZ", "jAYjdZ", "jAYjiZ", "jAYjiZ", "|'WSVVj", "jlYjnZ", "jAYjqZ", "jrYjxZ", "jAYjfZ", "SWSSV3", "jkYjgZ", "jkYjdZ", "jkYjeZ", "jAYjjZ", "u(9F(u#", "jmYjtZ", "jdYjsZ", "9~<tC9{", "C8QQQP", "j\\tjmYjdZ", "j\\tjAYjiZ", "j\\tjhYjjZ", "u\\tj\\tje", "j\\tjjYjkZ", "<a|8<f", "j\\tjgYjeZ", "u\\tj\\tjA", "MSjfYjmZ", "j\\tjAYjmZ", "j\\tjhYj{Z", "t 9x\\t", "jAYjjZ", "j&YjjZ", "joYjxZ", "j|YjwZ", "QSVWhh", "jeYjgZ", "jAYjjZ", "G,PWh8", "t]Wjrh", "Ht/Hu>", "joYjnZ", "u\\tj&jC", "j&jnYjxZ", "j&jCYjyZ", "j&jCYjsZ", "j&jCYjiZ", "j&jlYjiZ", "j&jnYjiZ", "j&jCYj{Z", "j&jnYj{Z", "j&jCYjjZ", "Yj&jtYjjZ", "j&jAYjzZ", "F`PVj\\t", "j&jCYjlZ", "F`PVj\\t", "SVWjwh", "t$,QRP", "u#h=jA", "jAYjhZ", "jAYjgZ", "jgYjkZ", "D$$@;A", "L$@;D$ u", "9L$Lr:v2", ";t$ r*", "D$0)D$Hj", "jnYjwZ", "jBYj}Z", "jfYjmZ", "jfYj|Z", "jBYjuZ", "jfYjuZ", "jsYjzZ", "j{YjrZ", "D$$PSS", "D$$PSSSSS", "j}YjlZ", "jfYjhZ", "jfYjhZ", "U09U(uY", "tLVWWh", "jeYjgZ", "jeYjhZ", "jeYjfZ", "jAYjvZ", "jiYjwZ", "jBYjlZ", "jBYjjZ", "9s<tc;", "jCYjoZ", "jBYjmZ", "jCYjyZ", "jBYjrZ", "jBYj|Z", "jBYjtZ", "jeYjpZ", "jeYjsZ", "jBYjvZ", "jBYjwZ", "jeYjqZ", "tS9;uOWj", "ItgItQIt6Iu", "lt`Ht+H", "jzYjdZ", "jAYj{Z", "jBYj}Z", "jBYj{Z", "jBYjzZ", "HtOHt4Ht", "jdYjyZ", "jAYjyZ", "u(jAYj", "j(jAYjhZ", " wv9Vdt", "ItjIt1It\\", "Uj jeYjtZ", "jAYjoZ", "jvYjoZ", "jiYjhZ", "jeYjhZ", "HtFHt3Ht", "jAYjhZ", "09wTuO9t$", "Ht8HHt\"HHt\\tj", "9O(t\\t9O,", "jAYjfZ", "9G(t\\t9G,", "ItZItDIt,It", "jAYjeZ", "jiYjgZ", "jeYjgZ", "It3IIt", "jAYjgZ", "D$(PWj", "SVWj|h", "jAYjiZ", "j&YjiZ", "98t\\tWP", "Yj\"jAY", "j!j Yj}Z", "j!j Yj}Z", "ttHt]HtLHt$Ht", "j!jpYjiZ", "u(j!jt", "j!j YjiZ", "j!jlYj", "u\\tj!jk", "D$$PSj", "D$ _^[", "YtQHtCHt#HuO", "HHt,HH", "@$g&3g", "ru\"j$X9E", "JJtuJtOJt2Jt", "Jt\\tj&jn", "D$(PVSV", "jAYjiZ", "jvWj\\tY", "jAYjhZ", "jAYjeZ", "jBYjxZ", "9{@t(9~@t#", "jdYjhZ", "jDYjhZ", "jdYjgZ", "jfYjgZ", "j(jiYjmZ", "}9j(je", "{ UUh[.C", "x _^][", "jyYjtZ", "uUSVW3", "HVt$Ht", "jiYjlZ", "jhYjlZ", "jmYjlZ", "jAYjmZ", "jjYjnZ", "jAYjoZ", "j#jsYjwZ", "j#jAYjwZ", "j#juYjjZ", "j#jeYjjZ", "jnYjkZ", "jmYjoZ", "jkYjrZ", "jnYjlZ", "jjYjpZ", "jnYjmZ", "jAYjqZ", "jnYjyZ", "jAYjyZ", "jmYjzZ", "jyYjzZ", "jgYjfZ", "jdYjfZ", "t?Ht7Ht,HH", "D$LjPP", "L$$;D$@", "jnYjlZ", "jiYjlZ", "D$<jPP", "G9t$$~D", "GF;t$$|", "jAYjtZ", "CPPSh8", "K(@jWS3", "YYjSS3", "YYj~S3", "Ht\\tHuF", "YYjRS3", "~0@u*j~V", "jAYjkZ", "1<Zto<+tk<-tg", "<0.u+@;", "j<Yj<_", "jmYjrZ", "jAYjqZ", "jCYjsZ", "u;j\"jAYjiZ", "j\"jAYjxZ", "u\\tj\"jm", "j\"jdYjlZ", "t3j\"jhYjnZ", "It0Iur<,un", "@j\"jmZ", "u)j\"jlYjmZ", "j\"jAYjoZ", "j\"jkYjqZ", "1_^][YY", "j\"jpYjqZ", "Yj\"jqZ", "j\"j}YjzZ", "j\"jAYjvZ", "u$j\"jwY", "j\"j|YjuZ", "9~TuFW", "Q YY_^", "@( uJR", "jlYjnZ", "9XPu\\t9XX", "jnYjkZ", "VWjphP", "IVWt7It'IIt", "\\tH$\\tH<\\tH", "jkYjqZ", "jlYjpZ", "VjchD!X", "jBYj~Z", "jeYj~Z", "CtPVVS", "u,9G@t/9C@t*", "jDYjfZ", "G,PSSV", "t|j Y+", "9pxu\\tW", "jpYjyZ", "jpYjyZ", "t<hD\"X", "j#jkYjxZ", "j#jeYjxZ", "jrYjvZ", "D$Hj@P", "jrYjuZ", "Vjdh@#X", "jIhX#X", "Vjyhp#X", "j*jAYjdZ", "j*j&YjdZ", "L$ SWh", "t$ h($X", "SWh0$X", "SWh8$X", "L$$SWh@$X", "L$(SWhH$X", "D$@_^[", "tMHtFHt", "~3;E ~.j", "jAYjzZ", "t<Ht*Ht", "j\"jAYjfZ", "j\"jjYjfZ", "Yj'jAYjfZ", "?@u6GW", "%j\"jnY", "uwj\"jAY", "YYtUHSt,", "j\"jAYjeZ", "j\"jAYjeZ", "4j\"joYjeZ", "jiYjqZ", "j\"jAYjyZ", "j\"jAYjgZ", "j\"jnYjgZ", "2j\"jjY", "jvhD*X", "*j\"jwY", "u/j\"jAYj~Z", "j\"jkYj~Z", "j\"jkYjdZ", "Yj\"jAYjdZ", "u-j\"j{", "j\"jxYjwZ", "2j\"jAYjwZ", "j\"jyYjwZ", "u\\tj\"j ", "j\"jAYjpZ", "j\"jAYjsZ", "j\"jrYjsZ", "jiYjlZ", "jjYjmZ", "!jlYjmZ", "D$(9|$0t]S", "D$0SP3", "AtPHHtW", "jsYjwZ", "@_^[Y]", "jAYj|Z", "jeYj|Z", "jAYj}Z", "jeYj}Z", "HVt\"Ht", "Vj[hD-X", "@^][YY", "@_^[Y]", "jeYjjZ", "jpYjvZ", "h@jUhl.X", "j#jAYjnZ", "D$(9|$$", "j#jAYjoZ", "D$4_^[", "j*jAYjgZ", "j*jCYjgZ", "u\\tj*jA", "j*jAYjeZ", "j*jCYjeZ", "u\\tj*jA", "u\\tj*jA", "j*jdYjfZ", "j*jgYjfZ", "u FVhd", "jAYjyZ", "jhYjeZ", "jghX2X", "j%jAYjqZ", "j%jAYjqZ", "j%jCYjoZ", "j%jAYjpZ", "u\\tj%jpZ", "j%jgYjpZ", "u\\tj%jlZ", "j%jCYjlZ", "j%jCYj~Z", "Vjvhp2X", "j+jAYjeZ", "j+j&YjeZ", "j+jAYjdZ", "j+jAYjdZ", "v\\tj+jD", "u\"j+jf", "uB9D$ u<", "O 09_$", "O @9_4", "9_,u2P", "9G$t>9E", "uW9w$t", "QSUVW3", "@_][YY", "t?Jt1Jt#", "79sHt!j", "tIHt6Ht", ";t{HtKHt3", "TtPHt8", "ttHt\\H", "tyHt1HHt\"H", "09_HtBj", "tKHHt<-5&", "t?Ht,Ht", "&&&&&&&&", "&&&&&&&&&&&&", "&&&&&&&&&&&&", "&&&&&&&&&&&&&&", " &&&&&&&&!\"&&#$%", "u>9C@u9", ">/t2j/V", "8[upj%P", "IPh(7X", "t-h\\7X", "Yj-X_^[", "HHu*j.S", "s8Y@PW", "@;D$(r", "HHt|Ht1HH", "EtKJJt1", "t[JtKJt;j", "t\\tHHu{", "D$,<qV", "D$,<qV", "t$<VWS", "9GLtP9", "t=Ht&Ht\\t", "JJtdJtYJu", "t&h@8X", "D$ X9X", "D$ P9X", "t2hh9X", "t$0Ph4:X", "t$4PhD:X", "D$<+D$(", "D$H ;X", "9D$8t%", "u h8;X", "D$8L;X", "t$\\WRP", "D$P#D$T;", "#L$(Q3", ";D$T|\"", "F\\+F`P", "Fh9VPu", "L$$Qh8<X", "Nhh\\<X", "NhhP<X", "Nhh\\<X", "RPh0=X", "VWh8=X", "RPh@=X", "RPhH=X", "RPhX=X", "RPh`=X", "RPhp=X", "RPhx=X", "\\$D9\\$<|", "D$8;D$@v", "t$`h\\>X", "BSh8;X", "?/t+;}", "$VhP?X", "t#VhT?X", "WVSSSh", "SShl?X", "YtEHHu", "?HtvHt?", "_df9sZu", "u'hlAX", "u'hlAX", "u\"hlAX", "}Wf9^ZuQ", "t'h8AX", "YPWh(EX", "YPWhLEX", "tvHHti", "YPWhHFX", "PSWh`FX", "tZhPIX", "tHh\\IX", "t6htIX", "WWh\\JX", "WWhlJX", "YPh|JX", "PWWh,KX", "PWWhHKX", "PWWh<LX", "PWWhhLX", "PWWh4MX", "PWWhHMX", "PWWh\\MX", "WWh\\MX", "L$ WWhHMX", "L$(WWh4MX", "L$8WWh", "L$@WWh", "L$PWWh", "L$ WWh", "L$(WWh", "L$8WWhhLX", "L$@WWS", "L$TWh<LX", "L$ WWU", "L$4WWh", "L$LWWh", "L$4WWh", "L$LWWhHKX", "WWh,KX", "L$LWWh", "D$ ;D$", "WWhlMX", "PWh0NX", "PWh<NX", "PWhPNX", "PWh`NX", "PWhpNX", "PWh|NX", "PWh0OX", "PWhHOX", "PWh\\OX", "PWhxOX", "L$,Wh\\OX", "L$LWhHOX", "L$4Wh0OX", "L$DWh|NX", "L$LWhpNX", "HWh`NX", "L$,Wh<NX", "L$4Wh0NX", "L$LWWh", "L$,WWh", "L$4Wh0OX", "L$DWUS", "HWhxOX", "t9Ht/Ht%Ht", "u'hHPX", "WPh8QX", "Wu'h|PX", "tGhhSX", "u)Wh(SX", "HtJHt3H", "tth UX", "}(h UX", "YPhPUX", "QSUVW3", "YY_^][Y", "D$DPQW", "u'h WX", "u/VVVVVhhWX", "u'9D$$u", "t'h([X", "u)Whd'X", "u'hd'X", "t>Ht5Ht,Whd", "u'hH]X", "u\"hT_X", "G<;FT|]", "G8;FPvS", "Y<;^<|", "Y8;^8v", "y<;~<|", "y8;~8v", "C;\\$,Y|", "C;\\$,Y|", "D$$_^[", "t/SS9]", "9Z(t49Z t/", "r)hP`X", "A{'h0bX", "t*hLbX", "v\"hDcX", "u\"hLdX", "t\"htdX", "t*h(eX", "t'9x$u\"", "t'hPeX", "t'h`eX", "|\"h|eX", ";^pt\"h", "u'h fX", "u*hLfX", "t*h`fX", "u'h gX", "u'h`gX", "F8;G8wA", "F8+G8_^", "N8;H8v-h", "u'hDiX", "u'h gX", "t<9;u)h`gX", "u'h@jX", "SVWu'h@jX", "VVVVVSVV", "_PQQQP", "p`VPSj", "u'hDkX", "C<;F<|", "C8;F8v\\t", "|Y;^8rT", "u\"hH]X", "t\"h0mX", "t\"h<mX", "u\"h`mX", "u\"h nX", "u\"hhnX", "t)Wh4pX", "PVhltX", "YRPj\\tY", "t'h$uX", "t\"h$vX", "t\"hHvX", "t\"hpvX", "Y_^][YY", "Cdf9pZu", "Ht;HHt(HHt", "uU9F$t", "V4_^[Y]", "s$h<xX", "tRHHt9", "u'hlAX", "ItsIu}", "w'hTyX", "s'hxyX", "YPh<yX", "w'hTyX", "u'h(zX", "v*h8zX", "u'hlAX", "u'hlAX", "}6h {X", "shhh{X", "u)WhlAX", "t7HHu7j\\t", "u)WhlAX", "u)WhlAX", "u'hlAX", "t`HtJHHtFHHt4Ht)HHt", "t'hL}X", "u#Uh|}X", "HtzHHtvHHtdHtZHHt%", "u'hlAX", "WtyHthHHtdHHtRHt", "t`h$vX", "tJhHvX", "t4hpvX", "tG9hdt", "tPHtGHt>Ht5Ht,Whd", "YYj<Y9M", "YYr)Wh", "u\"FOtC", "<Fv(<Hv", "Pj}j\\tS", "~%\\tWt'h", ">CR15t'hppX", "9s$t7j", "t$HtWHu", "~%\\tWt ", "t'h8AX", ">CR15t)WhppX", ">CR15t)WhppX", "t:Ht1Ht(Ht", "VjdVh`", "Y_^][YY", "Yu'hlwX", " f9FZu", "f9FZu2", "tYHtyHt", "9nH}!hp", "=CR15t%=O", "VVhTLX", "VVh$LX", "u$hlAX", "u'hlAX", "u)WhlAX", "u)WhlAX", "Wu'hlAX", "u'hlAX", "Xf9^ZuL", "f9^ZuM", "f9^Zu\\", "u'hlAX", "YVj\\th<", "u)WhlAX", "u\"hlAX", "Ht9Ht2Ht)hd", "8:uzj;j", "HtxHtDHt/hd", "t'h8AX", "P$^9T$", "HdW;Hlr", "H\\;H||", "HX;Hxr", "SVWj`3", "t3Ht\"Ht", "v:SWPR", "v:SWPR", "v`YYUS", "^$8^(tJ", "F)HHt7Hu?", "H)SVW3", "@)QPhx", "VWt'h ", "G(#G,Y", "u'h`gX", "u)Wh|PX", "u)Wh|PX", "9{Ht$9=", "98u)h`gX", "F,;C,t", "u'h gX", "9~4t!h(", "GH;CHt", "8$tNPh", "SVWu'h gX", "SSSSSS", "u'hH]X", "^ 9^(u", "9]$t\"hP", ";D$(YY", "9k(t\"h", "YY;k t", "SVWu'h`", "V,_^[]", "Y_^[Y]", "Wt(HHt", "SVWu'h", "SVWu'h`", "f9xZt\\t", "Ht\\tHu5", "$t@Ht7Ht.Ht%Ht", "}+hT Y", "_^][YY", "w\"hl!Y", "1}t'hl@X", "YY_^][YY", "YY_^[Y]", "u$hlAX", "t$h\\$Y", "^YYt$h", "|$ +D$", "QSUVWj", "Wu'h\\%Y", "u'h\\%Y", "j\\tX9D$", "Y_^][Y", "t'h84Y", "p`ht4Y", "#Fx#V|", "w-hT6Y", "gWhL;Y", "|'hT=Y", "SSh4MX", "YPhP?Y", "v$<\\ttM<", "D$ @;D$", "D$4Ph<5Y", "tRHtEHt8Ht+Ht", "9>u'hxBY", "u;VhTCY", "u'hpEY", "ugVhTCY", "YPhDGY", "?\"YYuF", "u\"hlAX", "u'hlAX", "}Khd:Y", "toHtcHtWHtKH", "YPhDNY", "YPh NY", "D$0PWS", "t!Ph(PX", "HtAHt,Wh(OY", "t4Ht(Ht", "vhhXPY", "t/Ht%Ht", "PQh,RY", "\\tt%HHt", "VWPQh`SY", "_^][YY", "1}t)Whl@X", "t$h$YY", "t3Ht*Ht!Ht", "u)Wh0[Y", "u)Wh0[Y", "u)Wh0[Y", "u'h0[Y", "Y_^][Y", "t\"h,bY", "t\"hXbY", "u\"h0[Y", "u\"h<cY", "t%hxcY", "tYHtHHt", "u39k8u\"h", ">9k<u\"h", "t\"hHeY", "uE9M@t@", "uV9MDtQ", "u\"h,aY", "u79{@u'h,fY", "~nQhXfY", "QRh gY", "u\"hT\\Y", "u\"h0[Y", "u\"hXiY", "VPYY_[", "VPYY_[", "VXYY_[", "VXYY_[", "V\\YY_[", "V`YY_[", "t$,ShtcV", "|$$9|$", "D$$_^[", "t)Wh8AX", "Yf9~Zt", "u\"hlAX", "u'hlAX", "u'hlAX", "t#h8|Y", "+w(+G8", "_^][YY", "IY~\"h|", "}(f9wZu", "{D^f97u", "CXf97u", "u)WhlAX", "CCu'hP", "f9_Zu\"", "Yf9^Zt", "_^][YY", "$0YY< u", "Yj<Y9M", "Ht\\Ht-Hux", "SSh4MX", "C9W$|1", "9w r*h", ";G(r*h", "CTf;FT", "CVf;FV", "VVh4MX", "YYVVVV", "CP+FPu", "YY|'h,", "]4VSQP", "WWRPVS", "WWWWQPVS", "VSQPWW", ";E,rxj", "M(SWQP", "u8WSVRP", "uU9Fxu", "u\"hDuY", "YY_^[]", "QSUVW3", "t$h([X", "t'h([X", "YY;]hu", "UVWt'h", "Wt>HHt0Ht)hd", "9~ u'hp", "9{ u*hp", "t7P9D$", "u$hlAX", "PSh<5Y", "|Kh|6X", "tEhx<X", "tCh`jX", "u'hlAX", "u'h gX", "u'h gX", "tYHt8Ht)Whd", "(-uBj(j", "tq9s$tD", ";CR15t'hppX", "f9F\"t7j$", "u%@f9F w", "f9N\"s%", "f9y w#f;y\"w", "G f;F w", "G\"f;F\"r", "Bf9P w", "F\"f;C r", "C\"f;F sZ", "f9P\"u&jH", "u'hD%X", "u)WhD%X", "QSUVWh", "tjHt8Ht0H", "FXPSh@", "I>f;HXu", "u\"h\\aY", "u'h0[Y", "u)Wh0[Y", "^tjHHtfHt?Ht#Hu", "yt`HtEHt*Ht", "O%:K%v)", "_;SHwZ3", "v7f9~Pu1", ">CR15t*hppX", "vKf9~PuE", "YYtDHt:", "tCHHt\"HHuh", "tV_^][", "Y_^][YY", "u$hlAX", "u$hlAX", "t$hP~Y", "F<u&j)", "F<t4j)", "u)h gX", "Y}.SWWW3", "u*h gX", "u0h WX", "D$xPh,", "D$4;D$<", ";t$8wS", "PPPPPhhWX", "f;GTt(f", "u\"hH]X", "u#hd'X", "?YYu&h", "E 9E t$", "u'hd'X", "?YYu'h", "9C(u*j", "SPh<5Y", ">@t4SV", "F4+C4u#", "YY;0t'h,", "YY;0t*h,", "|.h0)X", "u'h gX", "u'h gX", "H8;N8s;P", "u'h gX", "Y@_^[Y", "C;\\$ Y", "u'hH]X", "$j)@Pj", "f9^Zuf", "YY_^]3", "9s(tx9s ts9u", "Y9s$t)", "YYVWRP", "YYVWRP", "YYVWRP", "t(jtSV", "tJHt1HuK", "^XSj Y", "tkIt0I", "G9}|~Nj", "E\\CGC;}||", "9]pu$9]ht", "YY9]dt", "u'hDuY", "tSHtDHt>", "HHt@Ht", "jdSjPh", "jdSj2h", "jdSjFh|", "u\"h$\\tZ", "YY_^][", "t\"hL\\tZ", "_^][YY", "_^][YY", "t/Ht%Ht", "u'hl.Z", "Pjdj\\tV", "u*WWWj(W", "SVWj _", "{(9{$u", "O@;H s\\t", "O@;H(s\\t", "tUHt Ht", "Gh;G\\r", "Bf9|EDu", "f9|MDu", "~\\t9]ptt;", "5arenS", "5bdetW", "L$83L$X", "D$43D$T", "\\$,!|$\\", "D$\\3T$0", "T$t3L$8", "L$,3|$0", "t<Ht2Ht(Ht", "\\tD$@3T$@", "L$$1D$,", "L$t3D$8", "L$,!\\$t", "T$t3t$8", "D$t3|$8", "L$t3D$8", "L$t3t$0", "3D$ _3", "3T$ ^[", "uRSUWh", "}RSUWh85Z", "t@hX5Z", "t@hX5Z", "Yt@hX5Z", "Y_^][Y", "G7Ht0Ht$", "_^][YY", "uXSUVWh", "SVWjPj", "G0PWh$8Z", "G0PWh<8Z", "G0PWhP8Z", "uEh@9Z", "tIh@9Z", "G0PWh@9Z", "ItkItH", "G|f\\tE4", "ItlItP", "YY_^][", "uSSUhh;Z", "Gpf;D$", "uEh4<Z", "yEh4<Z", "uEhD=Z", "tEhD=Z", "uEh >Z", "tEh >Z", ";H,}UU", "PUh0>Z", "9F|tXh", "uRh<?Z", ";{\\uJh", "tAUhPAZ", "tAUh`AZ", "{|ShxAZ", "K|;A0|7PSh", "u=UhT=Z", "90tAUh", "f9FpuHh", "HYYtRHu", "tYWh84N", "G ^][;", "uTSh<DZ", "uBh|DZ", "rJh|DZ", "t=Uh8EZ", "tAUh\\EZ", "tAUhxEZ", "Y_^][Y", "@_^][Y", "uLh8FZ", "uEhTFZ", "uOhLHZ", "uQhTIZ", "uOhtIZ", "t-Ht$Ht", "Ht\\tHu;", "Bt*Ht!Ht", "uOhPLZ", "uRhlLZ", "_^][YY", ";^tW|O", "|Rh<NZ", "1PShxNZ", "9oPuBU", "|RSUWh", "uRhTXZ", "t=j VW", "9:t\\t;M", "L$4SUVW", "tFhtYZ", "}IhtYZ", "}IhtYZ", "S|SVWh", "tnWSSj", "SVWj ^Vj", "Wu'h0[Z", "u)WhL[Z", "u)Whl[Z", ";:t$;]", "w&SVht\\Z", "SVh@\\Z", "u)Wh@jX", "t>Ht5Ht,Ht#Ht", "VWu'ht", "uKWhd'X", "vOhL`Z", "\\ttnHtb", "u'h$bZ", "PGh8bZ", "YY_^[]", "VWu'hHcZ", "u\"h dZ", "u\"hLdZ", "t>HHt5", "s'hdeZ", "?r'ht_Z", "r'h,fZ", "t'hTfZ", "w\"h@gZ", "t$hDhZ", "u&WhDiX", "u\"hDiX", "u'hDiX", "u\"hDiX", "_^][YY", "|gh\\jZ", "t\"h kZ", "t)hPlZ", "t'hPlZ", "u\"hd'X", "w\"h(nZ", "j ^uL=", "tCHHt)", "tOHHt3", "YYv/j Y8M", "u'h oZ", ">[u0h\\", "SWhtHZ", "8-u Sj", "<t'h0wZ", "u'hPwZ", "u'hpwZ", "u'hpwZ", "u\"hlyZ", "s'h |Z", "r'h4|Z", "s'hp|Z", "u hd'X", "u'hd'X", "Y_^][Y", "SVWr'h", "@t5Kt7", "<@~Z<[}V,AF", "Wqt)Wh", "tCIt9It/It%It", "QPh4#X", "PSWRQh", "HHt;Ht", "|$(_9~", "u)hd'X", "t'h ;X", "VWj`^V", "VWjP_W", "j|Yj{Z", "j}Yj{Z", "jAYj{Z", "SUVWja", ";7~,hA", "Yj jAYjrZ", "@_^][Y", "VW}phv", "HtwHt[HtKHt", "~\\tj&jg", "3Hx3p|", "0D>@GA", "D$L1D$<", "T$P1T$@", "L$T1L$D", "L$X1L$H", "t$ )|$ ", "D$D1D$4", "D$H1D$8", "D$L1D$<", "D$P1D$@", "D$T1D$D", "D$X1D$Hj", "D$ 1D$@", "D$$1D$D", "D$@1D$0", "D$D1D$4", "D$H1D$8", "D$<3D$L", "L$@3L$P", "D$D3D$T", "2tWNtLNt-", "PD;QDu", "t\\t9PLt", "t)9P@t", "td9^lu_", "6t.-@!", "wFt@Ht9Ht(HHt ", "Ht,Ht$HHt", "WWWWWW", "<:tj< tf<;tb<,t^", "SSSSSW", "SSSSSS", "PVWSSSSWS", "PVWSSSSj", "PVWSSSSSj", "PVWSSSSSh", "PVWSSSSSj", "PVWSSSWSS", "SSSSSS", "tDHt9Ht(Ht", "t2Ht!Ht", "Qt3Ht#H", "t\\tA@@;", "t\\tA@@;", "YYt2HHt\"Hu", "Ht3Hu<", "@YY_^[", "HHt'Ht", "Qt~RSW", "Ht\\tHHu/j", "A8GGNu", "A89Qtu", "whWj%Sj", "jDYjhZ", "wXQWj ", "t&9_ u", "F4SW;D$", "FD_^[]", "QSUVWh", "whWj%Sj", "D$d+D$D", "D$\\9\\$<t", "D$d+D$D", "79\\$<t", "D$d+D$D", "D$d+D$Dj ", "D$`X9D$$~", "OD9D$$", "D$d+D$Dj0", "\\$$9\\$\\te", "t$49t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$<t", "t$49t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$<t#", "D$D9\\$\\", "D$\\+D$D", "D$\\+D$D", "\\$,9\\$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D3", "D$\\9t$,tI", "t$49t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$<t#", "t$,9t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$,t ", "t$,9t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$,t ", "t$,9t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$,t(", "t$49t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$<t#", "t$,9t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "t$,9t$\\", "D$\\+D$D", "D$\\+D$D", "t$,9t$\\", "D$\\+D$D", "D$\\+D$D", "D$d+D$D", "D$\\9t$,t(", "D$09|$", "D$pj@P", "AXSVWt", "D$,hT;[", "Hugj*X", "9Olt)9", "9_luv;", "Wj$Pjr", "Yj2^Vj", "Y9_lt\\t", "wXUWj ", ";XDuZS", ";Hhu&Q", "Gl9ADv", " u!j2j", "}\"jP^j", "RRj Qj ", "E 9uDu", " 9]$t(", "PSSSSSS", "*t*Ht#Ht", "2t2Ht+", "t'Ht Ht", "Y@_^Y]", "HtqHt<Ht", "GPSV;E", "F(9F$u", "9_8tS9_@tN9_DtI;", "t\\9y tW9y$tR", "ND)~p)~l", "Mlf+Mp", "El+Ep=", "Mlf+Md", "f99u?F", "toWSVVj", "u=hH2X", "jhYjeZ", "jdYjoZ", "jdYjpZ", "u8h82X", "jgYjfZ", "jqYjdZ", "jpYjgZ", "D$ _^[", "j\\tjAYjtZ", "D$0P9|$(t", "Y9|$0u@", "QVWjph", "0WWWWW", "0WWWWW", "W95<x\\", "QQSVWd", "0SSSSS", "t$hXtU", "F\\=h{U", "^F<-uB", "<xtX<XtT", "uBh@tR", "u&hpzU", "tNIt?It0It ", "t$<\"u\\t3", ">=Yt1j", "< tK<\\ttG", "j@j ^V", "HHtXHHt", ">If90t", "0A@@Ju", "t\"SS9]", "s[S;7|G;w", "tR99u2", "URPQQhx", "0SSSSS", "0SSSSS", "\\tX 9} ", "^SSSSS", "j\"^SSSSS", "v\\tN+D$", ".;1s(N", "HHt4HHt", "Ht\\Ht,", "teHtFHt&Hu", "ty<%tA", "PPPPPPPP", "PPPPPPPP", "t+WWVPV", ";t$,v-", "UQPXY]Y[", "_VVVVV", "^WWWWW", "0Wh|}\\", ">:u8FV", "VVVVVQRSSj", "0SSSSS", "v\\tN+D$", "_VVVVV", "<+t(<-t$:", "+t HHt", "PQSUVW", "PQSUVW", "sRj\"h4", "ti;D$ ", "^WWWWW", "^SSSSS", "^SSSSS", "<\\tM</tI", "PPPPPPPP", "HYYtJHt9H", "<at9<rt,<wt", "u[SSSP", "tGHt.Ht&", "^SSSSS", "8VVVVV", "tGHt.Ht&", "^SSSSS", "8VVVVV", "tRHtCHt4Ht%HtFHHt", "^WWWWW", "slj1X+", "^SSSSS", "^SSSSS", "0WWWWW", "0WWWWW", "@@BBf;", "@@BBf;", "0WWWWW", "AAFFf;", "0WWWWW", "AAFFf;", "VC20XC00U", "T`00P`00P", "V++}V++}", "L&&jL&&jl66Zl66Z~??A~??A", "Oh44\\h44\\Q", "sb11Sb11S*", "RF##eF##e", "&N''iN''i", "X,,tX,,t4", "v;;Mv;;M", "R)){R)){", ">^//q^//q", ",@  `@  `", "r99Kr99K", "f33Uf33U", "x<<Dx<<D%", "p88Hp88H", "uB!!cB!!c ", "z==Gz==G", "D\"\"fD\"\"fT**~T**~;", ";d22Vd22Vt::Nt::N", "H$$lH$$l", "Cn77Yn77Y", "J%%oJ%%o\\..r\\..r8", "|>>B|>>Bq", "j55_j55_", "P((xP((x", "Z--wZ--w", "P~AeS~AeS", "pHhXpHhX", "lZrNlZrN", "6-9'6-9'", "$6.:$6.:", "ZwKiZwKi", "T~FbT~Fb", "*?#1*?#1", ">8$4,8$4,", "pHl\\tHl\\t", "AES for x86, CRYPTOGAMS by <appro@openssl.org>", ")QZ^&3", "V4_^[]", "X<[]_^", "_<[]_^", "d$\\_^[]", "#L$(#T$,", "#L$(#T$,", "D7q/;M", "DlSHA512 block transform for x86, CRYPTOGAMS by <appro@openssl.org>", "SHA1 block transform for x86, CRYPTOGAMS by <appro@openssl.org>", "SHA256 block transform for x86, CRYPTOGAMS by <appro@openssl.org>", "Montgomery Multiplication for x86, CRYPTOGAMS by <appro@openssl.org>", "\\$ 3D$", "\\$43D$03\\$8", "GF(2^m) Multiplication for x86, CRYPTOGAMS by <appro@openssl.org>", "o0_^[]", "d$P_^[]", "d$t_^[]", "d$t_^[]", "AES for Intel AES-NI, CRYPTOGAMS by <appro@openssl.org>", "*p[[[[[[[[[[[[[[[[", "Vector Permutation AES for x86/SSSE3, Mike Hamburg (Stanford University)", "d$0_^[]", "d$0_^[]", "GHASH for x86, CRYPTOGAMS by <appro@openssl.org>", "\\tOO!OBn", "OO!OBn", "?mRRUR", "\\CKK1Kbz", ")KK1Kbz", "#JJ5Jj", " JJ5Jj", "sg<]]i]", "II9Irp", ";II9Irp", "HH=Hzu", "2HH=Hzu", "=d__a_", "^u}TTMT", "FMM)MRd", "MM)MRd", "LL-LZa", "LL-LZa", "NN%NJk", "NN%NJk", "\\t\\t$\\tH-", "A\\t\\t$\\tH-", "Pu\\\\m\\", "string too long", "invalid string position", "Unknown exception", "EncodePointer", "DecodePointer", "FlsFree", "FlsSetValue", "FlsGetValue", "FlsAlloc", "CorExitProcess", "runtime error ", "TLOSS error", "SING error", "DOMAIN error", "An application has made an attempt to load the C runtime library incorrectly.", "Please contact the application's support team for more information.", "- Attempt to use MSIL code from this assembly during native code initialization", "This indicates a bug in your application. It is most likely the result of calling an MSIL-compiled (/clr) function from a native constructor or from DllMain.", "- not enough space for locale information", "- Attempt to initialize the CRT more than once.", "This indicates a bug in your application.", "- CRT not initialized", "- unable to initialize heap", "- not enough space for lowio initialization", "- not enough space for stdio initialization", "- pure virtual function call", "- not enough space for _onexit/atexit table", "- unable to open console device", "- unexpected heap error", "- unexpected multithread lock error", "- not enough space for thread data", "This application has requested the Runtime to terminate it in an unusual way.", "Please contact the application's support team for more information.", "- not enough space for environment", "- not enough space for arguments", "- floating point support not loaded", "Microsoft Visual C++ Runtime Library", "<program name unknown>", "Runtime Error!", "Program: ", "`h````", "xpxxxx", " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", "bad exception", " Complete Object Locator'", " Class Hierarchy Descriptor'", " Base Class Array'", " Base Class Descriptor at (", " Type Descriptor'", "`local static thread guard'", "`managed vector copy constructor iterator'", "`vector vbase copy constructor iterator'", "`vector copy constructor iterator'", "`dynamic atexit destructor for '", "`dynamic initializer for '", "`eh vector vbase copy constructor iterator'", "`eh vector copy constructor iterator'", "`managed vector destructor iterator'", "`managed vector constructor iterator'", "`placement delete[] closure'", "`placement delete closure'", "`omni callsig'", " delete[]", " new[]", "`local vftable constructor closure'", "`local vftable'", "`udt returning'", "`copy constructor closure'", "`eh vector vbase constructor iterator'", "`eh vector destructor iterator'", "`eh vector constructor iterator'", "`virtual displacement map'", "`vector vbase constructor iterator'", "`vector destructor iterator'", "`vector constructor iterator'", "`scalar deleting destructor'", "`default constructor closure'", "`vector deleting destructor'", "`vbase destructor'", "`string'", "`local static guard'", "`typeof'", "`vcall'", "`vbtable'", "`vftable'", "operator", " delete", "__unaligned", "__restrict", "__ptr64", "__clrcall", "__fastcall", "__thiscall", "__stdcall", "__pascal", "__cdecl", "__based(", "GetProcessWindowStation", "GetUserObjectInformationA", "GetLastActivePopup", "GetActiveWindow", "MessageBoxA", "_nextafter", "_hypot", "`h`hhh", "xppwpp", " !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~", "HH:mm:ss", "dddd, MMMM dd, yyyy", "MM/dd/yy", "December", "November", "October", "September", "August", "February", "January", "GAIsProcessorFeaturePresent", "KERNEL32", "SunMonTueWedThuFriSat", "JanFebMarAprMayJunJulAugSepOctNovDec", "CONIN$", "CONOUT$", "1#QNAN", "1#SNAN", "Local\\{C15730E2-145C-4c5e-B005-3BC753F42475}-once-flag", "Day of month value is out of range 1..31", "Year is out of valid range: 1400..10000", "Month number is out of range 1..12", "could not convert calendar time to UTC time", "Day of month is not valid for year", "Visual C++ CRT: Not enough memory to complete call to strerror.", "Illegal byte sequence", "Directory not empty", "No locks available", "Filename too long", "Resource deadlock avoided", "Result too large", "Domain error", "Broken pipe", "Too many links", "Read-only file system", "Invalid seek", "No space left on device", "File too large", "Inappropriate I/O control operation", "Too many open files", "Too many open files in system", "Invalid argument", "Is a directory", "Not a directory", "No such device", "Improper link", "File exists", "Resource device", "Bad address", "Permission denied", "Not enough space", "Resource temporarily unavailable", "No child processes", "Bad file descriptor", "Exec format error", "Arg list too long", "No such device or address", "Input/output error", "Interrupted function call", "No such process", "No such file or directory", "Operation not permitted", "UTF-16LE", "UNICODE", "]vQ<)8", "|)P!?Ua0", "Eb2]A=", "u?^p?o4", "y1~?|\"", "?|I7Z#", ">,'1D=", "?g)([|X>=", ":h\"?bC", "@H#?43", "Ax#?uN}*", "r7Yr7=", "F0$?3=1", "H`$?h|", "&?~YK|", "sU0&?W", "<8bunz8", "?#%X.y", "F||<##", "<@En[vP", "<8bunz8", "l,kg<i", "<@En[vP", "GetUserObjectInformationW", "MessageBoxW", "?Dj0Q:W$=", "5s3R6=", ".=bad allocation", "vector<T> too long", "boost::thread_resource_error", "C:\\boost\\boost/exception/detail/exception_ptr.hpp", "class boost::shared_ptr<class boost::exception_detail::clone_base const > __cdecl boost::exception_detail::get_bad_alloc<0x2a>(void)", "map/set<T> too long", "invalid map/set<T> iterator", "TXT_DB part of OpenSSL 1.0.1j 15 Oct 2014", "DTLSv1 part of OpenSSL 1.0.1j 15 Oct 2014", "\\t\\t\\t\\t\\t\\t\\t\\t", "TLSv1 part of OpenSSL 1.0.1j 15 Oct 2014", " deflate 1.2.8 Copyright 1995-2013 Jean-loup Gailly and Mark Adler ", "SSLv3 part of OpenSSL 1.0.1j 15 Oct 2014", "\\tOO!OBn", "?mRRUR", "\\CKK1Kbz", "#JJ5Jj", "sg<]]i]", "II9Irp", "HH=Hzu", "=d__a_", "^u}TTMT", "FMM)MRd", "LL-LZa", "NN%NJk", "\\t\\t$\\tH-", "Pu\\\\m\\", "3SHA part of OpenSSL 1.0.1j 15 Oct 2014", "`cC#( ", "\\t``@ PP@", "=trF6,#", "haI)|pL<", "!hcK+dbF&", "xrJ:DCG", "?HAI\\t81\\t9dcG'", "lcO/<1", "h`H(|sO?", "*laM-\\SO", "`bB\"(!\\t)", "hbJ*(\"", "`@ `QE", "DcO/lcK+hSK", "+(bF&drJ:x#", "rB2pBB", "sC3pcG'd", "`H(hqA1p", "sK;xPL", "AI\\tHpH8x", "p@0pqE5tsO?|1", "`D$daM-l", "\\sG7tPD", "P1\\t98\"", "PRM=|q", "LAI)haL<|p\\t\\t", "! !K+hcF&db", "<<0A1pq", "I\\tHA\\t981G'dc", "H(h`O?|s", "TRG7ts", "+(#E%da", "B\"`b\\t)(!", "D@D/lcO+hcK", "\"`bB303", "&dbF:xrJ'$#", "3psC'dcG,", "(h`H1pqA", "#`cC# #", "\\tHAI8xpH", "0pp@5tqE?|sO541", "$d`D-laM", "H@H9xqI", "\\SO7tsG", "%daE<<0", "PP@981\\t&$\"", "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA", "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-RC4-SHA:ECDHE-RSA-RC4-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA:DHE-RSA-CAMELLIA128-SHA:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:EDH-RSA-DES-CBC3-SHA:AES128-SHA:CAMELLIA128-SHA:AES256-SHA:CAMELLIA256-SHA:DES-CBC3-SHA:RC4-SHA:RC4-MD5:!SSLv2", "# This file contains stored Diffie-Hellman parameters for future use.", "# You *do not* need to edit this file.", "?456789:;<=", " !\"#$%&'()*+,-./0123", " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~", " !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~", " !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", "\\drivers\\etc\\hosts", " inflate 1.2.8 Copyright 1995-2013 Mark Adler ", "Qkkbal", "[-&LMb#{'", "w+OQvr", ")\\ZEo^m/", "H*0\"ZOW", "l!;b\\tF", "mj>zjZ", "IiGM>nw", "ewh/?y", "OZw3(?", "V_:X1:", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", "0123456789", "0123456789abcdefghijklmnopqrstuvwxyz", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ECDH part of OpenSSL 1.0.1j 15 Oct 2014", "CONF_def part of OpenSSL 1.0.1j 15 Oct 2014", "\\t#\\t%\\t+\\t/\\t5\\tC\\tI\\tM\\tO\\tU\\tY\\t_\\tk\\tq\\tw\\t", " ' ) - 3 G M Q _ c e i w } ", "!5!A!I!O!Y![!_!s!}!", "\"!\"%\"+\"1\"9\"K\"O\"c\"g\"s\"u\"", "#'#)#/#3#5#E#Q#S#Y#c#k#", "$)$=$A$C$M$_$g$k$y$}$", "%'%1%=%C%K%O%s%", "&'&)&5&;&?&K&S&Y&e&i&o&{&", "'5'7'M'S'U'_'k'm's'w'", "(!(1(=(?(I(Q([(](a(g(u(", ")!)#)?)G)])e)i)o)u)", "*%*/*O*U*_*e*k*m*s*", "+'+1+3+=+?+K+O+U+i+m+o+{+", ",#,/,5,9,A,W,Y,i,w,", "-;-C-I-M-a-e-q-", ".%.-.3.7.9.?.W.[.o.y.", "/'/)/A/E/K/M/Q/W/o/u/}/", "0#0)070;0U0Y0[0g0q0y0}0", "1!1'1-191C1E1K1]1a1g1m1s1", "2)252Y2]2c2k2o2u2w2{2", "3%3+3/353A3G3[3_3g3k3s3y3", "474E4U4W4c4i4m4", "5-535;5A5Q5e5o5q5w5{5}5", "6#6165676;6M6O6S6Y6a6k6m6", "7?7E7I7O7]7a7u7", "8!83858A8G8K8S8W8_8e8o8q8}8", "9#9%9)9/9=9A9M9[9k9y9}9", ":':+:1:K:Q:[:c:g:m:y:", ";!;#;-;9;E;S;Y;_;q;{;", "<)<5<C<O<S<[<e<k<q<", "=!=-=3=7=?=C=o=s=u=y={=", ">#>)>/>3>A>W>c>e>w>", "?7?;?=?A?Y?_?e?g?y?}?", "@!@%@+@1@?@C@E@]@a@g@m@", "A!A3A5A;A?AYAeAkAwA{A", "B#B)B/BCBSBUB[BaBsB}B", "C%C'C3C7C9COCWCiC", "D#D)D;D?DEDKDQDSDYDeDoD", "E+E1EAEIESEUEaEwE}E", "CONF part of OpenSSL 1.0.1j 15 Oct 2014", "ECDSA part of OpenSSL 1.0.1j 15 Oct 2014", "X.509 part of OpenSSL 1.0.1j 15 Oct 2014", "0123456789ABCDEF", "0123456789ABCDEF", "0123456789ABCDEF", "0123456789ABCDEF", "SHA-256 part of OpenSSL 1.0.1j 15 Oct 2014", "SHA-512 part of OpenSSL 1.0.1j 15 Oct 2014", "SHA1 part of OpenSSL 1.0.1j 15 Oct 2014", "Diffie-Hellman part of OpenSSL 1.0.1j 15 Oct 2014", "EVP part of OpenSSL 1.0.1j 15 Oct 2014", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "?456789:;<=", " !\"#$%&'()*+,-./0123", ")E\\\\*=", "U)l:T^8rv", "\"cs73KI", "|<C!FReQ", "MinghuaQu)", "p+\"\\tHr9", "MinghuaQuS", "MinghuaQu", "MinghuaQu", ")E\\\\*=", "MinghuaQu", "Q/xtJ2", "MinghuaQuw", "X!;3; ", "y!=\\tLK", "`dub`D", "MinghuaQu", "(fS{ggRcjh", "UUUUUUUUUUUa", "MinghuaQu", "]&g''}", "UUUUUUUUUUUUUU<o(", "oMinghuaQu", "tfjgvmfv", "u+,@\\tM", "VggjeK uO5n", "FV|FgUV", "ASN.1 part of OpenSSL 1.0.1j 15 Oct 2014", "lhash part of OpenSSL 1.0.1j 15 Oct 2014", "Stack part of OpenSSL 1.0.1j 15 Oct 2014", "EC part of OpenSSL 1.0.1j 15 Oct 2014", "RSA part of OpenSSL 1.0.1j 15 Oct 2014", "PEM part of OpenSSL 1.0.1j 15 Oct 2014", "0123456789ABCDEF", "Big Number part of OpenSSL 1.0.1j 15 Oct 2014", "MD5 part of OpenSSL 1.0.1j 15 Oct 2014", "RAND part of OpenSSL 1.0.1j 15 Oct 2014", "AES part of OpenSSL 1.0.1j 15 Oct 2014", "deque<T> too long", ".\\crypto\\bio\\bio_lib.c", "memory buffer", "CERTIFICATE REQUEST", "NEW CERTIFICATE REQUEST", "X509 CRL", "CERTIFICATE", "RSA PRIVATE KEY", "RSA PUBLIC KEY", "PUBLIC KEY", "EC PRIVATE KEY", ".\\crypto\\rand\\md_rand.c", "....................", "You need to read the OpenSSL FAQ, http://www.openssl.org/support/faq.html", ".\\crypto\\engine\\eng_init.c", ".\\crypto\\ex_data.c", ".\\crypto\\err\\err.c", "int_err_get (err.c)", "int_thread_get (err.c)", "lib(%lu)", "func(%lu)", "reason(%lu)", "error:%08lX:%s:%s:%s", "ec_pre_comp", "engine", "dynlock", "debug_malloc2", "RSA_blinding", "readdir", "getservbyname", "gethostbyname", "debug_malloc", "ssl_method", "ssl_sess_cert", "ssl_session", "ssl_cert", "ssl_ctx", "x509_store", "evp_pkey", "x509_req", "x509_crl", "x509_pkey", "x509_info", "ex_data", "<<ERROR>>", ".\\crypto\\cryptlib.c", "pointer != NULL", "dynamic", "OPENSSL_ia32cap", "_OPENSSL_isservice", "OPENSSL", "OpenSSL: FATAL", "%s(%d): OpenSSL internal error, assertion failed: %s", ".\\crypto\\buffer\\buffer.c", ".\\crypto\\bn\\bn_lib.c", ".\\crypto\\bn\\bn_blind.c", ".\\crypto\\bn\\bn_ctx.c", "EC_PRIVATEKEY", "publicKey", "parameters", "privateKey", "ECPKPARAMETERS", "value.implicitlyCA", "value.parameters", "value.named_curve", "ECPARAMETERS", "cofactor", "fieldID", "version", "X9_62_CURVE", "X9_62_FIELDID", "fieldType", "p.char_two", "p.prime", "X9_62_CHARACTERISTIC_TWO", "p.ppBasis", "p.tpBasis", "p.onBasis", "p.other", "X9_62_PENTANOMIAL", ".\\crypto\\ec\\ec_asn1.c", "Enter PEM pass phrase:", "phrase is too short, needs to be at least %d chars", "ENCRYPTED", "DEK-Info: ", "ANY PRIVATE KEY", "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", "PARAMETERS", "X509 CERTIFICATE", "TRUSTED CERTIFICATE", "PKCS #7 SIGNED DATA", "Expecting: ", ".\\crypto\\pem\\pem_lib.c", "Proc-Type: ", "-----BEGIN ", "-----END ", "RSA_PSS_PARAMS", "trailerField", "saltLength", "maskGenAlgorithm", "hashAlgorithm", ".\\crypto\\rsa\\rsa_lib.c", "X509_PUBKEY", "public_key", ".\\crypto\\asn1\\x_pubkey.c", ".\\crypto\\evp\\p_lib.c", "length", "X509_CRL", "signature", "X509_CRL_INFO", "revoked", "nextUpdate", "lastUpdate", "issuer", "sig_alg", "X509_REVOKED", "extensions", "revocationDate", "serialNumber", ".\\crypto\\asn1\\x_crl.c", ".\\crypto\\ec\\ec_key.c", "PKCS7_ATTR_VERIFY", "PKCS7_ATTR_SIGN", "PKCS7_ATTRIBUTES", "PKCS7_DIGEST", "digest", "PKCS7_ENCRYPT", "PKCS7_SIGN_ENVELOPE", "PKCS7_ENC_CONTENT", "algorithm", "content_type", "PKCS7_RECIP_INFO", "enc_key", "key_enc_algor", "PKCS7_ENVELOPE", "enc_data", "recipientinfo", "PKCS7_ISSUER_AND_SERIAL", "serial", "PKCS7_SIGNER_INFO", "unauth_attr", "enc_digest", "digest_enc_alg", "auth_attr", "digest_alg", "issuer_and_serial", "PKCS7_SIGNED", "signer_info", "contents", "md_algs", "d.encrypted", "d.digest", "d.signed_and_enveloped", "d.enveloped", "d.sign", "d.data", "d.other", "X509_REQ", "req_info", "X509_REQ_INFO", "attributes", "pubkey", "subject", "NETSCAPE_CERT_SEQUENCE", ".\\crypto\\evp\\digest.c", "ctx->digest->md_size <= EVP_MAX_MD_SIZE", "ADVAPI32.DLL", "KERNEL32.DLL", "NETAPI32.DLL", "NetStatisticsGet", "NetApiBufferFree", "CryptAcquireContextW", "CryptGenRandom", "CryptReleaseContext", "USER32.DLL", "GetForegroundWindow", "GetCursorInfo", "GetQueueStatus", "CreateToolhelp32Snapshot", "CloseToolhelp32Snapshot", "Heap32First", "Heap32Next", "Heap32ListFirst", "Heap32ListNext", "Process32First", "Process32Next", "Thread32First", "Thread32Next", "Module32First", "Module32Next", ".\\crypto\\engine\\eng_table.c", ".\\crypto\\engine\\eng_list.c", "OPENSSL_ENGINES", "w:\\openssl\\bin/lib/engines", "DIR_LOAD", "DIR_ADD", "LIST_ADD", ".\\crypto\\engine\\eng_lib.c", ".\\crypto\\stack\\stack.c", ".\\crypto\\lhash\\lhash.c", "<NULL>", "0123456789ABCDEF", "0123456789abcdef", ".\\crypto\\bio\\b_print.c", "doapr()", ".\\crypto\\mem_dbg.c", ".\\crypto\\buffer\\buf_str.c", ".\\crypto\\bn\\bn_exp.c", ".\\crypto\\bn\\bn_rand.c", ".\\crypto\\asn1\\asn1_lib.c", " offset=", "address=", ", Type=", "Field=", "rsaesOaep", "RSAES-OAEP", "aes-256-cbc-hmac-sha1", "AES-256-CBC-HMAC-SHA1", "aes-192-cbc-hmac-sha1", "AES-192-CBC-HMAC-SHA1", "aes-128-cbc-hmac-sha1", "AES-128-CBC-HMAC-SHA1", "rc4-hmac-md5", "RC4-HMAC-MD5", "aes-256-xts", "AES-256-XTS", "aes-128-xts", "AES-128-XTS", "rsassaPss", "RSASSA-PSS", "Any Extended Key Usage", "anyExtendedKeyUsage", "id-camellia256-wrap", "id-camellia192-wrap", "id-camellia128-wrap", "aes-256-ctr", "AES-256-CTR", "aes-192-ctr", "AES-192-CTR", "aes-128-ctr", "AES-128-CTR", "id-aes256-wrap-pad", "aes-256-ccm", "id-aes256-CCM", "aes-256-gcm", "id-aes256-GCM", "id-aes192-wrap-pad", "aes-192-ccm", "id-aes192-CCM", "aes-192-gcm", "id-aes192-GCM", "id-aes128-wrap-pad", "aes-128-ccm", "id-aes128-CCM", "aes-128-gcm", "id-aes128-GCM", "id-alg-PWRI-KEK", "dmdName", "deltaRevocationList", "supportedAlgorithms", "houseIdentifier", "uniqueMember", "distinguishedName", "protocolInformation", "enhancedSearchGuide", "crossCertificatePair", "certificateRevocationList", "authorityRevocationList", "cACertificate", "userCertificate", "userPassword", "seeAlso", "roleOccupant", "member", "supportedApplicationContext", "presentationAddress", "preferredDeliveryMethod", "destinationIndicator", "registeredAddress", "internationaliSDNNumber", "x121Address", "facsimileTelephoneNumber", "teletexTerminalIdentifier", "telexNumber", "telephoneNumber", "physicalDeliveryOfficeName", "postOfficeBox", "postalAddress", "businessCategory", "searchGuide", "Permanent Identifier", "id-on-permanentIdentifier", "X509v3 Freshest CRL", "freshestCRL", "Microsoft Local Key set", "LocalKeySet", "GOST R 3410-2001 Parameter Set Cryptocom", "id-GostR3410-2001-ParamSet-cc", "GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom", "id-GostR3411-94-with-GostR3410-2001-cc", "GOST R 34.11-94 with GOST R 34.10-94 Cryptocom", "id-GostR3411-94-with-GostR3410-94-cc", "GOST 34.10-2001 Cryptocom", "gost2001cc", "GOST 34.10-94 Cryptocom", "gost94cc", "GOST 28147-89 Cryptocom ParamSet", "id-Gost28147-89-cc", "id-GostR3410-94-bBis", "id-GostR3410-94-b", "id-GostR3410-94-aBis", "id-GostR3410-94-a", "id-GostR3410-2001-CryptoPro-XchB-ParamSet", "id-GostR3410-2001-CryptoPro-XchA-ParamSet", "id-GostR3410-2001-CryptoPro-C-ParamSet", "id-GostR3410-2001-CryptoPro-B-ParamSet", "id-GostR3410-2001-CryptoPro-A-ParamSet", "id-GostR3410-2001-TestParamSet", "id-GostR3410-94-CryptoPro-XchC-ParamSet", "id-GostR3410-94-CryptoPro-XchB-ParamSet", "id-GostR3410-94-CryptoPro-XchA-ParamSet", "id-GostR3410-94-CryptoPro-D-ParamSet", "id-GostR3410-94-CryptoPro-C-ParamSet", "id-GostR3410-94-CryptoPro-B-ParamSet", "id-GostR3410-94-CryptoPro-A-ParamSet", "id-GostR3410-94-TestParamSet", "id-Gost28147-89-CryptoPro-RIC-1-ParamSet", "id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet", "id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet", "id-Gost28147-89-CryptoPro-D-ParamSet", "id-Gost28147-89-CryptoPro-C-ParamSet", "id-Gost28147-89-CryptoPro-B-ParamSet", "id-Gost28147-89-CryptoPro-A-ParamSet", "id-Gost28147-89-TestParamSet", "id-GostR3411-94-CryptoProParamSet", "id-GostR3411-94-TestParamSet", "id-Gost28147-89-None-KeyMeshing", "id-Gost28147-89-CryptoPro-KeyMeshing", "GOST R 34.10-94 DH", "id-GostR3410-94DH", "GOST R 34.10-2001 DH", "id-GostR3410-2001DH", "GOST R 34.11-94 PRF", "prf-gostr3411-94", "GOST 28147-89 MAC", "gost-mac", "gost89-cnt", "GOST 28147-89", "gost89", "GOST R 34.10-94", "gost94", "GOST R 34.10-2001", "gost2001", "HMAC GOST 34.11-94", "id-HMACGostR3411-94", "GOST R 34.11-94", "md_gost94", "GOST R 34.11-94 with GOST R 34.10-94", "id-GostR3411-94-with-GostR3410-94", "GOST R 34.11-94 with GOST R 34.10-2001", "id-GostR3411-94-with-GostR3410-2001", "cryptocom", "cryptopro", "whirlpool", "dsa_with_SHA256", "dsa_with_SHA224", "hmacWithSHA512", "hmacWithSHA384", "hmacWithSHA256", "hmacWithSHA224", "hmacWithMD5", "ecdsa-with-SHA512", "ecdsa-with-SHA384", "ecdsa-with-SHA256", "ecdsa-with-SHA224", "ecdsa-with-Specified", "ecdsa-with-Recommended", "id-aes256-wrap", "id-aes192-wrap", "id-aes128-wrap", "id-ct-asciiTextWithCRLF", "id-smime-ct-compressedData", "CA Repository", "caRepository", "id-it-suppLangTags", "Diffie-Hellman based MAC", "id-DHBasedMac", "password based MAC", "id-PasswordBasedMAC", "hmac-sha1", "HMAC-SHA1", "hmac-md5", "HMAC-MD5", "seed-cfb", "SEED-CFB", "seed-ofb", "SEED-OFB", "seed-cbc", "SEED-CBC", "seed-ecb", "SEED-ECB", "X509v3 Certificate Issuer", "certificateIssuer", "X509v3 Issuing Distrubution Point", "issuingDistributionPoint", "X509v3 Subject Directory Attributes", "subjectDirectoryAttributes", "camellia-256-ofb", "CAMELLIA-256-OFB", "camellia-192-ofb", "CAMELLIA-192-OFB", "camellia-128-ofb", "CAMELLIA-128-OFB", "camellia-256-cfb8", "CAMELLIA-256-CFB8", "camellia-192-cfb8", "CAMELLIA-192-CFB8", "camellia-128-cfb8", "CAMELLIA-128-CFB8", "camellia-256-cfb1", "CAMELLIA-256-CFB1", "camellia-192-cfb1", "CAMELLIA-192-CFB1", "camellia-128-cfb1", "CAMELLIA-128-CFB1", "camellia-256-cfb", "CAMELLIA-256-CFB", "camellia-192-cfb", "CAMELLIA-192-CFB", "camellia-128-cfb", "CAMELLIA-128-CFB", "camellia-256-ecb", "CAMELLIA-256-ECB", "camellia-192-ecb", "CAMELLIA-192-ECB", "camellia-128-ecb", "CAMELLIA-128-ECB", "camellia-256-cbc", "CAMELLIA-256-CBC", "camellia-192-cbc", "CAMELLIA-192-CBC", "camellia-128-cbc", "CAMELLIA-128-CBC", "ipsec4", "Oakley-EC2N-4", "ipsec3", "Oakley-EC2N-3", "X509v3 Inhibit Any Policy", "inhibitAnyPolicy", "X509v3 Policy Mappings", "policyMappings", "X509v3 Any Policy", "anyPolicy", "wap-wsg-idm-ecid-wtls12", "wap-wsg-idm-ecid-wtls11", "wap-wsg-idm-ecid-wtls10", "wap-wsg-idm-ecid-wtls9", "wap-wsg-idm-ecid-wtls8", "wap-wsg-idm-ecid-wtls7", "wap-wsg-idm-ecid-wtls6", "wap-wsg-idm-ecid-wtls5", "wap-wsg-idm-ecid-wtls4", "wap-wsg-idm-ecid-wtls3", "wap-wsg-idm-ecid-wtls1", "sect571r1", "sect571k1", "sect409r1", "sect409k1", "sect283r1", "sect283k1", "sect239k1", "sect233r1", "sect233k1", "sect193r2", "sect193r1", "sect163r2", "sect163r1", "sect163k1", "sect131r2", "sect131r1", "sect113r2", "sect113r1", "secp521r1", "secp384r1", "secp256k1", "secp224r1", "secp224k1", "secp192k1", "secp160r2", "secp160r1", "secp160k1", "secp128r2", "secp128r1", "secp112r2", "secp112r1", "c2tnb431r1", "c2pnb368w1", "c2tnb359v1", "c2pnb304w1", "c2pnb272w1", "c2onb239v5", "c2onb239v4", "c2tnb239v3", "c2tnb239v2", "c2tnb239v1", "c2pnb208w1", "c2onb191v5", "c2onb191v4", "c2tnb191v3", "c2tnb191v2", "c2tnb191v1", "c2pnb176v1", "c2pnb163v3", "c2pnb163v2", "c2pnb163v1", "ppBasis", "tpBasis", "onBasis", "id-characteristic-two-basis", "wap-wsg", "certicom-arc", "identified-organization", "sha224", "SHA224", "sha512", "SHA512", "sha384", "SHA384", "sha256", "SHA256", "sha224WithRSAEncryption", "RSA-SHA224", "sha512WithRSAEncryption", "RSA-SHA512", "sha384WithRSAEncryption", "RSA-SHA384", "sha256WithRSAEncryption", "RSA-SHA256", "Independent", "id-ppl-independent", "X509v3 Name Constraints", "nameConstraints", "Inherit all", "id-ppl-inheritAll", "Any language", "id-ppl-anyLanguage", "Proxy Certificate Information", "proxyCertInfo", "id-ppl", "postalCode", "streetAddress", "street", "des-ede3-cfb8", "DES-EDE3-CFB8", "des-ede3-cfb1", "DES-EDE3-CFB1", "des-cfb8", "DES-CFB8", "des-cfb1", "DES-CFB1", "aes-256-cfb8", "AES-256-CFB8", "aes-192-cfb8", "AES-192-CFB8", "aes-128-cfb8", "AES-128-CFB8", "aes-256-cfb1", "AES-256-CFB1", "aes-192-cfb1", "AES-192-CFB1", "aes-128-cfb1", "AES-128-CFB1", "Microsoft Universal Principal Name", "Microsoft Smartcardlogin", "msSmartcardLogin", "International Organizations", "international-organizations", "joint-iso-itu-t", "JOINT-ISO-ITU-T", "rsaOAEPEncryptionSET", "des-cdmf", "DES-CDMF", "set-brand-Novus", "set-brand-MasterCard", "set-brand-Visa", "set-brand-JCB", "set-brand-AmericanExpress", "set-brand-Diners", "set-brand-IATA-ATA", "secure device signature", "setAttr-SecDevSig", "ICC or token signature", "setAttr-TokICCsig", "cleartext track 2", "setAttr-T2cleartxt", "encrypted track 2", "setAttr-T2Enc", "generate cryptogram", "setAttr-GenCryptgrm", "setAttr-IssCap-Sig", "setAttr-IssCap-T2", "setAttr-IssCap-CVM", "setAttr-Token-B0Prime", "setAttr-Token-EMV", "set-addPolicy", "set-rootKeyThumb", "issuer capabilities", "setAttr-IssCap", "setAttr-TokenType", "payment gateway capabilities", "setAttr-PGWYcap", "setAttr-Cert", "setCext-IssuerCapabilities", "setCext-TokenType", "setCext-Track2Data", "setCext-TokenIdentifier", "setCext-PGWYcapabilities", "setCext-setQualf", "setCext-setExt", "setCext-tunneling", "setCext-cCertRequired", "setCext-merchData", "setCext-certType", "setCext-hashedRoot", "set-policy-root", "additional verification", "setext-cv", "setext-track2", "setext-pinAny", "setext-pinSecure", "merchant initiated auth", "setext-miAuth", "generic cryptogram", "setext-genCrypt", "setct-BCIDistributionTBS", "setct-CRLNotificationResTBS", "setct-CRLNotificationTBS", "setct-CertResTBE", "setct-CertReqTBEX", "setct-CertReqTBE", "setct-RegFormReqTBE", "setct-BatchAdminResTBE", "setct-BatchAdminReqTBE", "setct-CredRevResTBE", "setct-CredRevReqTBEX", "setct-CredRevReqTBE", "setct-CredResTBE", "setct-CredReqTBEX", "setct-CredReqTBE", "setct-CapRevResTBE", "setct-CapRevReqTBEX", "setct-CapRevReqTBE", "setct-CapResTBE", "setct-CapReqTBEX", "setct-CapReqTBE", "setct-AuthRevResTBEB", "setct-AuthRevResTBE", "setct-AuthRevReqTBE", "setct-AcqCardCodeMsgTBE", "setct-CapTokenTBEX", "setct-CapTokenTBE", "setct-AuthTokenTBE", "setct-AuthResTBEX", "setct-AuthResTBE", "setct-AuthReqTBE", "setct-PIUnsignedTBE", "setct-PIDualSignedTBE", "setct-ErrorTBS", "setct-CertInqReqTBS", "setct-CertResData", "setct-CertReqTBS", "setct-CertReqData", "setct-RegFormResTBS", "setct-MeAqCInitResTBS", "setct-CardCInitResTBS", "setct-BatchAdminResData", "setct-BatchAdminReqData", "setct-PCertResTBS", "setct-PCertReqData", "setct-CredRevResData", "setct-CredRevReqTBSX", "setct-CredRevReqTBS", "setct-CredResData", "setct-CredReqTBSX", "setct-CredReqTBS", "setct-CapRevResData", "setct-CapRevReqTBSX", "setct-CapRevReqTBS", "setct-CapResData", "setct-CapReqTBSX", "setct-CapReqTBS", "setct-AuthRevResTBS", "setct-AuthRevResData", "setct-AuthRevReqTBS", "setct-AcqCardCodeMsg", "setct-CapTokenTBS", "setct-CapTokenData", "setct-AuthTokenTBS", "setct-AuthResTBSX", "setct-AuthResTBS", "setct-AuthReqTBS", "setct-PResData", "setct-PI-TBS", "setct-PInitResData", "setct-CapTokenSeq", "setct-AuthRevResBaggage", "setct-AuthRevReqBaggage", "setct-AuthResBaggage", "setct-HODInput", "setct-PIDataUnsigned", "setct-PIData", "setct-PI", "setct-OIData", "setct-PANOnly", "setct-PANToken", "setct-PANData", "set-brand", "certificate extensions", "set-certExt", "set-policy", "set-attr", "message extensions", "set-msgExt", "content types", "set-ctype", "Secure Electronic Transactions", "id-set", "pseudonym", "generationQualifier", "id-hex-multipart-message", "id-hex-partial-message", "mime-mhs-bodies", "mime-mhs-headings", "MIME MHS", "mime-mhs", "x500UniqueIdentifier", "documentPublisher", "dITRedirect", "personalSignature", "subtreeMaximumQuality", "subtreeMinimumQuality", "singleLevelQuality", "dSAQuality", "buildingName", "mailPreferenceOption", "janetMailbox", "organizationalStatus", "friendlyCountryName", "pagerTelephoneNumber", "mobileTelephoneNumber", "personalTitle", "homePostalAddress", "associatedName", "associatedDomain", "cNAMERecord", "sOARecord", "nSRecord", "mXRecord", "pilotAttributeType27", "aRecord", "lastModifiedBy", "lastModifiedTime", "otherMailbox", "secretary", "homeTelephoneNumber", "documentLocation", "documentAuthor", "documentVersion", "documentTitle", "documentIdentifier", "manager", "userClass", "roomNumber", "favouriteDrink", "rfc822Mailbox", "textEncodedORAddress", "userId", "qualityLabelledData", "pilotDSA", "pilotOrganization", "simpleSecurityObject", "friendlyCountry", "domainRelatedObject", "dNSDomain", "rFC822localPart", "documentSeries", "document", "account", "pilotPerson", "pilotObject", "caseIgnoreIA5StringSyntax", "iA5StringSyntax", "pilotGroups", "pilotObjectClass", "pilotAttributeSyntax", "pilotAttributeType", "Hold Instruction Reject", "holdInstructionReject", "Hold Instruction Call Issuer", "holdInstructionCallIssuer", "Hold Instruction None", "holdInstructionNone", "Hold Instruction Code", "holdInstructionCode", "aes-256-cfb", "AES-256-CFB", "aes-256-ofb", "AES-256-OFB", "aes-256-cbc", "AES-256-CBC", "aes-256-ecb", "AES-256-ECB", "aes-192-cfb", "AES-192-CFB", "aes-192-ofb", "AES-192-OFB", "aes-192-cbc", "AES-192-CBC", "aes-192-ecb", "AES-192-ECB", "aes-128-cfb", "AES-128-CFB", "aes-128-ofb", "AES-128-OFB", "aes-128-cbc", "AES-128-CBC", "aes-128-ecb", "AES-128-ECB", "Microsoft CSP Name", "CSPName", "ecdsa-with-SHA1", "prime256v1", "prime239v3", "prime239v2", "prime239v1", "prime192v3", "prime192v2", "prime192v1", "id-ecPublicKey", "characteristic-two-field", "prime-field", "ANSI X9.62", "ansi-X9-62", "X509v3 No Revocation Available", "noRevAvail", "X509v3 AC Targeting", "targetInformation", "X509v3 Policy Constraints", "policyConstraints", "id-aca-encAttrs", "Subject Information Access", "subjectInfoAccess", "ac-proxying", "md4WithRSAEncryption", "RSA-MD4", "clearance", "Selected Attribute Types", "selected-attribute-types", "Domain", "domain", "domainComponent", "dcObject", "dcobject", "Enterprises", "enterprises", "SNMPv2", "snmpv2", "Security", "security", "Private", "private", "Experimental", "experimental", "Management", "Directory", "directory", "directory services - algorithms", "X500algorithms", "rsaSignature", "Trust Root", "trustRoot", "Extended OCSP Status", "extendedStatus", "OCSP Service Locator", "serviceLocator", "OCSP Archive Cutoff", "archiveCutoff", "OCSP No Check", "noCheck", "Acceptable OCSP Responses", "acceptableResponses", "OCSP CRL ID", "OCSP Nonce", "Basic OCSP Response", "basicOCSPResponse", "ad dvcs", "AD_DVCS", "AD Time Stamping", "ad_timestamping", "id-cct-PKIResponse", "id-cct-PKIData", "id-cct-crs", "id-qcs-pkixQCSyntax-v1", "id-aca-role", "id-aca-group", "id-aca-chargingIdentity", "id-aca-accessIdentity", "id-aca-authenticationInfo", "id-pda-countryOfResidence", "id-pda-countryOfCitizenship", "id-pda-gender", "id-pda-placeOfBirth", "id-pda-dateOfBirth", "id-on-personalData", "id-cmc-confirmCertAcceptance", "id-cmc-popLinkWitness", "id-cmc-popLinkRandom", "id-cmc-queryPending", "id-cmc-responseInfo", "id-cmc-regInfo", "id-cmc-revokeRequest", "id-cmc-getCRL", "id-cmc-getCert", "id-cmc-lraPOPWitness", "id-cmc-decryptedPOP", "id-cmc-encryptedPOP", "id-cmc-addExtensions", "id-cmc-recipientNonce", "id-cmc-senderNonce", "id-cmc-transactionId", "id-cmc-dataReturn", "id-cmc-identityProof", "id-cmc-identification", "id-cmc-statusInfo", "id-alg-dh-pop", "id-alg-dh-sig-hmac-sha1", "id-alg-noSignature", "id-alg-des40", "id-regInfo-certReq", "id-regInfo-utf8Pairs", "id-regCtrl-protocolEncrKey", "id-regCtrl-oldCertID", "id-regCtrl-pkiArchiveOptions", "id-regCtrl-pkiPublicationInfo", "id-regCtrl-authenticator", "id-regCtrl-regToken", "id-regInfo", "id-regCtrl", "id-it-origPKIMessage", "id-it-confirmWaitTime", "id-it-implicitConfirm", "id-it-revPassphrase", "id-it-keyPairParamRep", "id-it-keyPairParamReq", "id-it-subscriptionResponse", "id-it-subscriptionRequest", "id-it-unsupportedOIDs", "id-it-currentCRL", "id-it-caKeyUpdateInfo", "id-it-preferredSymmAlg", "id-it-encKeyPairTypes", "id-it-signKeyPairTypes", "id-it-caProtEncCert", "IPSec User", "ipsecUser", "IPSec Tunnel", "ipsecTunnel", "IPSec End System", "ipsecEndSystem", "textNotice", "sbgp-routerIdentifier", "sbgp-autonomousSysNum", "sbgp-ipAddrBlock", "aaControls", "ac-targeting", "ac-auditEntity", "qcStatements", "Biometric Info", "biometricInfo", "id-mod-cmp2000", "id-mod-dvcs", "id-mod-ocsp", "id-mod-timestamp-protocol", "id-mod-attribute-cert", "id-mod-qualified-cert-93", "id-mod-qualified-cert-88", "id-mod-cmp", "id-mod-kea-profile-93", "id-mod-kea-profile-88", "id-mod-cmc", "id-mod-crmf", "id-pkix1-implicit-93", "id-pkix1-explicit-93", "id-pkix1-implicit-88", "id-pkix1-explicit-88", "id-cct", "id-qcs", "id-aca", "id-pda", "id-cmc", "id-alg", "id-pkip", "id-pkix-mod", "id-smime-cti-ets-proofOfCreation", "id-smime-cti-ets-proofOfApproval", "id-smime-cti-ets-proofOfSender", "id-smime-cti-ets-proofOfDelivery", "id-smime-cti-ets-proofOfReceipt", "id-smime-cti-ets-proofOfOrigin", "id-smime-spq-ets-sqt-unotice", "id-smime-spq-ets-sqt-uri", "id-smime-cd-ldap", "id-smime-alg-CMSRC2wrap", "id-smime-alg-CMS3DESwrap", "id-smime-alg-ESDH", "id-smime-alg-RC2wrap", "id-smime-alg-3DESwrap", "id-smime-alg-ESDHwithRC2", "id-smime-alg-ESDHwith3DES", "id-smime-aa-dvcs-dvc", "id-smime-aa-signatureType", "id-smime-aa-ets-archiveTimeStamp", "id-smime-aa-ets-certCRLTimestamp", "id-smime-aa-ets-escTimeStamp", "id-smime-aa-ets-revocationValues", "id-smime-aa-ets-certValues", "id-smime-aa-ets-RevocationRefs", "id-smime-aa-ets-CertificateRefs", "id-smime-aa-ets-contentTimestamp", "id-smime-aa-ets-otherSigCert", "id-smime-aa-ets-signerAttr", "id-smime-aa-ets-signerLocation", "id-smime-aa-ets-commitmentType", "id-smime-aa-ets-sigPolicyId", "id-smime-aa-timeStampToken", "id-smime-aa-smimeEncryptCerts", "id-smime-aa-signingCertificate", "id-smime-aa-encrypKeyPref", "id-smime-aa-contentReference", "id-smime-aa-equivalentLabels", "id-smime-aa-macValue", "id-smime-aa-contentIdentifier", "id-smime-aa-encapContentType", "id-smime-aa-msgSigDigest", "id-smime-aa-contentHint", "id-smime-aa-mlExpandHistory", "id-smime-aa-securityLabel", "id-smime-aa-receiptRequest", "id-smime-ct-DVCSResponseData", "id-smime-ct-DVCSRequestData", "id-smime-ct-contentInfo", "id-smime-ct-TDTInfo", "id-smime-ct-TSTInfo", "id-smime-ct-publishCert", "id-smime-ct-authData", "id-smime-ct-receipt", "id-smime-mod-ets-eSigPolicy-97", "id-smime-mod-ets-eSigPolicy-88", "id-smime-mod-ets-eSignature-97", "id-smime-mod-ets-eSignature-88", "id-smime-mod-msg-v3", "id-smime-mod-oid", "id-smime-mod-ess", "id-smime-mod-cms", "id-smime-cti", "id-smime-spq", "id-smime-cd", "id-smime-alg", "id-smime-aa", "id-smime-ct", "id-smime-mod", "S/MIME", "X9.57 CM ?", "ISO US Member Body", "ISO-US", "ISO Member Body", "member-body", "OCSP Signing", "OCSPSigning", "CA Issuers", "caIssuers", "Authority Information Access", "authorityInfoAccess", "dnQualifier", "Extension Request", "extReq", "Microsoft Extension Request", "msExtReq", "pbeWithSHA1AndDES-CBC", "PBE-SHA1-DES", "pbeWithMD5AndRC2-CBC", "PBE-MD5-RC2-64", "pbeWithMD2AndRC2-CBC", "PBE-MD2-RC2-64", "S/MIME Capabilities", "SMIME-CAPS", "rc2-64-cbc", "RC2-64-CBC", "Policy Qualifier User Notice", "id-qt-unotice", "Policy Qualifier CPS", "id-qt-cps", "hmacWithSHA1", "PBMAC1", "x509Crl", "sdsiCertificate", "x509Certificate", "localKeyID", "friendlyName", "safeContentsBag", "secretBag", "crlBag", "certBag", "pkcs8ShroudedKeyBag", "keyBag", "pbeWithSHA1And40BitRC2-CBC", "PBE-SHA1-RC2-40", "pbeWithSHA1And128BitRC2-CBC", "PBE-SHA1-RC2-128", "pbeWithSHA1And2-KeyTripleDES-CBC", "PBE-SHA1-2DES", "pbeWithSHA1And3-KeyTripleDES-CBC", "PBE-SHA1-3DES", "pbeWithSHA1And40BitRC4", "PBE-SHA1-RC4-40", "pbeWithSHA1And128BitRC4", "PBE-SHA1-RC4-128", "Strong Extranet ID", "SXNetID", "Invalidity Date", "invalidityDate", "X509v3 CRL Reason Code", "CRLReason", "X509v3 Delta CRL Indicator", "deltaCRL", "Netscape Server Gated Crypto", "Microsoft Encrypted File System", "Microsoft Server Gated Crypto", "Microsoft Trust List Signing", "msCTLSign", "Microsoft Commercial Code Signing", "msCodeCom", "Microsoft Individual Code Signing", "msCodeInd", "Time Stamping", "timeStamping", "E-mail Protection", "emailProtection", "Code Signing", "codeSigning", "TLS Web Client Authentication", "clientAuth", "TLS Web Server Authentication", "serverAuth", "X509v3 Extended Key Usage", "extendedKeyUsage", "zlib compression", "run length compression", "rc5-ofb", "RC5-OFB", "rc5-cfb", "RC5-CFB", "rc5-ecb", "RC5-ECB", "rc5-cbc", "RC5-CBC", "ripemd160WithRSA", "RSA-RIPEMD160", "ripemd160", "RIPEMD160", "dsaEncryption", "sha1WithRSA", "RSA-SHA1-2", "md5-sha1", "MD5-SHA1", "dsaWithSHA1", "DSA-SHA1", "pbeWithMD5AndCast5CBC", "cast5-ofb", "CAST5-OFB", "cast5-cfb", "CAST5-CFB", "cast5-ecb", "CAST5-ECB", "cast5-cbc", "CAST5-CBC", "description", "md5WithRSA", "RSA-NP-MD5", "X509v3 CRL Distribution Points", "crlDistributionPoints", "initials", "surname", "givenName", "rc2-40-cbc", "RC2-40-CBC", "rc4-40", "RC4-40", "mdc2WithRSA", "RSA-MDC2", "bf-ofb", "BF-OFB", "bf-cfb", "BF-CFB", "bf-ecb", "BF-ECB", "bf-cbc", "BF-CBC", "X509v3 Authority Key Identifier", "authorityKeyIdentifier", "X509v3 Certificate Policies", "certificatePolicies", "X509v3 CRL Number", "crlNumber", "X509v3 Basic Constraints", "basicConstraints", "X509v3 Issuer Alternative Name", "issuerAltName", "X509v3 Subject Alternative Name", "subjectAltName", "X509v3 Private Key Usage Period", "privateKeyUsagePeriod", "X509v3 Key Usage", "keyUsage", "X509v3 Subject Key Identifier", "subjectKeyIdentifier", "desx-cbc", "DESX-CBC", "Netscape Certificate Sequence", "nsCertSequence", "Netscape Comment", "nsComment", "Netscape SSL Server Name", "nsSslServerName", "Netscape CA Policy Url", "nsCaPolicyUrl", "Netscape Renewal Url", "nsRenewalUrl", "Netscape CA Revocation Url", "nsCaRevocationUrl", "Netscape Revocation Url", "nsRevocationUrl", "Netscape Base Url", "nsBaseUrl", "Netscape Cert Type", "nsCertType", "dsaWithSHA1-old", "DSA-SHA1-old", "PBKDF2", "pbeWithSHA1AndRC2-CBC", "PBE-SHA1-RC2-64", "dsaEncryption-old", "DSA-old", "dsaWithSHA", "DSA-SHA", "sha1WithRSAEncryption", "RSA-SHA1", "des-ede3-ofb", "DES-EDE3-OFB", "des-ede-ofb", "DES-EDE-OFB", "des-ede3-cfb", "DES-EDE3-CFB", "des-ede-cfb", "DES-EDE-CFB", "Netscape Data Type", "nsDataType", "Netscape Certificate Extension", "nsCertExt", "Netscape Communications Corp.", "Netscape", "extendedCertificateAttributes", "unstructuredAddress", "challengePassword", "countersignature", "signingTime", "messageDigest", "contentType", "unstructuredName", "emailAddress", "idea-ofb", "IDEA-OFB", "des-ofb", "DES-OFB", "des-ede3-cbc", "DES-EDE3-CBC", "des-ede-cbc", "DES-EDE-CBC", "shaWithRSAEncryption", "RSA-SHA", "rc2-ofb", "RC2-OFB", "rc2-cfb", "RC2-CFB", "rc2-ecb", "RC2-ECB", "rc2-cbc", "RC2-CBC", "idea-ecb", "IDEA-ECB", "idea-cfb", "IDEA-CFB", "idea-cbc", "IDEA-CBC", "des-ede3", "DES-EDE3", "des-ede", "DES-EDE", "des-cbc", "DES-CBC", "des-cfb", "DES-CFB", "des-ecb", "DES-ECB", "dhKeyAgreement", "pkcs7-encryptedData", "pkcs7-digestData", "pkcs7-signedAndEnvelopedData", "pkcs7-envelopedData", "pkcs7-signedData", "pkcs7-data", "organizationalUnitName", "organizationName", "stateOrProvinceName", "localityName", "countryName", "commonName", "directory services (X.500)", "pbeWithMD5AndDES-CBC", "PBE-MD5-DES", "pbeWithMD2AndDES-CBC", "PBE-MD2-DES", "md5WithRSAEncryption", "RSA-MD5", "md2WithRSAEncryption", "RSA-MD2", "rsaEncryption", "RSA Data Security, Inc. PKCS", "RSA Data Security, Inc.", "rsadsi", "undefined", ".\\crypto\\objects\\obj_dat.c", "ASN1_SET_ANY", "ASN1_SEQUENCE_ANY", "ASN1_OCTET_STRING_NDEF", "ASN1_FBOOLEAN", "ASN1_TBOOLEAN", "ASN1_BOOLEAN", "DIRECTORYSTRING", "DISPLAYTEXT", "ASN1_PRINTABLE", "ASN1_SEQUENCE", "ASN1_ANY", "ASN1_BMPSTRING", "ASN1_UNIVERSALSTRING", "ASN1_VISIBLESTRING", "ASN1_GENERALIZEDTIME", "ASN1_UTCTIME", "ASN1_GENERALSTRING", "ASN1_IA5STRING", "ASN1_T61STRING", "ASN1_PRINTABLESTRING", "ASN1_UTF8STRING", "ASN1_OBJECT", "ASN1_NULL", "ASN1_OCTET_STRING", "ASN1_BIT_STRING", "ASN1_ENUMERATED", "ASN1_INTEGER", ".\\crypto\\asn1\\a_int.c", ".\\crypto\\ec\\ec_lib.c", ".\\crypto\\asn1\\tasn_enc.c", ".\\crypto\\asn1\\a_object.c", "<INVALID>", "\\tIPSec/IKE/Oakley curve #4 over a 185 bit binary field.", "\\tNot suitable for ECDSA.", "\\tQuestionable extension field!", "\\tIPSec/IKE/Oakley curve #3 over a 155 bit binary field.", "\\tNot suitable for ECDSA.", "\\tQuestionable extension field!", "WTLS curvs over a 224 bit prime field", "WTLS curve over a 160 bit prime field", "WTLS curve over a 112 bit prime field", "WTLS curve over a 113 bit binary field", "X9.62 curve over a 431 bit binary field", "X9.62 curve over a 368 bit binary field", "X9.62 curve over a 359 bit binary field", "X9.62 curve over a 304 bit binary field", "X9.62 curve over a 272 bit binary field", "X9.62 curve over a 239 bit binary field", "X9.62 curve over a 208 bit binary field", "X9.62 curve over a 191 bit binary field", "X9.62 curve over a 176 bit binary field", "X9.62 curve over a 163 bit binary field", "NIST/SECG curve over a 571 bit binary field", "NIST/SECG curve over a 409 bit binary field", "NIST/SECG curve over a 283 bit binary field", "SECG curve over a 239 bit binary field", "NIST/SECG/WTLS curve over a 233 bit binary field", "SECG curve over a 193 bit binary field", "NIST/SECG curve over a 163 bit binary field", "SECG curve over a 163 bit binary field", "NIST/SECG/WTLS curve over a 163 bit binary field", "SECG curve over a 131 bit binary field", "SECG/WTLS curve over a 131 bit binary field", "SECG curve over a 113 bit binary field", "X9.62/SECG curve over a 256 bit prime field", "X9.62 curve over a 239 bit prime field", "X9.62 curve over a 192 bit prime field", "NIST/X9.62/SECG curve over a 192 bit prime field", "NIST/SECG curve over a 521 bit prime field", "NIST/SECG curve over a 384 bit prime field", "SECG curve over a 256 bit prime field", "NIST/SECG curve over a 224 bit prime field", "SECG curve over a 224 bit prime field", "SECG curve over a 192 bit prime field", "SECG/WTLS curve over a 160 bit prime field", "SECG curve over a 160 bit prime field", "SECG curve over a 128 bit prime field", "SECG curve over a 112 bit prime field", "SECG/WTLS curve over a 112 bit prime field", ".\\crypto\\asn1\\tasn_new.c", ".\\crypto\\asn1\\a_bitstr.c", "ctx->length <= (int)sizeof(ctx->enc_data)", ".\\crypto\\evp\\encode.c", "n < (int)sizeof(ctx->enc_data)", "nkey <= EVP_MAX_KEY_LENGTH", ".\\crypto\\evp\\evp_key.c", "niv <= EVP_MAX_IV_LENGTH", ".\\crypto\\evp\\evp_enc.c", "ctx->cipher->block_size == 1 || ctx->cipher->block_size == 8 || ctx->cipher->block_size == 16", "EVP_CIPHER_CTX_iv_length(ctx) <= (int)sizeof(ctx->iv)", "bl <= (int)sizeof(ctx->buf)", "b <= sizeof ctx->buf", "b <= sizeof ctx->final", "FILE pointer", "fopen('", "l <= sizeof(c->iv)", ".\\crypto\\evp\\evp_lib.c", "j <= sizeof(c->iv)", "PKCS8_PRIV_KEY_INFO", "pkeyalg", "X509_SIG", "BIGNUM", "X509_ALGORS", "algorithms", "X509_ALGOR", "parameter", "Eric Young's PKCS#1 RSA", ".\\crypto\\rsa\\rsa_eay.c", ".\\crypto\\dh\\dh_lib.c", "object", "X509_ATTRIBUTE", "value.single", "value.set", "X509_NAME", "X509_NAME_INTERNAL", "X509_NAME_ENTRIES", "X509_NAME_ENTRY", ".\\crypto\\asn1\\x_name.c", "X509_EXTENSIONS", "Extension", "X509_EXTENSION", "critical", "GENERAL_NAMES", "GeneralNames", "GENERAL_NAME", "d.registeredID", "d.iPAddress", "d.uniformResourceIdentifier", "d.ediPartyName", "d.directoryName", "d.x400Address", "d.dNSName", "d.rfc822Name", "d.otherName", "EDIPARTYNAME", "partyName", "nameAssigner", "OTHERNAME", "type_id", "AUTHORITY_KEYID", "ASN1_TIME", "ISSUING_DIST_POINT", "onlyattr", "indirectCRL", "onlysomereasons", "onlyCA", "onlyuser", "CRL_DIST_POINTS", "CRLDistributionPoints", "DIST_POINT", "distpoint", "DIST_POINT_NAME", "name.relativename", "name.fullname", "AACompromise", "AA Compromise", "privilegeWithdrawn", "Privilege Withdrawn", "certificateHold", "Certificate Hold", "cessationOfOperation", "Cessation Of Operation", "superseded", "Superseded", "affiliationChanged", "Affiliation Changed", "CACompromise", "CA Compromise", "keyCompromise", "Key Compromise", "unused", "Unused", "fullname", "relativename", "%*s%s:", "<EMPTY>", "reasons", "CRLissuer", "onlyAA", ",value:", ",name:", "section:", "%*sFull Name:", "%*sRelative Name:", "%*sOnly User Certificates", "%*sOnly CA Certificates", "%*sIndirect CRL", "Only Some Reasons", "%*sOnly Attribute Certificates", "%*s<EMPTY>", "Reasons", "%*sCRL Issuer:", ".\\crypto\\pkcs7\\pk7_doit.c", "SEQUENCE", "%*s%s:", "cert_info", "X509_CINF", "subjectUID", "issuerUID", "validity", ".\\crypto\\rsa\\rsa_sign.c", "signature has problems, re-make with post SSLeay045", ".\\crypto\\evp\\pmeth_lib.c", ".\\crypto\\engine\\eng_ctrl.c", ".\\crypto\\engine\\tb_asnmth.c", ".\\crypto\\bn\\bn_mont.c", ".\\crypto\\asn1\\tasn_utl.c", ".\\crypto\\bn\\bn_print.c", ".\\crypto\\objects\\obj_lib.c", ".\\crypto\\ec\\ec_mult.c", ".\\crypto\\ui\\ui_lib.c", " characters", "You must type in ", ".\\crypto\\objects\\o_names.c", "OpenSSL RSA method", ".\\crypto\\rsa\\rsa_ameth.c", "Private-Key: (%d bit)", "modulus:", "publicExponent:", "Public-Key: (%d bit)", "Modulus:", "Exponent:", "privateExponent:", "prime1:", "prime2:", "exponent1:", "exponent2:", "coefficient:", " (INVALID PSS PARAMETERS)", "Hash Algorithm: ", "sha1 (default)", "Mask Algorithm: ", " with ", "INVALID", "mgf1 with sha1 (default)", "Salt Length: 0x", "14 (default)", "Trailer Field: 0x", "BC (default)", "OpenSSL CMAC method", "OpenSSL EC algorithm", ".\\crypto\\ec\\ec_ameth.c", "Private-Key", "Public-Key", "ECDSA-Parameters", "%s: (%d bit)", "OpenSSL HMAC method", ".\\crypto\\hmac\\hm_ameth.c", "OpenSSL PKCS#3 DH method", "PKCS#3 DH Private-Key", "PKCS#3 DH Public-Key", "PKCS#3 DH Parameters", ".\\crypto\\dh\\dh_ameth.c", "private-key:", "public-key:", "prime:", "generator:", "recommended-private-length: %d bits", ".\\crypto\\pkcs12\\p12_decr.c", ".\\crypto\\rsa\\rsa_pk1.c", ".\\crypto\\rsa\\rsa_oaep.c", "OpenSSL DH Method", "\\W%08lX", "\\U%04lX", ".\\crypto\\asn1\\a_strex.c", "NO X509_NAME", "timestampsign", "Time Stamp signing", "ocsphelper", "OCSP helper", "Any Purpose", "crlsign", "CRL signing", "smimeencrypt", "S/MIME encryption", "smimesign", "S/MIME signing", "nssslserver", "Netscape SSL server", "sslserver", "SSL server", "sslclient", "SSL client", ".\\crypto\\x509v3\\v3_purp.c", ".\\crypto\\asn1\\a_sign.c", "NETSCAPE_SPKI", "sig_algor", "NETSCAPE_SPKAC", "challenge", ".\\crypto\\asn1\\a_utctm.c", "%02d%02d%02d%02d%02d%02dZ", ".\\crypto\\asn1\\a_gentm.c", "%04d%02d%02d%02d%02d%02dZ", "value=", ".\\crypto\\x509v3\\v3_utl.c", "%d.%d.%d.%d", "<unsupported>", "othername", "X400Name", "EdiPartyName", "DirName", "<invalid>", "IP Address", "Registered ID", "othername:<unsupported>", "X400Name:<unsupported>", "EdiPartyName:<unsupported>", "email:%s", "DNS:%s", "URI:%s", "DirName: ", "IP Address:%d.%d.%d.%d", "IP Address:<invalid>", "dirName", "otherName", ".\\crypto\\x509v3\\v3_alt.c", "section=", ".\\crypto\\x509\\x509_vfy.c", "OPENSSL_ALLOW_PROXY_CERTS", "default", ".\\crypto\\evp\\pmeth_fn.c", "message digest", "cipher", ".\\crypto\\evp\\bio_enc.c", " (Negative)", "%02x%s", "Bad time value", "%s %2d %02d:%02d:%02d%.*s %d%s", "%s %2d %02d:%02d:%02d %d%s", "BMPSTRING", "<ASN1 29>", "UNIVERSALSTRING", "GENERALSTRING", "VISIBLESTRING", "GRAPHICSTRING", "GENERALIZEDTIME", "UTCTIME", "IA5STRING", "VIDEOTEXSTRING", "T61STRING", "PRINTABLESTRING", "NUMERICSTRING", "<ASN1 15>", "<ASN1 14>", "<ASN1 13>", "UTF8STRING", "<ASN1 11>", "ENUMERATED", "EXTERNAL", "OBJECT DESCRIPTOR", "OBJECT", "OCTET STRING", "BIT STRING", "INTEGER", "BOOLEAN", "(unknown)", "X509_CERT_PAIR", "reverse", "forward", "X509_CERT_AUX", "reject", ".\\crypto\\x509v3\\pcy_cache.c", "X509_VAL", "notAfter", "notBefore", "NAME_CONSTRAINTS", "excludedSubtrees", "permittedSubtrees", "GENERAL_SUBTREE", "maximum", "minimum", "permitted", "excluded", "Permitted", "Excluded", "%d.%d.%d.%d/%d.%d.%d.%d", ".\\crypto\\hmac\\hm_pmeth.c", "hexkey", ".\\crypto\\ec\\ec_pmeth.c", "ec_paramgen_curve", ".\\crypto\\dh\\dh_pmeth.c", "dh_paramgen_prime_len", "dh_paramgen_generator", ".\\crypto\\rsa\\rsa_pmeth.c", "rsa_padding_mode", "sslv23", "rsa_pss_saltlen", "rsa_keygen_bits", "rsa_keygen_pubexp", ".\\crypto\\ec\\ecp_smpl.c", ".\\crypto\\bn\\bn_gf2m.c", "%lu:%s:%s:%d:%s", "OpenSSL default user interface", "Verifying - %s", "Verify failure", ".\\crypto\\ui\\ui_openssl.c", "keylen <= sizeof key", ".\\crypto\\evp\\p5_crpt2.c", "EVP_CIPHER_key_length(cipher) <= (int)sizeof(md_tmp)", ".\\crypto\\evp\\p5_crpt.c", "EVP_CIPHER_iv_length(cipher) <= 16", "%s %s%lu (%s0x%lx)", ".\\crypto\\cmac\\cmac.c", ".\\crypto\\ec\\ec_print.c", ".\\crypto\\ecdsa\\ecs_lib.c", "Generator (hybrid):", "Generator (uncompressed):", "Generator (compressed):", "ASN1 OID: %s", ".\\crypto\\ec\\eck_prn.c", "Field Type: %s", "Basis Type: %s", "Polynomial:", "Prime:", "Order: ", "Cofactor: ", "PBKDF2PARAM", "keylength", "PBE2PARAM", "encryption", "keyfunc", "PBEPARAM", "minsize=", "maxsize=", ".\\crypto\\asn1\\a_mbstr.c", "'()+,-./:=?", "PROXY_CERT_INFO_EXTENSION", "proxyPolicy", "pcPathLengthConstraint", "PROXY_POLICY", "policy", "policyLanguage", "BASIC_CONSTRAINTS", "pathlen", "POLICY_MAPPINGS", "POLICY_MAPPING", "subjectDomainPolicy", "issuerDomainPolicy", "%*scrlUrl: ", "%*scrlNum: ", "%*scrlTime: ", "%*sIssuer: ", "NOTICEREF", "noticenos", "organization", "USERNOTICE", "exptext", "noticeref", "POLICYQUALINFO", "pqualid", "d.usernotice", "d.cpsuri", "POLICYINFO", "qualifiers", "policyid", "CERTIFICATEPOLICIES", "ia5org", "policyIdentifier", "userNotice", "explicitText", "noticeNumbers", "%*sPolicy: ", "%*sCPS: %s", "%*sUser Notice:", "%*sUnknown Qualifier: ", "%*sOrganization: %s", "%*sNumber%s: ", "%*sExplicit Text: %s", "decipherOnly", "Decipher Only", "encipherOnly", "Encipher Only", "cRLSign", "CRL Sign", "keyCertSign", "Certificate Sign", "keyAgreement", "Key Agreement", "dataEncipherment", "Data Encipherment", "keyEncipherment", "Key Encipherment", "nonRepudiation", "Non Repudiation", "digitalSignature", "Digital Signature", "Object Signing CA", "emailCA", "S/MIME CA", "SSL CA", "reserved", "objsign", "Object Signing", "server", "SSL Server", "client", "SSL Client", "removeFromCRL", "Remove From CRL", "unspecified", "Unspecified", "EXTENDED_KEY_USAGE", "POLICY_CONSTRAINTS", "inhibitPolicyMapping", "requireExplicitPolicy", "Require Explicit Policy", "Inhibit Policy Mapping", "AUTHORITY_INFO_ACCESS", "ACCESS_DESCRIPTION", "location", "method", ".\\crypto\\x509v3\\v3_info.c", "SXNETID", "%*sVersion: %ld (0x%lX)", "%*sZone: %s, User: ", ".\\crypto\\x509v3\\v3_ia5.c", "always", "%*sPath Length Constraint: ", "infinite", "%*sPolicy Language: ", "%*sPolicy Text: %s", "language", ".\\crypto\\x509v3\\v3_pci.c", "PKEY_USAGE_PERIOD", "Not Before: ", "Not After: ", " name=", "group=", "FORMAT", "BITWRAP", "SETWRAP", "SEQWRAP", "OCTWRAP", "IMPLICIT", "EXPLICIT", "NUMERIC", "GENSTR", "GeneralString", "TELETEXSTRING", "PRINTABLE", "VISIBLE", "UTF8String", "BITSTRING", "BITSTR", "OCTETSTRING", "GENTIME", ".\\crypto\\asn1\\asn1_gen.c", "BITLIST", "string=", ".\\crypto\\x509\\x509_lu.c", "ssl_server", "ssl_client", "smime_sign", ".\\crypto\\x509\\x509_vpm.c", ".\\crypto\\x509v3\\pcy_tree.c", "TSA server", "OCSP request", "OCSP responder", "Object Signer", "S/MIME email", "compatible", ".\\crypto\\x509v3\\pcy_data.c", "j <= (int)sizeof(ctx->key)", ".\\crypto\\hmac\\hmac.c", "len>=0 && len<=(int)sizeof(ctx->key)", ".\\crypto\\rsa\\rsa_pss.c", ".\\crypto\\rsa\\rsa_saos.c", ".\\crypto\\pkcs12\\p12_key.c", "OpenSSL ECDSA method", "OCSP_SERVICELOC", "locator", "OCSP_CRLID", "crlTime", "crlNum", "crlUrl", "OCSP_BASICRESP", "tbsResponseData", "OCSP_RESPDATA", "responseExtensions", "responses", "producedAt", "responderId", "OCSP_SINGLERESP", "singleExtensions", "thisUpdate", "certStatus", "certId", "OCSP_CERTSTATUS", "value.unknown", "value.revoked", "value.good", "OCSP_REVOKEDINFO", "revocationReason", "revocationTime", "OCSP_RESPID", "value.byKey", "value.byName", "OCSP_RESPONSE", "responseBytes", "responseStatus", "OCSP_RESPBYTES", "response", "responseType", "OCSP_REQUEST", "optionalSignature", "tbsRequest", "OCSP_REQINFO", "requestExtensions", "requestList", "requestorName", "OCSP_ONEREQ", "singleRequestExtensions", "reqCert", "OCSP_CERTID", "issuerKeyHash", "issuerNameHash", "OCSP_SIGNATURE", "signatureAlgorithm", ".\\crypto\\conf\\conf_api.c", "vv == NULL", "OpenSSL default", ".\\crypto\\conf\\conf_def.c", "[%s] %s=%s", "[[%s]]", "w:\\openssl\\bin/ssl/certs", "w:\\openssl\\bin/ssl/cert.pem", "SSL_CERT_DIR", "SSL_CERT_FILE", ".\\crypto\\dso\\dso_lib.c", ".\\crypto\\x509v3\\pcy_node.c", ".\\crypto\\ecdh\\ech_lib.c", "ECDSA_SIG", ".\\crypto\\pkcs12\\p12_utl.c", "OpenSSL ECDH method", ".\\crypto\\ecdh\\ech_ossl.c", "PKCS12_AUTHSAFES", "PKCS12_SAFEBAGS", "attrib", "PKCS12_SAFEBAG", "value.bag", "value.safes", "value.shkeybag", "value.keybag", "PKCS12_BAGS", "value.sdsicert", "value.x509crl", "value.x509cert", "value.other", "PKCS12_MAC_DATA", "PKCS12", "authsafes", "NULL shared library method", "application/xml", "text/html", "text/plain", "image/jpeg", "image/gif", "application/octet-stream", "; filename=\"%s\"", "Content-Type: multipart/form-data", "%s; boundary=%s", "Content-Disposition: form-data; name=\"", "Content-Type: multipart/mixed; boundary=%s", "Content-Disposition: attachment", "Content-Type: %s", "--%s--", "--%s--", "------------------------%08x%08x", "<no protocol>", "deflate, gzip", "%15[^:]:%[^", ":]://%[^", "/?]%[^", "/?]%[^", "%I64u-", "no_proxy", "NO_PROXY", "_proxy", "http_proxy", "all_proxy", "ALL_PROXY", "socks5h", "socks5", "socks4a", "socks4", "[%*45[0123456789abcdefABCDEF:.]%c", ";type=%c", "%s://%s%s%s:%hu%s%s%s", "anonymous", "ftp@example.com", "%s://%s", "User-Agent: %s", "%255[^:]:%d:%255s", "Header", "[%s %s %s]", "%15[^?&/:]://%c", "Proxy-", "%sAuthorization: Basic %s", "Proxy-authorization:", "Authorization:", "Server", "Expect:", "100-continue", "Expect: 100-continue", "Content-Type:", "Content-Length", "Connection", "%s, %02d %s %4d %02d:%02d:%02d GMT", "If-Modified-Since: %s", "If-Unmodified-Since: %s", "Last-Modified: %s", "User-Agent:", "Referer:", "Referer: %s", "Cookie:", "Accept-Encoding:", "Accept-Encoding: %s", "Connection:", "%s, TE", "TE: gzip", "Connection: TE", "TE: gzip", "Transfer-Encoding:", "chunked", "Transfer-Encoding: chunked", "Host: %s%s%s", "Host: %s%s%s:%hu", "ftp://", ";type=", "Accept:", "Accept: */*", "Range:", "Range: bytes=%s", "Content-Range:", "Content-Range: bytes 0-%I64d/%I64d", "Content-Range: bytes %s%I64d/%I64d", "Content-Range: bytes %s/%I64d", "ftp://%s:%s@%s", "Proxy-Connection:", "Proxy-Connection: Keep-Alive", "%s HTTP/%s", "%s%s%s%s%s%s%s%s%s%s%s", "Content-Length: 0", "Content-Length:", "Content-Length: %I64d", "Content-Type: application/x-www-form-urlencoded", " HTTP/%d.%d %d", " HTTP %3d", " RTSP/%d.%d %3d", "Server:", "keep-alive", "identity", "deflate", "x-gzip", "compress", "x-compress", "Content-Encoding:", "Last-Modified:", "WWW-Authenticate:", "Proxy-authenticate:", "Location:", "--:--:--", "%2I64d:%02I64d:%02I64d", "%3I64dd %02I64dh", "%7I64dd", "%5I64d", "%4I64dk", "%2I64d.%0I64dM", "%4I64dM", "%2I64d.%0I64dG", "%4I64dG", "%4I64dT", "%4I64dP", "** Resuming transfer from byte position %I64d", "  %% Total    %% Received %% Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "%3I64d %s  %3I64d %s  %3I64d %s  %s  %s %s %s %s %s", "%hu.%hu.%hu.%hu", "_netrc", "%s%s%s", "machine", "password", "%s:%hu", "CONNECT", "%s%s%s:%hu", "Host: %s", "CONNECT %s HTTP/%s", "%s%s%s%s", "HTTP/1.%d %d", "No error", "Unknown error %d (%#x)", "1.2.0.4", "Sunday", "Saturday", "Friday", "Thursday", "Wednesday", "Tuesday", "Monday", "%31[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]", "%02d:%02d:%02d", "%02d:%02d", "%c%c==", "%c%c%c=", "%c%c%c%c", "c->magic == OR_CONNECTION_MAGIC", "TO_OR_CONN", "w:\\torsrc\\src\\or\\or.h", "c->magic == DIR_CONNECTION_MAGIC", "TO_DIR_CONN", "c->magic == EDGE_CONNECTION_MAGIC || c->magic == ENTRY_CONNECTION_MAGIC", "TO_EDGE_CONN", "c->magic == ENTRY_CONNECTION_MAGIC", "TO_ENTRY_CONN", "connection_add_impl", "main.c", "SOCKET_OK(conn->s) || conn->linked || (conn->type == CONN_TYPE_AP && TO_EDGE_CONN(conn)->is_dns_request)", "conn->conn_array_index == -1", "connection_remove", "conn->conn_array_index >= 0", "!smartlist_contains(closeable_connection_lst, conn)", "add_connection_to_closeable_list", "conn->marked_for_close", "connection_is_reading", "connection_stop_reading", "conn->read_event", "connection_start_reading", "connection_is_writing", "connection_stop_writing", "conn->write_event", "connection_start_writing", "connection_start_reading_from_linked_conn", "conn->linked == 1", "smartlist_contains(active_linked_connection_lst, conn)", "connection_stop_reading_from_linked_conn", "!smartlist_contains(active_linked_connection_lst, conn)", "conn_write_callback", "DIR_ALL_UNREACHABLE", "I learned some more directory information, but not enough to build a circuit: %s", "conn->outbuf", "run_connection_housekeeping", "Tor gave up on the connection", "REACHABILITY_FAILED ORADDRESS=%s:%d", "REACHABILITY_FAILED DIRADDRESS=%s:%d", "IP address changed", "Unknown error", "second_timer", "do_main_loop", "refill_timer", "In rephist: %I64u used by %d Tors.", "Dumping stats:", "Conn %d (socket %d) type %d (%s), state %d (%s), created %d secs ago", "Conn %d is to %s:%d.", "Conn %d: %d bytes waiting on inbuf (len %d, last read %d secs ago)", "Conn %d: %d bytes waiting on outbuf (len %d, last written %d secs ago)", "Conn %d: %d/%d bytes used on OpenSSL read buffer; %d/%d bytes used on write buffer.", "Cells processed: %I64u padding", "                 %I64u create", "                 %I64u created", "                 %I64u relay", "                        (%I64u relayed)", "                        (%I64u delivered)", "                 %I64u destroy", "Average packaged cell fullness: %2.3f%%", "Average delivered cell fullness: %2.3f%%", "Average bandwidth: %I64u/%d = %d bytes/sec reading", "Average bandwidth: %I64u/%d = %d bytes/sec writing", "--------------- Dumping memory information:", "Tor %s", "--hush", "--quiet", "--dump-config", "--version", "--digests", "--list-torrc-options", "--library-versions", "--help", "nickname", "do_list_fingerprint", "non-builtin", "%s is not a recognized argument to --dump-config. Please select 'short', 'non-builtin', or 'full'", "cached-status", "/proc/meminfo", "/etc/hosts", "/dev/random", "/dev/urandom", "/dev/srandom", "v3-status-votes.tmp", "v3-status-votes", "unparseable-desc", "unparseable-desc.tmp", "state.tmp", "cached-extrainfo.tmp.tmp", "cached-extrainfo.new.tmp", "cached-extrainfo.tmp", "cached-extrainfo.new", "cached-extrainfo", "cached-descriptors.tmp.tmp", "cached-descriptors.new.tmp", "cached-descriptors.tmp", "cached-descriptors.new", "cached-descriptors", "cached-microdescs.new.tmp", "cached-microdescs.new", "cached-microdescs.tmp", "cached-microdescs", "cached-microdesc-consensus.tmp", "cached-microdesc-consensus", "unverified-microdesc-consensus.tmp", "unverified-microdesc-consensus", "unverified-consensus.tmp", "unverified-consensus", "cached-consensus.tmp", "cached-consensus", "cached-certs.tmp", "cached-certs", "/etc/resolv.conf", "router-stability", "%s.tmp", "router-stability.tmp", "hashed-fingerprint.tmp", "hashed-fingerprint", "fingerprint.tmp", "fingerprint", "approved-routers", "conn-stats.tmp", "conn-stats", "buffer-stats.tmp", "buffer-stats", "exit-stats.tmp", "exit-stats", "entry-stats.tmp", "entry-stats", "dirreq-stats.tmp", "dirreq-stats", "bridge-stats.tmp", "bridge-stats", "secret_id_key.tmp", "secret_onion_key.tmp", "secret_onion_key_ntor.old", "secret_onion_key.old", "secret_id_key.old", "secret_onion_key_ntor.tmp", "secret_onion_key_ntor", "secret_onion_key", "secret_id_key", "secret_id_key.old.tmp", "secret_onion_key.old.tmp", "Kernel32.dll", "SetProcessDEPPolicy", "Configuration was valid", ".%s.exit", "REVERSE[%s]", "wildcard_addr", "addressmap_register", "addressmap.c", "address", "client_dns_set_addressmap_impl", "%s.%s.exit", "client_dns_set_addressmap", "Error parsing VirtualAddressNetwork%s %s", "Incorrect address type for VirtualAddressNetwork%s", "VirtualAddressNetwork%s expects a /%d network or larger", "address_is_in_virtual_range", ".virtual", "conf->bits <= total_bytes * 8", "get_random_virtual_addr", "tor_addr_compare_masked(addr_out, &conf->addr, conf->bits, CMP_EXACT)==0", "addressmap", "addressmap_get_virtual_address", "new_address", "addressmap_register_virtual_address", "virtaddress_reversemap", "!vent_needs_to_be_added", "%s%s %s%s NEVER", "%s%s %s%s \"%s\"", "%s%s %s%s", "set onion key", "onionkey", "get_onion_key", "router.c", "dup_onion_keys", "client_identitykey", "assert_identity_keys_ok", "server_identitykey", "crypto_pk_eq_keys(client_identitykey, server_identitykey)", "!crypto_pk_eq_keys(client_identitykey, server_identitykey)", "get_server_identity_key", "server_mode(get_options())", "get_tlsclient_identity_key", "Error generating onion key", "rotated onion key", "Error constructing key", "Can't read key from \"%s\"", "Another Tor process has locked \"%s\". Not writing any new keys.", "Generated key seems invalid", "Couldn't write generated key to \"%s\".", "Error loading private key.", "init_key_from_file", "Unexpected tag %s on private key.", "init_curve25519_keypair_from_file", "legacy_signing_key", "authority_signing_key", "legacy_certificate", "authority_certificate", "Your v3 authority certificate has expired. Generate a new one NOW.", "Your v3 authority certificate expires in %d hours; Generate a new one NOW.", "Your v3 authority certificate expires in %d days; Generate a new one soon.", "AccountingMax enabled", "BandwidthRate under 50KB", "reason", "decide_to_advertise_dirport", "extend_info_from_router", "bandwidth", "authority.z", "ORPort found reachable", "REACHABILITY_SUCCEEDED ORADDRESS=%s:%d", "DirPort found reachable", "REACHABILITY_SUCCEEDED DIRADDRESS=%s:%d", "refuseunknownexits", "desc_routerinfo->cache_info.saved_location == SAVED_NOWHERE", "router_get_my_descriptor", "!body[desc_routerinfo->cache_info.signed_descriptor_len]", "! routerinfo_incompatible_with_extrainfo(ri, ei, NULL, NULL)", "router_rebuild_descriptor", "time for new descriptor", "not listed in consensus", "version listed in consensus is quite old", "bandwidth has changed", " HOSTNAME=", "METHOD=%s%s%s", "EXTERNAL_ADDRESS ADDRESS=%s METHOD=DIRSERV", "Tor %s on %s", "family %s", "or-address %s:%d", "allow-single-hop-exits", "hidden-service-dir", "hibernating 1", "caches-extra-info", "extra-info-digest ", "router %s %s %d 0 %d", "%splatform %s", "protocols Link 1 2 Circuit 1", "published %s", "fingerprint %s", "uptime %ld", "bandwidth %d %d %d", "%s%s%s%sonion-key", "%ssigning-key", "%s%s%s%s%s", "contact %s", "ntor-onion-key %s", "reject *:*", "reject 1-65535", "ipv6-policy %s", "router-signature", "reject *:*", "extra-info %s %s", "published %s", "geoip-db-digest %s", "geoip6-db-digest %s", "dirreq-stats-end", "stats\\dirreq-stats", "entry-stats-end", "stats\\entry-stats", "cell-stats-end", "stats\\buffer-stats", "exit-stats-end", "stats\\exit-stats", "conn-bi-direct", "stats\\conn-stats", "is_legal_nickname", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", "is_legal_hexdigest", "0123456789ABCDEFabcdef", "<NULL BUFFER>", "<null>", "general", "bridge", "controller", "router_purpose_to_string", "router_get_all_orports", "D27178388FA75B96D37FA36E0B015227DDDBDA51", "B59F6E99C575113650C99F1C425BA7B20A8C071D", "A61682F34B9BB9694AC98491FE1ABBFE61923941", "9DCD8E3F1DD1597E2AD476BBA28A1A89F3095227", "9904B52336713A5ADCB13E4FB14DC919E0D45571", "98CC82342DE8D298CF99D3F1A396475901E0D38E", "87326329007AF781F587AF5B594E540B2B6C7630", "57B85409891D3FB32137F642FDEDF8B7F8CDFDCD", "0E7E9C07F0969D0468AD741E172A6109DC289F3C", "09CD84F751FD6E955E0F8ADB497D5401470D697E", "download_status_reset_by_sk_in_cl", "routerlist.c", "dlstatus", "download_status_is_ready_by_sk_in_cl", "certs_out", "authority_cert_get_all", "fp-sk/", "+%s-%s", "(flags & (PDS_NO_EXISTING_SERVERDESC_FETCH| PDS_NO_EXISTING_MICRODESC_FETCH))", "router_pick_dirserver_generic", "total < INT64_MAX", "choose_array_element_by_weight", "total_so_far == total", "n_chosen == 1", "i_chosen >= 0", "i_chosen < n_entries", "rule == NO_WEIGHTING || rule == WEIGHT_FOR_EXIT || rule == WEIGHT_FOR_GUARD || rule == WEIGHT_FOR_MID || rule == WEIGHT_FOR_DIR", "compute_weighted_bandwidths", "rule == NO_WEIGHTING || rule == WEIGHT_FOR_EXIT || rule == WEIGHT_FOR_GUARD", "smartlist_choose_node_by_bandwidth", "bandwidths[i].dbl >= 0.0", "!(weight_for_exit && need_guard)", "router_choose_random_node", "hexdigest", "hex_digest_nickname_decode", "router_get_mutable_by_digest", "router_get_by_descriptor_digest", "extrainfo_get_by_descriptor_digest", "len > 32", "signed_descriptor_get_body_impl", "desc->saved_offset + len <= store->mmap->size", "router ", "extra-info ", "router descriptors", "extra-info documents", "ri->purpose == ROUTER_PURPOSE_GENERAL", "signed_descriptor_from_routerinfo", "In %d live descriptors: %I64u bytes.  In %d old descriptors: %I64u bytes.", "ri_generated != ri", "routerlist_insert", "ri->cache_info.routerlist_index == -1", "!ri_old", "ei_generated != ei", "extrainfo_insert", "routerlist_insert_old", "0 <= idx && idx < smartlist_len(rl->routers)", "routerlist_remove", "smartlist_get(rl->routers, idx) == ri", "ri_tmp == ri", "sd_tmp == &(ri->cache_info)", "0 <= idx && idx < smartlist_len(rl->old_routers)", "routerlist_remove_old", "smartlist_get(rl->old_routers, idx) == sd", "idx == sd->routerlist_index", "sd_tmp == sd", "ri_generated != ri_new", "routerlist_replace", "ri_old != ri_new", "ri_new->cache_info.routerlist_index == -1", "smartlist_get(rl->routers, idx) == ri_old", "ri_old == ri_old_tmp", "routerlist_find_elt_(rl->routers, ri_old, -1) == -1", "!ri_tmp || ri_tmp == ri_old", "router_add_to_routerlist", "Router descriptor was not new.", "Router descriptor is not referenced by any network-status.", "Skipping router descriptor: not in consensus.", "Router descriptor was not a configured bridge.", "Valid server updated", "Invalid server updated. (This dirserver is marking your server as unapproved.)", "Router descriptor was really old.", "hi < smartlist_len(lst)", "routerlist_remove_old_cached_routers_with_id", "lo <= hi", "tor_memeq(ident, r->identity_digest, DIGEST_LEN)", "r->published_on <= r_next->published_on", "routerlist_descriptors_added", "router_load_single_router", "@source controller", "@purpose %s", "Couldn't parse router descriptor.", "ri->purpose == purpose", "Router's identity key matches mine.", "directory server \"%s\" at %s:%d", "directory server at %s:%d", "result", "list_pending_downloads", "list_pending_fpsk_downloads", "purpose == DIR_PURPOSE_FETCH_SERVERDESC || purpose == DIR_PURPOSE_FETCH_MICRODESC", "launch_descriptor_downloads", "microdesc", "update_consensus_router_descriptor_downloads", "unknown", "r1 && r2", "router_differences_are_cosmetic", "routerinfo_incompatible_with_extrainfo", "Extrainfo signature was bad, or signed with wrong key.", "Extrainfo nickname or identity did not match routerinfo", "Extrainfo signature bad, or signed with wrong key", "Extrainfo published time did not match routerdesc", "Extrainfo digest did not match value from routerdesc", "r == r2", "routerlist_assert_ok", "&(r->cache_info) == sd2", "r->cache_info.routerlist_index == r_sl_idx", "!r2 || sd != &(r2->cache_info)", "sd == sd2", "sd->routerlist_index == sd_sl_idx", "tor_memeq(r->cache_info.identity_digest, d, DIGEST_LEN)", "tor_memeq(sd->signed_descriptor_digest, d, DIGEST_LEN)", "!tor_digest_is_zero(d)", "tor_memeq(sd->extra_info_digest, d, DIGEST_LEN)", "tor_memeq(ei->cache_info.signed_descriptor_digest, d, DIGEST_LEN)", "tor_memeq(ei->cache_info.signed_descriptor_digest, sd->extra_info_digest, DIGEST_LEN)", "Contact %s, Platform %s", "hid_serv_get_responsible_directories", "PROXY_CONNECTED", "PROXY_SOCKS5_WANT_CONNECT_OK", "PROXY_SOCKS5_WANT_AUTH_RFC1929_OK", "PROXY_SOCKS5_WANT_AUTH_METHOD_RFC1929", "PROXY_SOCKS5_WANT_AUTH_METHOD_NONE", "PROXY_SOCKS4_WANT_CONNECT_OK", "PROXY_HTTPS_WANT_CONNECT_OK", "PROXY_INFANT", "PROXY_NONE", "c->magic == CONTROL_CONNECTION_MAGIC", "TO_CONTROL_CONN", "c->magic == LISTENER_CONNECTION_MAGIC", "TO_LISTENER_CONN", "x->magic == ORIGIN_CIRCUIT_MAGIC", "TO_ORIGIN_CIRCUIT", "OR listener", "Socks listener", "Transparent pf/netfilter listener", "Transparent natd listener", "DNS listener", "Directory listener", "CPU worker", "Control listener", "Control", "Extended OR", "Extended OR listener", "unknown [%d]", "connect()ing", "handshaking (proxy)", "handshaking (TLS)", "renegotiating (TLS, v2 handshake)", "waiting for renegotiation or V3 handshake", "handshaking (Tor, v2 handshake)", "handshaking (Tor, v3 handshake)", "waiting for authentication type", "waiting for client nonce", "waiting for client hash", "flushing final OKAY", "waiting for dest info", "connecting", "resolve failed", "waiting for socks info", "waiting for natd dest info", "waiting for rendezvous desc", "waiting for controller", "waiting for circuit", "waiting for connect response", "waiting for resolve response", "client sending", "client reading", "client finished", "waiting for command", "writing", "busy with onion", "open (protocol v1)", "waiting for authentication (protocol v1)", "unknown state [%d] on unknown [%s] connection", "type == CONN_TYPE_OR || type == CONN_TYPE_EXT_OR", "or_connection_new", "connection.c", "type == CONN_TYPE_AP", "entry_connection_new", "type == CONN_TYPE_EXIT", "edge_connection_new", "! SOCKET_OK(conn_a->s)", "connection_link_connections", "! SOCKET_OK(conn_b->s)", "conn->magic == OR_CONNECTION_MAGIC", "connection_free_", "conn->magic == ENTRY_CONNECTION_MAGIC", "conn->magic == EDGE_CONNECTION_MAGIC", "conn->magic == DIR_CONNECTION_MAGIC", "conn->magic == CONTROL_CONNECTION_MAGIC", "conn->magic == LISTENER_CONNECTION_MAGIC", "conn->magic == BASE_CONNECTION_MAGIC", "conn->type == CONN_TYPE_CONTROL_LISTENER", "!connection_is_on_closeable_list(conn)", "connection_free", "!connection_in_array(conn)", "connection_about_to_close_connection", "connection_mark_for_close_", "line < 1<<16", "connection_mark_for_close_internal_", "connection_expire_held_open", "TOO_MANY_CONNECTIONS CURRENT=%d", "connection_listener_new", "type == CONN_TYPE_AP_DNS_LISTENER", "(size_t)remotelen >= sizeof(struct sockaddr_in)", "connection_handle_listener_read", "new_type == CONN_TYPE_CONTROL", "options", "connection_connect", "dest_addr_len > 0", "connection_proxy_connect", "CONNECT %s HTTP/1.1", "Host: %s", "Proxy-Authorization: Basic %s", "CONNECT %s HTTP/1.0", "strlen(socks_args_string) > 0", "buf_size >= SOCKS4_STANDARD_BUFFER_SIZE + strlen(socks_args_string)", "[no reason given]", "connection_read_proxy_handshake", "strlen(socks_args_string) <= MAX_SOCKS5_AUTH_SIZE_TOTAL", "user && pass", "usize <= MAX_SOCKS5_AUTH_FIELD_SIZE && psize <= MAX_SOCKS5_AUTH_FIELD_SIZE", "real_port <= UINT16_MAX", "retry_listener_ports", "Chosen Or/DirPort changed", "connection_consider_empty_read_buckets", "connection_consider_empty_write_buckets", "milliseconds_elapsed >= 0", "connection_bucket_refill", "GLOBAL", "ORCONN ID=%I64u", "connection_bucket_should_increase", "!conn->marked_for_close", "connection_handle_read_impl", "(unknown, errno was 0)", "!connection_is_listener(conn)", "connection_handle_write_impl", "TLS error in connection_tls_continue_handshake()", "TLS error in during flush", "TLS closed during flush", "Got error back from connection_flushed_some()", "connection_get_by_type_state_rendquery", "rendquery", "connection_state_is_open", "connection_state_is_connecting", "connection_process_inbuf", "!conn->in_flushed_some", "connection_flushed_some", "connection_finished_flushing", "connection_finished_connecting", "In buffers for %d connections: %I64u used/%I64u allocated", "  For %d %s connections: %I64u used/%I64u allocated", "assert_connection_ok", "conn->type >= CONN_TYPE_MIN_", "conn->type <= CONN_TYPE_MAX_", "conn->linked_conn->linked_conn == conn", "conn->linked", "!SOCKET_OK(conn->s)", "(conn->type == CONN_TYPE_EXIT && conn->state == EXIT_CONN_STATE_RESOLVING) || connection_is_writing(conn) || conn->write_blocked_on_bw || (CONN_IS_EDGE(conn) && TO_EDGE_CONN(conn)->edge_blocked_on_circ)", "conn->address", "or_conn->tls", "entry_conn->chosen_exit_name", "entry_conn->socks_request", "entry_conn->socks_request->has_finished", "ENTRY_TO_EDGE_CONN(entry_conn)->cpath_layer", "conn->purpose == EXIT_PURPOSE_CONNECT || conn->purpose == EXIT_PURPOSE_RESOLVE", "!conn->purpose", "conn->state == LISTENER_STATE_READY", "conn->state >= OR_CONN_STATE_MIN_", "conn->state <= OR_CONN_STATE_MAX_", "conn->state >= EXT_OR_CONN_STATE_MIN_", "conn->state <= EXT_OR_CONN_STATE_MAX_", "conn->state >= EXIT_CONN_STATE_MIN_", "conn->state <= EXIT_CONN_STATE_MAX_", "conn->purpose >= EXIT_PURPOSE_MIN_", "conn->purpose <= EXIT_PURPOSE_MAX_", "conn->state >= AP_CONN_STATE_MIN_", "conn->state <= AP_CONN_STATE_MAX_", "TO_ENTRY_CONN(conn)->socks_request", "conn->state >= DIR_CONN_STATE_MIN_", "conn->state <= DIR_CONN_STATE_MAX_", "conn->purpose >= DIR_PURPOSE_MIN_", "conn->purpose <= DIR_PURPOSE_MAX_", "conn->state >= CPUWORKER_STATE_MIN_", "conn->state <= CPUWORKER_STATE_MAX_", "conn->state >= CONTROL_CONN_STATE_MIN_", "conn->state <= CONTROL_CONN_STATE_MAX_", "SOCKS4", "SOCKS5", "pluggable transports SOCKS", "proxy_type_to_string", "evdns_server_callback", "dnsserv.c", "q->type == EVDNS_TYPE_PTR", "(Tor_internal)", "dnsserv_configure_listener", "SOCKET_OK(conn->s)", "conn->type == CONN_TYPE_AP_DNS_LISTENER", "dnsserv_close_listener", "x->magic == OR_CIRCUIT_MAGIC", "TO_OR_CIRCUIT", "padding", "create", "created", "destroy", "create_fast", "created_fast", "versions", "netinfo", "relay_early", "create2", "created2", "vpadding", "auth_challenge", "authenticate", "authorize", "unrecognized", "command_process_var_cell", "command.c", "var_cell", "command_process_create_cell", "backward", "listener", "command_handle_incoming_channel", "command_setup_channel", "command_setup_listener", "listener->state == CHANNEL_LISTENER_STATE_LISTENING", "CHUNK_ALLOC_SIZE(chunk->memlen) == chunk->DBG_alloc", "chunk_free_unchecked", "buffers.c", "total_bytes_allocated_in_chunks >= CHUNK_ALLOC_SIZE(chunk->memlen)", "sz > chunk->memlen", "chunk_grow", "chunk->DBG_alloc == CHUNK_ALLOC_SIZE(memlen_orig)", "CHUNK_REMAINING_CAPACITY(buf->head) >= needed", "buf_pullup", "newhead->memlen >= capacity", "dest->datalen == bytes", "buf->datalen >= n", "buf_remove_from_front", "buf->head", "buf_add_chunk_with_capacity", "!buf->head", "read_result < INT_MAX", "read_to_chunk", "CHUNK_REMAINING_CAPACITY(chunk) >= at_most", "read_to_chunk_tls", "reached_eof", "read_to_buf", "SOCKET_OK(s)", "total_read+r < INT_MAX", "read_to_buf_tls", "write_result < INT_MAX", "flush_chunk", "sz <= chunk->datalen", "flush_chunk_tls", "sz == 0", "buf_flushlen", "flush_buf", "*buf_flushlen <= buf->datalen", "sz <= *buf_flushlen", "flushed < INT_MAX", "flush_buf_tls", "flushlen <= *buf_flushlen", "buf->datalen < INT_MAX", "write_to_buf", "string", "peek_from_buf", "string_len <= buf->datalen", "fetch_from_buf", "cp < INT_MAX", "move_buf_to_buf", "buf_find_pos_of_char", "out->pos < (off_t)out->chunk->datalen", "out->pos == 0", "cp - chunk->data < INT_MAX", "pos.chunk_pos + pos.pos < INT_MAX", "buf_find_string_offset", "Content-Length: ", "body_used", "fetch_from_buf_http", "DANGEROUS_SOCKS PROTOCOL=SOCKS%d ADDRESS=%s:%d", "buf->head && buf->head->datalen >= 2", "fetch_from_buf_socks", "!req->socks_version", "parse_socks", "next < data+datalen", "HTTP/1.0 501 Tor is not an HTTP Proxy", "Content-Type: text/html; charset=iso-8859-1", "Tor is not an HTTP Proxy", "SOCKS_UNKNOWN_PROTOCOL DATA=\"%s\"", "fetch_from_buf_socks_client", "server doesn't support any of our available authentication methods", "authentication failed", "invalid response to connect request", "parse_socks_client", "assert_buf_ok", "buf->magic == BUFFER_MAGIC", "!buf->tail", "buf->datalen == 0", "buf->tail", "ch->datalen <= ch->memlen", "ch->data >= &ch->mem[0]", "ch->data < &ch->mem[0]+ch->memlen", "ch->data+ch->datalen <= &ch->mem[0] + ch->memlen", "ch == buf->tail", "buf->datalen == total", "circ->base_.purpose == CIRCUIT_PURPOSE_C_INTRODUCING", "rend_client_introcirc_has_opened", "rendclient.c", "circ->cpath", "circ->base_.purpose == CIRCUIT_PURPOSE_C_ESTABLISH_REND", "rend_client_send_establish_rendezvous", "circ->rend_data", "Support022HiddenServices", "introcirc->base_.purpose == CIRCUIT_PURPOSE_C_INTRODUCING", "rend_client_send_introduction", "rendcirc->base_.purpose == CIRCUIT_PURPOSE_C_REND_READY", "introcirc->rend_data", "rendcirc->rend_data", "!rend_cmp_service_ids(introcirc->rend_data->onion_address, rendcirc->rend_data->onion_address)", "!(introcirc->build_state->onehop_tunnel)", "!(rendcirc->build_state->onehop_tunnel)", "payload_len <= RELAY_PAYLOAD_SIZE", "rend_client_rendcirc_has_opened", "circ->build_state->chosen_exit", "rend_client_introduction_acked", "!(circ->build_state->onehop_tunnel)", "desc_id", "directory_get_from_hs_dir", "rend_query", "(none)", "rend_client_refetch_v2_renddesc", "circ->build_state", "rend_client_receive_rendezvous", "circ->build_state->pending_final_cpath", "hop->rend_dh_handshake_state", "onion_address", "rend_client_lookup_service_authorization", ".onion", "CONST_TO_OR_CIRCUIT", "CONST_TO_ORIGIN_CIRCUIT", "old_chan->cmux", "circuit_set_circid_chan_helper", "circuitlist.c", "chan->cmux", "bool_eq(or_circ->p_chan_cells.n, or_circ->next_active_on_p_chan)", "circuit_set_p_circid_chan", "bool_eq(circ->n_chan_cells.n, circ->next_active_on_n_chan)", "circuit_set_n_circid_chan", "circuit_set_state", "!circ->n_chan_create_cell", "circuit_get_all_pending_on_channel", "circ->state == CIRCUIT_STATE_CHAN_WAIT", "circuit_count_pending_on_channel", "doing handshakes", "processing the onion", "connecting to server", "unknown state [%d]", "SERVER", "GENERAL", "HS_CLIENT_INTRO", "HS_CLIENT_REND", "HS_SERVICE_INTRO", "HS_SERVICE_REND", "TESTING", "MEASURE_TIMEOUT", "CONTROLLER", "PATH_BIAS_TESTING", "UNKNOWN_%d", "OR_HSSI_ESTABLISHED", "OR_HSCR_ESTABLISHED", "OR_HS_R_JOINED", "HSCI_CONNECTING", "HSCI_INTRO_SENT", "HSCI_DONE", "HSCR_CONNECTING", "HSCR_ESTABLISHED_IDLE", "HSCR_ESTABLISHED_WAITING", "HSCR_JOINED", "HSSI_CONNECTING", "HSSI_ESTABLISHED", "HSSR_CONNECTING", "HSSR_JOINED", "Circuit at relay", "Acting as intro point", "Acting as rendevous (pending)", "Acting as rendevous (established)", "General-purpose client", "Hidden service client: Connecting to intro point", "Hidden service client: Waiting for ack from intro point", "Hidden service client: Received ack from intro point", "Hidden service client: Establishing rendezvous point", "Hidden service client: Pending rendezvous point", "Hidden service client: Pending rendezvous point (ack received)", "Hidden service client: Active rendezvous point", "Measuring circuit timeout", "Hidden service: Establishing introduction point", "Hidden service: Introduction point", "Hidden service: Connecting to rendezvous point", "Hidden service: Active rendezvous point", "Testing circuit", "Circuit made by controller", "Path-bias testing circuit", "circwindow", "circ->magic == ORIGIN_CIRCUIT_MAGIC", "circuit_free", "circ->magic == OR_CIRCUIT_MAGIC", "other->base_.magic == OR_CIRCUIT_MAGIC", "c->circuit == NULL", "circuit_free_all", "Conn %d has %s circuit: circID %u (other side %u), state %d (%s), born %ld:", "App-ward", "Exit-ward", "!circ || (CIRCUIT_IS_ORIGIN(circ) ? circ->magic == ORIGIN_CIRCUIT_MAGIC : circ->magic == OR_CIRCUIT_MAGIC)", "circuit_get_by_edge_conn", "found_circ != circ", "circuit_set_rend_token", "!(flags & CIRCLAUNCH_ONEHOP_TUNNEL)", "circuit_find_to_cannibalize", "circuit_mark_for_close_", "circ->state == CIRCUIT_STATE_OPEN", "ocirc->build_state->chosen_exit", "ocirc->rend_data", "assert_cpath_layer_ok", "cp->magic == CRYPT_PATH_MAGIC", "cp->f_crypto", "cp->b_crypto", "!cp->rend_dh_handshake_state", "cp->package_window >= 0", "cp->deliver_window >= 0", "cp->prev->state == CPATH_STATE_OPEN", "assert_cpath_ok", "assert_circuit_ok", "c->magic == ORIGIN_CIRCUIT_MAGIC || c->magic == OR_CIRCUIT_MAGIC", "c->purpose >= CIRCUIT_PURPOSE_MIN_ && c->purpose <= CIRCUIT_PURPOSE_MAX_", "!c->n_hop", "c == c2", "conn->base_.type == CONN_TYPE_EXIT", "c->deliver_window >= 0", "c->package_window >= 0", "!c->n_chan_create_cell", "or_circ->n_crypto", "or_circ->p_crypto", "or_circ->n_digest", "or_circ->p_digest", "circuits_pending_chans && smartlist_contains(circuits_pending_chans, c)", "!circuits_pending_chans || !smartlist_contains(circuits_pending_chans, c)", "or_circ", "or_circ->rend_splice", "or_circ->rend_splice->rend_splice == or_circ", "or_circ->rend_splice != or_circ", "!or_circ || !or_circ->rend_splice", "@last-listed %s", "microdesc.c", "((size_t)size) == annotation_len + md->bodylen", "microdesc_cache_rebuild", "md->saved_location == SAVED_IN_CACHE", "onion-key", "avail >= 0", "fast_memeq(md->body, \"onion-key\", 9)", "ns->flavor == FLAV_MICRODESC", "microdesc_list_missing_digest256", "update_microdescs_from_networkstatus", "connection_or_remove_from_identity_map", "connection_or.c", "connection_or_set_identity_digest", "tor_memeq(tmp->identity_digest, digest, DIGEST_LEN)", "tmp != conn", "tmp == conn", "connection_or_remove_from_ext_or_id_map", "connection_or_set_ext_or_identifier", "conn->type == CONN_TYPE_OR || conn->type == CONN_TYPE_EXT_OR", "connection_or_get_state_description", "%s with SSL state %s", ". Top reasons:", "%d connections have failed%s", " %d connections died in state %s", "connection_or_change_state", "connection_or_get_num_circuits", "connection_or_reached_eof", "connection_or_process_inbuf", "TO_CONN(conn)->proxy_state == PROXY_CONNECTED", "connection_or_finished_flushing", "or_conn", "connection_or_finished_connecting", "conn->state == OR_CONN_STATE_CONNECTING", "perconnbwrate", "perconnbwburst", "connection_or_is_bad_for_new_circs", "connection_or_mark_bad_for_new_circs", "connection_or_notify_error", "connection_or_connect", "id_digest", "Can't connect to bridge", "orconn", "connection_or_close_normally", "connection_or_close_for_error", "!(conn->chan)", "connection_tls_start_handshake", "!conn->tls", "conn->base_.state == OR_CONN_STATE_TLS_HANDSHAKING", "connection_tls_continue_handshake", "conn->base_.type == CONN_TYPE_OR || conn->base_.type == CONN_TYPE_EXT_OR", "connection_or_nonopen_was_started_here", "outgoing", "incoming", "conn->chan", "connection_or_check_valid_tls_handshake", "Unexpected identity in router certificate", "connection_or_client_used", "connection_or_nonopen_was_started_here(conn)", "connection_or_launch_v3_or_handshake", "tor_tls_received_v3_certificate(conn->tls)", "connection_or_write_cell_to_buf", "connection_or_write_var_cell_to_buf", "conn->handshake_state && !conn->handshake_state->sent_versions_at", "connection_or_send_versions", "conn->handshake_state", "connection_or_send_netinfo", "conn->base_.state == OR_CONN_STATE_OR_HANDSHAKING_V3", "connection_or_send_certs_cell", "pos == (int)cell_len", "connection_or_send_auth_challenge_cell", "AUTH0001", "my_digests", "connection_or_compute_authenticate_cell_body", "their_digests", "ptr - out == V3_AUTH_FIXED_PART_LEN", "ptr - out == V3_AUTH_BODY_LEN", "ptr <= out+outlen", "authlen + 4 <= cell->payload_len", "connection_or_send_authenticate_cell", "accounting_parse_options", "hibernate.c", "edge_of_accounting_period_containing", "accounting_set_wakeup_time", "bw_accounting", "hibernate_state == HIBERNATE_STATE_LOWBANDWIDTH || hibernate_state == HIBERNATE_STATE_DORMANT || hibernate_state == HIBERNATE_STATE_INITIAL", "hibernate_end", "shutdown_time", "consider_hibernation", "hibernate_end_time", "accounting/enabled", "accounting/hibernating", "accounting/bytes", "%I64u %I64u", "accounting/bytes-left", "accounting/interval-start", "accounting/interval-wake", "accounting/interval-end", "update_or_history", "rephist.c", "!hist->down_since", "rep_hist_note_router_reachable", "(!at_addr && !at_port) || (at_addr && at_port)", "rep_hist_note_router_unreachable", "rep_hist_make_router_pessimal", "--------------- Dumping history information:", "OR %s [%s]: %ld/%ld good connections; uptime %ld/%ld sec (%.2f%%); wmtbf %lu:%02lu:%02lu", "    Extend attempts: ", "%s [%s](%ld/%ld); ", "format 2", "stored-at %s", "tracked-since %s", "last-downrated %s", "+MTBF %lu %.5f%s%s", "+WFU %lu %lu%s%s", "format ", "last-downrated ", "stored-at ", "tracked-since ", "%40s %ld %lf S=%10s %8s", "+MTBF ", "+MTBF %lu %lf S=%10s %8s", "+WFU %lu %lu S=%10s %8s", "i < NUM_TOTALS", "rep_hist_fill_bandwidth_history", "%I64u,", "write-history", "read-history", "dirreq-write-history", "dirreq-read-history", "rep_hist_get_bandwidth_lines", "%s %s (%d s) ", "read_array && write_array", "rep_hist_load_state", "dir_read_array && dir_write_array", "Parsing of bandwidth history values failed", "predicted_ports_list", "rep_hist_note_used_port", "rep_hist_get_predicted_ports", "PK operations: %lu directory objects signed, %lu directory objects verified, %lu routerdescs signed, %lu routerdescs verified, %lu onionskins encrypted, %lu onionskins decrypted, %lu client-side TLS handshakes, %lu server-side TLS handshakes, %lu rendezvous client operations, %lu rendezvous middle operations, %lu rendezvous server operations.", "now >= start_of_exit_stats_interval", "rep_hist_format_exit_stats", "%d=%I64u", "other=%I64u", "other=%u", "exit-stats-end %s (%d s)", "exit-kibibytes-written %s", "exit-kibibytes-read %s", "exit-streams-opened %s", "now >= start_of_buffer_stats_interval", "rep_hist_format_buffer_stats", "cell-stats-end %s (%d s)", "cell-processed-cells %s", "cell-queued-cells %s", "cell-time-in-queue %s", "cell-circuits-per-decile %d", "served-descs-stats-end %s (%d s) total=%lu unique=%u max=%d q3=%d md=%d q1=%d min=%d", "str != NULL", "rep_hist_desc_stats_write", "served-desc-stats", "now >= start_of_conn_stats_interval", "rep_hist_format_conn_stats", "conn-bi-direct %s (%d s) %d,%d,%d,%d", "HiddenServiceDir", "HiddenServicePort", "HiddenServiceAuthorizeClient", "stealth", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_", "HiddenServiceVersion", "!strcasecmp(line->key, \"HiddenServiceVersion\")", "rend_config_services", "rendservice.c", "oc->rend_data", "rend_service_add_filenames_to_list", "%s\\private_key", "%s\\hostname", "%s\\client_keys", "\\private_key", "\\hostname", "%s.onion", "client-name %s", "descriptor-cookie %s", "client-key", "%s.onion %s # client: %s", "service", "rend_check_authorization", "descriptor_cookie", "!(circuit->build_state->onehop_tunnel)", "rend_service_introduce", "circuit->rend_data", "early parsing", "decryption", "late parsing", "late validation", "launched->build_state", "unknown %s error for INTRODUCE2", "unknown error for INTRODUCE2", "Bad parameters to find_rp_for_intro()", "Couldn't find router %s named in INTRODUCE2 cell", "Could build extend_info_t for router %s named in INTRODUCE2 cell", "Unknown version %d in INTRODUCE2 cell", "got a truncated INTRODUCE%d cell", "unknown INTRODUCE%d error", "rend_service_parse_intro_for_v0_or_v1() called with bad version %d on INTRODUCE%d cell (this is a bug)", "short plaintext of encrypted part in v1 INTRODUCE%d cell (%lu bytes, needed %lu)", "couldn't find a nul-padded nickname in INTRODUCE%d cell", "bad nickname in INTRODUCE%d cell", "rend_service_parse_intro_for_v2() called with bad version %d on INTRODUCE%d cell (this is a bug)", "truncated plaintext of encrypted parted of version %d INTRODUCE%d cell", "error decoding onion key in version %d INTRODUCE%d cell", "rend_service_parse_intro_for_v3() called with bad version %d on INTRODUCE%d cell (this is a bug)", "wrong auth data size %d for INTRODUCE%d cell, should be %d", "rend_service_decrypt_intro() called with bad parameters", "rend_intro_cell_t was missing ciphertext for INTRODUCE%d cell", "got an INTRODUCE%d cell for the wrong service (%s)", "got an INTRODUCE%d cell with a truncated PK-encrypted part", "couldn't decrypt INTRODUCE%d cell", "unknown INTRODUCE%d error decrypting encrypted part", "rend_service_parse_intro_plaintext() called with NULL rend_intro_cell_t", "rend_intro_cell_t was missing plaintext", "decrypted plaintext of INTRODUCE%d cell was truncated (%ld bytes)", "decrypted plaintext of INTRODUCE%d cell was too long (%ld bytes)", "unknown INTRODUCE%d error parsing encrypted part", "NULL intro cell passed to rend_service_validate_intro_late()", "unknown authorization type %d", "oldcirc->base_.purpose == CIRCUIT_PURPOSE_S_CONNECT_REND", "rend_service_relaunch_rendezvous", "oldstate", "newstate", "circuit->base_.purpose == CIRCUIT_PURPOSE_S_ESTABLISH_INTRO", "rend_service_intro_has_opened", "circuit->cpath", "circuit->build_state->is_internal", "INTRODUCE", "rend_service_intro_established", "circuit->base_.purpose == CIRCUIT_PURPOSE_S_CONNECT_REND", "rend_service_rendezvous_has_opened", "circuit->build_state", "find_intro_circuit", "TO_CIRCUIT(circ)->purpose == CIRCUIT_PURPOSE_S_ESTABLISH_INTRO || TO_CIRCUIT(circ)->purpose == CIRCUIT_PURPOSE_S_INTRO", "find_intro_point", "intro != NULL", "intro_point_should_expire_now", "rend_services_introduce", "!crypto_pk_generate_key(intro->intro_key)", "Service configured in \"%s\":", "  Intro point %d at %s: no circuit", "  Intro point %d at %s: circuit is %s", "circ->base_.purpose == CIRCUIT_PURPOSE_S_REND_JOINED", "rend_service_set_connection_addr_port", "-nt-service", "--nt-service", "--ignore-missing-torrc", "--verify-config", "--list-fingerprint", "--hash-password", "--defaults-torrc", "--allow-missing-torrc", "5 seconds", "60, 30, 30, 60", "0, 0, 5, 10, 15, 20, 30, 60", "0, 0, 0, 5, 10, 15, 20, 30, 60", "20 seconds", "___UsingTestNetworkDefaults", "TestingDirAuthVoteGuard", "TestingCertMaxDownloadTries", "TestingMicrodescMaxDownloadTries", "TestingDescriptorMaxDownloadTries", "TestingConsensusMaxDownloadTries", "TestingDirConnectionMaxStall", "TestingClientMaxIntervalWithoutRequest", "3600, 900, 900, 3600", "TestingBridgeDownloadSchedule", "0, 0, 60, 300, 600, 1800, 3600, 3600, 3600, 10800, 21600, 43200", "TestingClientConsensusDownloadSchedule", "0, 0, 60, 300, 600, 1800, 1800, 1800, 1800, 1800, 3600, 7200", "TestingServerConsensusDownloadSchedule", "0, 0, 60, 300, 600, 2147483647", "TestingClientDownloadSchedule", "0, 0, 0, 60, 60, 120, 300, 900, 2147483647", "TestingServerDownloadSchedule", "VoteOnHidServDirectoriesV2", "25 hours", "MinUptimeHidServDirectoryV2", "__OwningControllerProcess", "__LeaveStreamsUnattached", "__DisablePredictedCircuits", "__AllDirActionsPrivate", "__ReloadTorrcOnSIGHUP", "23,109,110,143", "WarnPlaintextPorts", "[FE80::]/10", "VirtualAddrNetworkIPv6", "127.192.0.0/10", "VersioningAuthoritativeDirectory", "V3BandwidthsFile", "V3AuthUseLegacyKey", "V3AuthNIntervalsValid", "V3AuthDistDelay", "V3AuthVoteDelay", "V3AuthVotingInterval", "TestingV3AuthVotingStartOffset", "TestingV3AuthInitialDistDelay", "TestingV3AuthInitialVoteDelay", "TestingV3AuthInitialVotingInterval", "V3AuthoritativeDirectory", "V2AuthoritativeDirectory", "V1AuthoritativeDirectory", "UserspaceIOCPBuffers", "UseNTorHandshake", "UseMicrodescriptors", "UseEntryGuardsAsDirGuards", "UseBridges", "UpdateBridgesFromAuthority", "TunnelDirConns", "TransProxyType", "TransPort", "TransListenAddress", "TrafficShaping", "TrackHostExitsExpire", "TrackHostExits", "TLSECGroup", "Tor2webMode", "100 msec", "TokenBucketRefillInterval", "TestVia", "TestSocks", "SysLog", "SSLKeyLifetime", "2 minutes", "SocksTimeout", "SocksPort", "SocksPolicy", "ShutdownWaitLength", "www.google.com,www.mit.edu,www.yahoo.com,www.slashdot.org", "ServerDNSTestAddresses", "ServerDNSRandomizeCase", "ServerDNSDetectHijacking", "ServerDNSAllowNonRFC953Hostnames", "SafeSocks", "SafeLogging", "Sandbox", "RunTesting", "RunAsDaemon", "RouterFile", "24 hours", "RephistTrackTime", "RendPostPeriod", "RelayBandwidthRate", "RelayBandwidthBurst", "RejectPlaintextPorts", "RefuseUnknownExits", "RedirectExit", "RecommendedServerVersions", "RecommendedClientVersions", "RecommendedVersions", "ReachableORAddresses", "ReachableDirAddresses", "ReachableAddresses", "PublishHidServDescriptors", "PublishServerDescriptor", "ProtocolWarnings", "tor-fw-helper", "PortForwardingHelper", "PortForwarding", "OptimisticData", "TestingMinFastFlagThreshold", "TestingMinExitFlagThreshold", "TestingTorNetwork", "PidFile", "PerConnBWRate", "PerConnBWBurst", "PathlenCoinWeight", "PathsNeededToBuildCircuits", "PathBiasScaleUseThreshold", "PathBiasExtremeUseRate", "PathBiasNoticeUseRate", "PathBiasUseThreshold", "PathBiasUseCloseCounts", "PathBiasDropGuards", "PathBiasMultFactor", "PathBiasScaleFactor", "PathBiasScaleThreshold", "PathBiasExtremeRate", "PathBiasWarnRate", "PathBiasNoticeRate", "PathBiasCircThreshold", "PathBiasDisableRate", "OutboundBindAddress", "ORPort", "NumDirectoryGuards", "NodeFamily", "NoPublish", "WarnUnsafeSocks", "PredictedPortsRelevanceTime", "Nickname", "NATDPort", "NATDListenAddress", "NamingAuthoritativeDirectory", "30 seconds", "NewCircuitPeriod", "MyFamily", "MonthlyAccountingStart", "MinMeasuredBWsForAuthToIgnoreAdvertised", "1750 msec", "MaxOnionQueueDelay", "MaxOnionsPending", "MaxClientCircuitsPending", "MaxCircuitDirtiness", "MaxAdvertisedBandwidth", "MapAddress", "21,22,706,1863,5050,5190,5222,5223,6523,6667,6697,8300", "1 second", "LogTimeGranularity", "LogFile", "LogLevel", "LinkPadding", "LogMessageDomains", "5 minutes", "KeepalivePeriod", "IgnoreVersion", "Socks5ProxyPassword", "Socks5ProxyUsername", "Socks5Proxy", "Socks4Proxy", "ServerTransportOptions", "ServerTransportListenAddr", "ServerTransportPlugin", "IPv6Exit", "HTTPSProxyAuthenticator", "HTTPSProxy", "HTTPProxyAuthenticator", "HTTPProxy", "CloseHSServiceRendCircuitsImmediatelyOnTimeout", "CloseHSClientCircuitsImmediatelyOnTimeout", "HSAuthorityRecordStats", "HSAuthoritativeDir", "HidServAuth", "HiddenServiceOptions", "HidServDirectoryV2", "AccelDir", "AccelName", "6 hours", "HeartbeatPeriod", "HardwareAccel", "0 minutes", "GuardLifetime", "GiveGuardFlagTo_CVE_2011_2768_VulnerableRelays", "GeoIPv6File", "<default>", "GeoIPFile", "GeoIPExcludeUnknown", "FetchV2Networkstatus", "FetchUselessDescriptors", "FetchHidServDescriptors", "FetchServerDescriptors", "FetchDirInfoExtraEarly", "FetchDirInfoEarly", "FastFirstHopPK", "FascistFirewall", "FallbackNetworkstatusFile", "FallbackDir", "ExtraInfoStatistics", "ExtORPortCookieAuthFileGroupReadable", "ExtORPortCookieAuthFile", "ExtORPort", "ExtendAllowPrivateAddresses", "ExitPortStatistics", "ExitPolicyRejectPrivate", "ExitPolicy", "ExcludeSingleHopRelays", "ExcludeExitNodes", "10 minutes", "TestingEstimatedDescriptorPropagationTime", "EntryStatistics", "EnforceDistinctSubnets", "TestingEnableTbEmptyEvent", "TestingEnableCellStatsEvent", "TestingEnableConnBwEvent", "DownloadExtraInfo", "DNSListenAddress", "DNSPort", "DynamicDHGroups", "DisableV2DirectoryInfo_", "DisableIOCP", "DisableDebuggerAttachment", "DisableAllSwap", "DirAuthorityFallbackRate", "DirReqStatistics", "DirRecordUsageSaveInterval", "DirRecordUsageRetainIPs", "DirRecordUsageGranularity", "DirRecordUsageByCountry", "DirPostPeriod", "DirPortFrontPage", "DirPort", "DirPolicy", "DirFetchPeriod", "30 minutes", "TestingAuthDirTimeToLearnReachability", "DirAllowPrivateAddresses", "DisableNetwork", "DebugLogFile", "DataDirectory", "CountPrivateBandwidth", "CookieAuthFile", "CookieAuthFileGroupReadable", "CookieAuthentication", "ControlSocketsGroupWritable", "ControlSocket", "ControlPortWriteToFile", "ControlPortFileGroupReadable", "ControlPort", "ControlListenAddress", "ContactInfo", "ConstrainedSockSize", "ConstrainedSockets", "ConnDirectionStatistics", "ConsensusParams", "ClientUseIPv6", "ClientTransportPlugin", "ClientRejectInternalAddresses", "ClientPreferIPv6ORPort", "ClientOnly", "ClientDNSRejectInternalAddresses", "-100.0", "CircuitPriorityHalflife", "CircuitStreamTimeout", "1 hour", "CircuitIdleTimeout", "CircuitBuildTimeout", "LearnCircuitBuildTimeout", "CellStatistics", "BridgeRelay", "BridgeRecordUsageByCountry", "BridgePassword", "Bridge", "AvoidDiskWrites", ".onion,.exit", "AuthoritativeDirectory", "AuthDirHasIPv6Connectivity", "AuthDirMaxServersPerAuthAddr", "AuthDirMaxServersPerAddr", "AuthDirListBadExits", "AuthDirListBadDirs", "AuthDirRejectUnlisted", "AuthDirReject", "AuthDirGuardBWGuarantee", "100 KB", "AuthDirFastGuarantee", "AuthDirInvalid", "AuthDirBadExit", "AuthDirBadDir", "AssumeReachable", "AlternateHSAuthority", "AlternateDirAuthority", "AlternateBridgeAuthority", "AllowSingleHopExits", "AllowSingleHopCircuits", "AllowNonRFC953Hostnames", "middle,rendezvous", "AllowDotExit", "Address", "AccountingStart", "0 bytes", "AccountingMax", "AccountingMaxKB", "UseFilteringSSLBufferevents", "_UseFilteringSSLBufferevents", "VirtualAddrNetworkIPv4", "VirtualAddrNetwork", "__HashedControlSessionPassword", "HashedControlPassword", "BridgeAuthoritativeDir", "BridgeAuthoritativeDirectory", "PreferTunneledDirConns", "PreferTunnelledDirConns", "ServerDNSAllowBrokenConfig", "ServerDNSAllowBrokenResolvConf", "ServerDNSSearchDomains", "SearchDomains", "ServerDNSResolvConfFile", "ResolvConf", "NumEntryNodes", "UseEntryNodes", "NumEntryGuards", "NumHelperNodes", "UseEntryGuards", "UseHelperNodes", "SocksListenAddress", "SocksBindAddress", "DirListenAddress", "DirBindAddress", "ORListenAddress", "ORBindAddress", "MaxMemInQueues", "MaxMemInCellQueues", "ConnLimit", "MaxConn", "DirAuthority", "DirServer", "StatusFetchPeriod", "DirFetchPostPeriod", "BandwidthBurst", "BandwidthBurstBytes", "BandwidthRate", "BandwidthRateBytes", "AutomapHostsOnResolve", "AutomapHostOnResolve", "AutomapHostsSuffixes", "AutomapHostSuffixes", "AllowInvalidNodes", "AllowUnverifiedNodes", "StrictNodes", "StrictNode", "StrictExitNodes", "StrictExitNode", "StrictEntryNodes", "StrictEntryNode", "RendExcludeNodes", "RendExcludeNode", "RendNodes", "RendNode", "NumCPUs", "NumCPU", "HiddenServiceExcludeNodes", "HiddenServiceExcludeNode", "HiddenServiceNodes", "HiddenServiceNode", "LongLivedPorts", "LongLivedPort", "FirewallPorts", "FirewallPort", "ExcludeNodes", "ExcludeNode", "EntryNodes", "EntryNode", "ExitNodes", "ExitNode", "AuthDirRejectCCs", "AuthDirRejectCC", "AuthDirInvalidCCs", "AuthDirInvalidCC", "AuthDirBadExitCCs", "AuthDirBadExitCC", "AuthDirBadDirCCs", "AuthDirBadDirCC", "global_options", "get_options_mutable", "config.c", "set_options", "%s (git-%s)", "0.2.5.10", "safe_str_client", "[scrubbed]", "safe_str", "moria1 orport=9101 v3ident=D586D18309DED4CD6D57C18FDB97EFA96D330566 128.31.0.39:9131 9695 DFC3 5FFE B861 329B 9F1A B04C 4639 7020 CE31", "tor26 orport=443 v3ident=14C131DFC5C6F93646BE72FA1401C02A8DF2E8B4 86.59.21.38:80 847B 1F85 0344 D787 6491 A548 92F9 0493 4E4E B85D", "dizum orport=443 v3ident=E8A9C45EDE6D711294FADF8E7951F4DE6CA56B58 194.109.206.212:80 7EA6 EAD6 FD83 083C 538F 4403 8BBF A077 587D D755", "Tonga orport=443 bridge 82.94.251.203:80 4A0C CD2D DC79 9508 3D73 F5D6 6710 0C8A 5831 F16D", "turtles orport=9090 v3ident=27B6B5996C426270A5C95488AA5BCEB6BCC86956 76.73.17.194:9030 F397 038A DC51 3361 35E7 B80B D99C A384 4360 292B", "gabelmoo orport=443 v3ident=ED03BB616EB2F60BEC80151114BB25CEF515B226 131.188.40.189:80 F204 4413 DAC2 E02E 3D6B CF47 35A1 9BCA 1DE9 7281", "dannenberg orport=443 v3ident=585769C78764D58426B8B52B6651A5A71137189A 193.23.244.244:80 7BE6 83E6 5D48 1413 21C5 ED92 F075 C553 64AC 7123", "urras orport=80 v3ident=80550987E1D626E3EBA5E5E75A458DE0626D088C 208.83.223.34:443 0AD3 FA88 4D18 F89E EA2D 89C0 1937 9E0E 7FD9 4417", "maatuska orport=80 v3ident=49015F787433103580E3B66A1707A00E60F2D15B 171.25.193.9:443 BD6A 8292 55CB 08E6 6FBE 7D37 4836 3586 E46B 3810", "Faravahar orport=443 v3ident=EFCBE720AB3A82B99F9E953CD5BF50F7EEFC7B97 154.35.32.5:80 CF6D 0AAF B385 BE71 B8E1 11FC 5CFF 4B47 9237 33BC", "Unix domain sockets (ControlSocket) not supported on this OS/with this build.", "Problem with ConnLimit value. See logs for details.", "options_act_reversible", "Unexpected problem parsing port config", "Failed to bind one of the listener ports.", "DisableAllSwap failure. Do you have proper permissions?", "Problem with User value. See logs for details.", "Couldn't access/create private data directory \"%s\"", "Failed to init Log options. See logs for details.", "new_options", "options_transition_requires_fresh_tls_context", "dynamic_dh_params", "config change", "Copyright (c) 2001-2004, Roger Dingledine", "Copyright (c) 2004-2006, Roger Dingledine, Nick Mathewson", "Copyright (c) 2007-2013, The Tor Project, Inc.", "tor -f <torrc> [args]", "See man page for options, or https://www.torproject.org/ for documentation.", "addr_out", "resolve_my_address", "<guessed from interfaces>", "CONFIGURED", "RESOLVED", "INTERFACE", "GETHOSTNAME", "EXTERNAL_ADDRESS ADDRESS=%s METHOD=%s%s%s", "validate_ports_csv", "Port '%s' out of range in %s", "%s (%I64u) must be at most %d", "hidserv", "options_validate", "Windows 95", "Windows 98", "Windows Me", "Invalid DataDirectory", "Unnamed", "Nickname '%s' is wrong length or contains illegal characters.", "notice stdout", "warn stdout", "Failed to validate Log options. See logs for details.", "Failed to resolve/guess local address. See logs for details.", "TransPort and TransListenAddress are disabled in this build.", "TokenBucketRefillInterval must be between 1 and 1000 inclusive.", "Authoritative directory servers must set ContactInfo", "Versioning authoritative dir servers must set Recommended*Versions.", "AuthoritativeDir is set, but none of (Bridge/V3)AuthoritativeDir is set.", "Running as authoritative directory, but no DirPort set.", "Running as authoritative directory, but no ORPort set.", "Running as authoritative directory, but ClientOnly also set.", "FetchDirInfoExtraEarly requires that you also set FetchDirInfoEarly", "ConnLimit must be greater than 0, but was set to %d", "MaxClientCircuitsPending must be between 1 and %d, but was set to %d", "Servers must be able to freely connect to the rest of the Internet, so they must not set Reachable*Addresses or FascistFirewall.", "Servers must be able to freely connect to the rest of the Internet, so they must not set UseBridges.", "You cannot set both UseBridges and EntryNodes.", "If EntryNodes is set, UseEntryGuards must be enabled.", "middle", "introduction", "rendezvous", "Unrecognized value '%s' in AllowInvalidNodes", "Unrecognized value '%s' in SafeLogging", "Unrecognized value in PublishServerDescriptor", "Bridges are not supposed to publish router descriptors to the directory authorities. Please correct your PublishServerDescriptor line.", "PathBiasNoticeRate is too high. It must be between 0 and 1.0", "PathBiasWarnRate is too high. It must be between 0 and 1.0", "PathBiasExtremeRate is too high. It must be between 0 and 1.0", "PathBiasNoticeUseRate is too high. It must be between 0 and 1.0", "PathBiasExtremeUseRate is too high. It must be between 0 and 1.0", "KeepalivePeriod option must be positive.", "PortForwarding is not compatible with Sandbox; at most one can be set", "BandwidthRate is set to %d bytes/second. For servers, it must be at least %d.", "MaxAdvertisedBandwidth is set to %d bytes/second. For servers, it must be at least %d.", "RelayBandwidthRate is set to %d bytes/second. For servers, it must be at least %d.", "RelayBandwidthBurst must be at least equal to RelayBandwidthRate.", "BandwidthBurst must be at least equal to BandwidthRate.", "Failed to parse accounting options. See logs for details.", "HTTPProxy failed to parse or resolve. Please fix.", "HTTPProxyAuthenticator is too long (>= 512 chars).", "HTTPSProxy failed to parse or resolve. Please fix.", "HTTPSProxyAuthenticator is too long (>= 512 chars).", "Socks4Proxy failed to parse or resolve. Please fix.", "Socks5Proxy failed to parse or resolve. Please fix.", "You have configured more than one proxy type. (Socks4Proxy|Socks5Proxy|HTTPSProxy|ClientTransportPlugin)", "Socks5ProxyUsername must be between 1 and 255 characters.", "Socks5ProxyPassword must be included with Socks5ProxyUsername.", "Socks5ProxyPassword must be between 1 and 255 characters.", "Bad HashedControlPassword: wrong length or bad encoding", "Bad HashedControlSessionPassword: wrong length or bad encoding", "Bad OwningControllerProcess: %s", "Directory authority/fallback line did not parse. See logs for details.", "If you set UseBridges, you must specify at least one bridge.", "Bridge line did not parse. See logs for details.", "Invalid client transport line. See logs for details.", "Invalid server transport line. See logs for details.", "ServerTransportListenAddr did not parse. See logs for details.", "ServerTransportOptions did not parse. See logs for details.", "ConstrainedSockSize is invalid.  Must be a value between %d and %d in 1024 byte increments.", "V3AuthVoteDelay plus V3AuthDistDelay must be less than half V3AuthVotingInterval", "V3AuthVoteDelay is way too low.", "V3AuthDistDelay is way too low.", "V3AuthNIntervalsValid must be at least 2.", "V3AuthVotingInterval is insanely low.", "V3AuthVotingInterval is insanely high.", "Failed to configure rendezvous options. See logs for details.", "Failed to configure client authorization for hidden services. See logs for details.", "TestingTorNetwork may only be configured in combination with a non-default set of DirAuthority or both of AlternateDirAuthority and AlternateBridgeAuthority configured.", "TestingV3AuthInitialVotingInterval may only be changed in testing Tor networks!", "TestingV3AuthInitialVoteDelay may only be changed in testing Tor networks!", "TestingV3AuthInitialDistDelay may only be changed in testing Tor networks!", "TestingV3AuthVotingStartOffset may only be changed in testing Tor networks!", "TestingAuthDirTimeToLearnReachability may only be changed in testing Tor networks!", "TestingEstimatedDescriptorPropagationTime may only be changed in testing Tor networks!", "TestingServerDownloadSchedule may only be changed in testing Tor networks!", "TestingClientDownloadSchedule may only be changed in testing Tor networks!", "TestingServerConsensusDownloadSchedule may only be changed in testing Tor networks!", "TestingClientConsensusDownloadSchedule may only be changed in testing Tor networks!", "TestingBridgeDownloadSchedule may only be changed in testing Tor networks!", "TestingClientMaxIntervalWithoutRequest may only be changed in testing Tor networks!", "TestingDirConnectionMaxStall may only be changed in testing Tor networks!", "TestingConsensusMaxDownloadTries may only be changed in testing Tor networks!", "TestingDescriptorMaxDownloadTries may only be changed in testing Tor networks!", "TestingMicrodescMaxDownloadTries may only be changed in testing Tor networks!", "TestingCertMaxDownloadTries may only be changed in testing Tor networks!", "TestingV3AuthInitialVotingInterval is insanely low.", "TestingV3AuthInitialVotingInterval does not divide evenly into 30 minutes.", "TestingV3AuthInitialVoteDelay is way too low.", "TestingV3AuthInitialDistDelay is way too low.", "TestingV3AuthInitialVoteDelay plus TestingV3AuthInitialDistDelay must be less than half TestingV3AuthInitialVotingInterval", "TestingV3AuthVotingStartOffset is higher than the voting interval.", "TestingAuthDirTimeToLearnReachability must be non-negative.", "TestingEstimatedDescriptorPropagationTime must be non-negative.", "TestingClientMaxIntervalWithoutRequest is way too low.", "TestingDirConnectionMaxStall is way too low.", "TestingConsensusMaxDownloadTries must be greater than 1.", "TestingDescriptorMaxDownloadTries must be greater than 1.", "TestingMicrodescMaxDownloadTries must be greater than 1.", "TestingCertMaxDownloadTries must be greater than 1.", "TestingEnableConnBwEvent may only be changed in testing Tor networks!", "TestingEnableCellStatsEvent may only be changed in testing Tor networks!", "TestingEnableTbEmptyEvent may only be changed in testing Tor networks!", "Can't use hardware crypto accelerator dir without engine name.", "BridgeRelay is 1, ORPort is not set. This is an invalid combination.", "PidFile is not allowed to change.", "While Tor is running, changing RunAsDaemon is not allowed.", "While Tor is running, changing Sandbox is not allowed.", "While Tor is running, changing DataDirectory (\"%s\"->\"%s\") is not allowed.", "While Tor is running, changing User is not allowed.", "While Tor is running, changing OpenSSL hardware acceleration engine is not allowed.", "While Tor is running, changing TestingTorNetwork is not allowed.", "While Tor is running, changing DisableAllSwap is not allowed.", "While Tor is running, changing TokenBucketRefillInterval is not allowed", "While Tor is running, changing DisableIOCP is not allowed.", "While Tor is running, disabling DisableDebuggerAttachment is not allowed.", "%s\\torrc-defaults", "%s\\torrc", "Invalid nickname '%s' in %s line", "load_torrc_from_disk", "Tor version %s.", "Tor version %s. ", "Library versions\\tCompiled\\t\\tRuntime", "Libevent\\t\\t%-15s\\t\\t%s", "OpenSSL \\t\\t%-15s\\t\\t%s", "Zlib    \\t\\t%-15s\\t\\t%s", "options_init_from_string", "old_var", "Failed to parse/validate config: %s", "whoops, forgot the error message", "can't remap from or to *", "can only use wildcard (i.e. '*.') if 'from' address uses wildcard also", "destination is invalid", "stdout", "stderr", "<stderr>", "<stdout>", "syslog", "validate_transport_socks_arguments", "smartlist_len(args) > 0", "smartlist_len(bridge_line->socks_args) > 0", "parse_bridge_line", "proxy_argc > 0", "parse_client_transport_line", "parse_server_transport_line", "orport=", "weight=", "v3ident=", "E623F7625FBE0C87820F11EC5F6D5377ED816294", "NoAdvertise", "NoListen", "IPv4Only", "IPv6Only", "SessionGroup=", "IPv4Traffic", "IPv6Traffic", "PreferIPv6", "CacheIPv4DNS", "CacheIPv6DNS", "CacheDNS", "UseIPv4Cache", "UseIPv6Cache", "UseDNSCache", "PreferIPv6Automap", "PreferSOCKSNoAuth", "IsolateDestPort", "IsolateDestAddr", "IsolateSOCKSAuth", "IsolateClientProtocol", "IsolateClientAddr", "127.0.0.1", "Invalid SocksPort/SocksListenAddress configuration", "Invalid DNSPort/DNSListenAddress configuration", "Invalid TransPort/TransListenAddress configuration", "Invalid NatdPort/NatdListenAddress configuration", "Invalid ControlPort/ControlListenAddress configuration", "Invalid ControlSocket configuration", "0.0.0.0", "Invalid ORPort/ORListenAddress configuration", "Invalid ExtORPort configuration", "Invalid DirPort/DirListenAddress configuration", "Misconfigured server ports", "router", "options->DataDirectory", "validate_data_directory", "write_configuration_file", "# This file was generated by Tor; if you edit it, comments will not be preserved", "# The old torrc file was renamed to torrc.orig.1 or similar, and Tor will ignore it", "%s.orig.%d", "init_libevent", "Function not implemented", "options_get_datadir_fname2_suffix", "sub1 || !sub2", "%s\\%s\\%s", "config/names", "String", "Filename", "Integer", "SignedInteger", "TimeInterval", "TimeMsecInterval", "DataSize", "Boolean", "Boolean+Auto", "RouterList", "CommaList", "TimeIntervalCommaList", "LineList", "Dependant", "Virtual", "config/defaults", "Multiple IPv4 outbound bind addresses configured: %s", "Multiple IPv6 outbound bind addresses configured: %s", "Outbound bind address '%s' didn't parse.", "geoip6", "nodelist_set_routerinfo", "nodelist.c", "node->ri", "nodelist_set_consensus", "tmp == node", "nodelist_drop_node", "idx >= 0", "node == smartlist_get(the_nodelist->nodes, idx)", "node->nodelist_idx == -1", "node_free", "node && node->ri == ri", "nodelist_assert_ok", "fast_memeq(ri->cache_info.identity_digest, node->identity, DIGEST_LEN)", "! digestmap_get(dm, node->identity)", "node && node->rs == rs", "fast_memeq(rs->identity_digest, node->identity, DIGEST_LEN)", "md == node->md", "md->held_by_nodes >= 1", "digestmap_get(dm, node->identity) != NULL", "node_sl_idx == node->nodelist_idx", "(long)smartlist_len(the_nodelist->nodes) == (long)HT_SIZE(&the_nodelist->nodes_by_id)", "node_get_nickname", "(node)->ri || (node)->rs", "node_ipv6_preferred", "node_get_prim_orport", "ap_out", "node_get_pref_orport", "node_get_pref_ipv6_orport", "nodelist_add_node_and_family", "router_set_status", "%d%% of guards bw, %d%% of midpoint bw, and %d%% of exit bw", "min_paths_for_circs_pct", "We have no usable consensus.", "We have no recent usable consensus.", "We need more %sdescriptors: we have %d/%d, and can only build %d%% of likely paths. (We have %s.)", "ENOUGH_DIR_INFO", "Our directory information is no longer up-to-date enough to build circuits: %s", "NOT_ENOUGH_DIR_INFO", "!strcasecmp(c->countrycode, country)", "geoip_add_entry", "geoip.c", "%u,%u,%2s", "\"%u\",\"%u\",\"%2s\",", "family == AF_INET || family == AF_INET6", "geoip_load_file", "geoip_is_loaded", "entry->type == type", "dirreq_map_put_", "entry->dirreq_id == dirreq_id", "%s=%I64u", "complete=%u,timeout=%u,running=%u", ",min=%u,d1=%u,d2=%u,q1=%u,d3=%u,d4=%u,md=%u,d6=%u,d7=%u,q3=%u,d8=%u,d9=%u,max=%u", "0 <= country && country < n_countries", "geoip_get_client_history", "now >= start_of_dirreq_stats_interval", "geoip_format_dirreq_stats", "dirreq-stats-end %s (%d s)", "dirreq-v3-ips %s", "dirreq-v3-reqs %s", "dirreq-v3-resp ok=%u,not-enough-sigs=%u,unavailable=%u,not-found=%u,not-modified=%u,busy=%u", "dirreq-v3-direct-dl %s", "dirreq-v3-tunneled-dl %s", "bridge-stats-end ", "bridge-ips ", "bridge-ips", "bridge-ip-transports ", "bridge-ip-transports", "stats_str", "validate_bridge_stats", "bridge-stats-end %s (%ld s)", "bridge-ips %s", "bridge-ip-versions %s", "bridge-ip-transports %s", "TimeStarted=\"%s\" CountrySummary=%s IPVersions=%s", "now >= start_of_entry_stats_interval", "geoip_format_entry_stats", "entry-stats-end %s (%u s)", "entry-ips %s", "ip-to-country/", "Invalid address family", "GeoIP data not loaded", "c->base_.magic == ENTRY_CONNECTION_MAGIC", "EDGE_TO_ENTRY_CONN", "circuit_receive_relay_cell", "relay.c", "cell_direction == CELL_DIRECTION_OUT || cell_direction == CELL_DIRECTION_IN", "circ->purpose == CIRCUIT_PURPOSE_REND_ESTABLISHED", "splice->base_.purpose == CIRCUIT_PURPOSE_REND_ESTABLISHED", "relay_crypt", "recognized", "cell_direction == CELL_DIRECTION_IN || cell_direction == CELL_DIRECTION_OUT", "thishop", "circuit_package_relay_cell", "CONNECTED", "SENDME", "EXTEND", "EXTENDED", "TRUNCATE", "TRUNCATED", "RESOLVE", "BEGIN_DIR", "ESTABLISH_INTRO", "ESTABLISH_RENDEZVOUS", "INTRODUCE1", "INTRODUCE2", "RENDEZVOUS1", "RENDEZVOUS2", "INTRO_ESTABLISHED", "RENDEZVOUS_ESTABLISHED", "INTRODUCE_ACK", "EXTEND2", "EXTENDED2", "Unrecognized relay command %u", "relay_send_command_from_edge_", "resolved_cell_parse", "addresses_out", "errcode_out", "((ssize_t)remaining) >= (cp - cp_orig)", "error_code == RESOLVED_TYPE_ERROR || error_code == RESOLVED_TYPE_ERROR_TRANSIENT", "connection_ap_handshake_socks_got_resolved_cell", "SOCKS_COMMAND_IS_RESOLVE(entry_conn->socks_request->command)", "connection_edge_process_resolved_cell", "CIRCUIT_IS_ORIGIN(circ)", "connection_edge_process_relay_cell_not_open", "entry_conn->socks_request != NULL", "connection_edge_process_relay_cell", "AllowNonearlyExtend", "connection_edge_package_raw_inbuf", "circ->package_window > 0", "cpath_layer->package_window > 0", "%d cells allocated on %d circuits. %d cells leaked.", "update_circuit_on_cmux_", "circuitmux_attached_circuit_direction(cmux, circ) == direction", "channel_unlink_all_circuits", "!CIRCUIT_IS_ORIGIN(circ)", "set_streams_blocked_on_circ", "channel_flush_from_first_active_circuit", "destroy_queue->n > 0", "or_circ->p_chan == chan", "queue->n > 0", "orcirc->p_chan == chan", "circuit_clear_cell_queue", "connection_cpu_finished_flushing", "cpuworker.c", "conn->type == CONN_TYPE_CPUWORKER", "connection_cpu_process_inbuf", "connection_get_inbuf_len(conn) == sizeof(cpuworker_reply_t)", "rpl.magic == CPUWORKER_REPLY_MAGIC", "! CIRCUIT_IS_ORIGIN(circ)", "req.magic == CPUWORKER_REQUEST_MAGIC", "cpuworker_main", "SOCKET_OK(fdarray[0])", "spawn_cpuworker", "SOCKET_OK(fdarray[1])", "localhost", "cpuworker", "process_pending_task", "assign_onionskin_to_cpuworker", "Perform a GEOIP lookup", "IPv6 parts of exit policy", "exit-policy/ipv6", "IPv4 parts of exit policy", "exit-policy/ipv4", "The entire exit policy of onion router", "exit-policy/full", "The default value appended to the configured exit policy.", "exit-policy/default", "v3 Networkstatus consensus as retrieved from a DirPort.", "v2 networkstatus docs as retrieved from a DirPort.", "Router descriptors as retrieved from a DirPort.", "Router annotations by hexdigest.", "Breakdown of bytes transferred over DirPort.", "Actual limit on memory in queues", "File descriptor limit.", "Username under which the tor process is running.", "User id running the tor process.", "Process id belonging to the main tor process.", "Bytes written since the process was started.", "Bytes read since the process was started.", "IP address of this Tor host, if we can guess it.", "Number of versioning authorities agreeing on the status of the current version", "Number of versioning authorities.", "Status of the current version.", "List of currently recommended versions.", "Breakdown of client countries seen by a bridge.", "The last bootstrap phase status event that Tor sent.", "Whether we have enough up-to-date directory information to build circuits.", "Whether we think client functionality is working.", "Current address mappings from controller.", "address-mappings/control", "Current address mappings from configuration.", "address-mappings/config", "Current cached DNS replies.", "address-mappings/cache", "Current address mappings.", "address-mappings/all", "Is Tor dormant (not building circuits because it's idle)?", "A list of current OR connections.", "List of current streams.", "List of current circuits originating here.", "Brief summary of router status (v1 directory format)", "Brief summary of router status by purpose (v2 directory format).", "ns/purpose/", "Brief summary of router status by nickname (v2 directory format).", "ns/name/", "Brief summary of router status by ID (v2 directory format).", "ns/id/", "Brief summary of router status (v2 directory format)", "ns/all", "Bound addresses by type", "net/listeners/", "Extra-info documents by digest.", "Microdescriptors by name", "Microdescriptors by ID", "All non-expired, non-superseded router descriptors.", "Router descriptors by nickname.", "Router descriptors by ID.", "What arguments can USEFEATURE take?", "Signal names recognized by the SIGNAL command", "Events that the controller can ask for with SETEVENTS.", "List of GETINFO options, types, and documentation.", "List of default values for configuration options. See also config/names", "List of configuration options, types, and documentation.", "Current configuration values.", "config/", "Which nodes are we using as entry guards?", "entry-guards", "helper-nodes", "Time to wake up in this accounting period.", "Time when the accounting period ends.", "Time when the accounting period starts.", "Are we hibernating or awake?", "Is accounting currently enabled?", "Number of bytes left to write/read so far in the accounting interval.", "Number of bytes read/written so far in the accounting interval.", "Return the string that would be written by a saveconf command.", "Current location of the defaults file.", "Current location of the \"torrc\" file.", "The current version of Tor.", "CLEARDNSCACHE", "NEWNYM", "SHUTDOWN", "RELOAD", "HS_DESC", "TRANSPORT_LAUNCHED", "CIRC_BW", "TB_EMPTY", "CELL_STATS", "CONN_BW", "CONF_CHANGED", "SIGNAL", "BUILDTIMEOUT_SET", "NEWCONSENSUS", "CLIENTS_SEEN", "STREAM_BW", "STATUS_SERVER", "STATUS_CLIENT", "STATUS_GENERAL", "DESCCHANGED", "AUTHDIR_NEWDESCS", "ADDRMAP", "NEWDESC", "NOTICE", "ORCONN", "STREAM", "CIRC_MINOR", "(outp - *out) <= (int)sz_out", "write_escaped_data", "control.c", "*end == '\\\"'", "decode_escaped_string", "(outp - *out) == (int)*out_len", "connection_printf_to_buf", "UNIX_PORT=%s", "PORT=%s:%d", "250 OK", "event >= EVENT_MIN_ && event <= EVENT_MAX_", "send_control_event_string", "STATUS_GENERAL ERR ", "STATUS_CLIENT ERR ", "STATUS_SERVER ERR ", "551 Couldn't parse string", "551 Couldn't parse configuration", "552 Unrecognized option", "513 Unacceptable option value", "553 Transition not allowed", "553 Unable to set option", "%s: %s", "250-%s", "250-%s=%s", "552-Unrecognized configuration key \"%s\"", "552 Unrecognized configuration key \"%s\"", "strlen(tmp)>4", "handle_control_getconf", "552 Invalid config file", "550 Unable to load config", "552 Unrecognized event \"%s\"", "passwords", "decode_hashed_passwords", "handle_control_authenticate", "551 Invalid hexadecimal encoding.  Maybe you tried a plain text password?  If so, the standard requires that you put it in double quotes.", "551 Invalid quoted string.  You need to put the password in double quotes.", "authentication_cookie_is_set", "Wrong length for safe cookie response.", "Safe cookie response did not match expected value.", "Wrong length on authentication cookie.", "Authentication cookie did not match expected value.", "Password did not match HashedControlPassword value from configuration", "Password did not match HashedControlPassword value from configuration. Maybe you tried a plain text password? If so, the standard requires that you put it in double quotes.", "bad_password && bad_cookie", "Password did not match HashedControlPassword *or* authentication cookie.", "Unknown reason.", "515 Authentication failed: %s", "551 Unable to write configuration to disk.", "552 Unrecognized signal code \"%s\"", "512-syntax error: invalid address '%s'", "451-resource exhausted: skipping '%s'", "250-%s=%s", "512-syntax error: invalid address mapping  '%s': %s", "250-%s", "512-syntax error: mapping '%s' is not of expected form 'foo=bar'.", "512 syntax error: not enough arguments to mapaddress.", "config-file", "config-defaults-file", "config-text", "info/names", "dormant", "events/names", "signal/names", "features/names", "VERBOSE_NAMES EXTENDED_EVENTS", "Address unknown", "traffic/read", "traffic/written", "process/pid", "process/uid", "process/user", "process/descriptor-limit", "limits/max-mem-in-queues", "dir-usage", "Not running in server mode", "router-signature", "write-history ", "read-history ", "outp-out < (int)(ri_len+ei_len+1)", "munge_extrainfo_into_routerinfo", "net/listeners/or", "net/listeners/dir", "net/listeners/socks", "net/listeners/trans", "net/listeners/natd", "net/listeners/dns", "net/listeners/control", "desc/id/", "desc/name/", "desc/all-recent", "desc/all-recent-extrainfo-hack", "md/id/", "md/name/", "desc-annotations/id/", "dir/server/", "/tor/%s", "dir/status/", "dir/status-vote/current/consensus", "network-status", "extra-info/digest/", "ONEHOP_TUNNEL", "IS_INTERNAL", "NEED_CAPACITY", "NEED_UPTIME", "BUILD_FLAGS=%s", "PURPOSE=%s", "HS_STATE=%s", "REND_QUERY=%s", "TIME_CREATED=%s", "circuit-status", "LAUNCHED", "%lu %s%s%s", "stream-status", "NEWRESOLVE", "SENTCONNECT", "SENTRESOLVE", "SUCCEEDED", "%lu %s %lu %s", "orconn-status", "address-mappings/", "config", "control", "status/", "status/circuit-established", "status/enough-dir-info", "status/good-server-descriptor", "status/accepted-server-descriptor", "status/reachability-succeeded/or", "status/reachability-succeeded/dir", "status/reachability-succeeded", "OR=%d DIR=%d", "status/bootstrap-phase", "status/version/", "status/version/recommended", "status/version/current", "recommended", "obsolete", "new in series", "unrecommended", "none recommended", "status/version/num-versioning", "status/version/num-concurring", "status/clients-seen", "No bridge-client stats available", "%s%s -- %s", "getinfo_items[i].fn", "handle_getinfo_helper", "Internal error", "551 %s", "552-Unrecognized key \"%s\"", "552 Unrecognized key \"%s\"", "250-%s=", "250+%s=", "purpose=", "512 Missing argument to %s", "EXTENDCIRCUIT", "PURPOSE=", "552 Unknown purpose \"%s\"", "551 Couldn't start circuit", "250 EXTENDED %lu", "552 Unknown circuit \"%s\"", "552 No such router \"%s\"", "552 No descriptor for \"%s\"", "512 No router names provided", "handle_control_extendcircuit", "551 Couldn't send onion skin", "SETCIRCUITPURPOSE", "552 No purpose given", "ATTACHSTREAM", "552 Unknown stream \"%s\"", "552 Bad value hop=%s", "555 Connection is not managed by controller.", "551 Can't attach stream to non-open origin circuit", "551 Can't attach stream to this one-hop circuit.", "exit_digest", "handle_control_attachstream", "551 Circuit doesn't have %d hops.", "551 Unable to attach stream", "handle_control_postdescriptor", "cache=", "552 Unknown cache request \"%s\"", "512 Unexpected argument \"%s\" to postdescriptor", "Could not parse descriptor", "554 %s", "Descriptor not added", "251 %s", "REDIRECTSTREAM", "512 Cannot parse port \"%s\"", "CLOSESTREAM", "552 Unrecognized reason \"%s\"", "CLOSECIRCUIT", "IfUnused", "mode=reverse", "internal", "513 No such version %s", "COOKIE", "SAFECOOKIE", "HASHEDPASSWORD", " COOKIEFILE=", "250-PROTOCOLINFO 1", "250-AUTH METHODS=%s%s%s", "250-VERSION Tor=%s", "250 OK", "513 AUTHCHALLENGE only supports SAFECOOKIE authentication", "515 Cookie authentication is disabled", "513 Invalid quoted client nonce", "513 Invalid base16 client nonce", "513 Junk at end of AUTHCHALLENGE command", "!crypto_rand(server_nonce, SAFECOOKIE_SERVER_NONCE_LEN)", "handle_control_authchallenge", "authentication_cookie != NULL", "Tor safe cookie authentication server-to-controller hash", "Tor safe cookie authentication controller-to-server hash", "250 AUTHCHALLENGE SERVERHASH=%s SERVERNONCE=%s", "VERBOSE_NAMES", "EXTENDED_EVENTS", "552 Unrecognized feature \"%s\"", "512 Too many arguments to DROPGUARDS", "connection_control_finished_flushing", "connection_control_reached_eof", "connection_control_closed", "closed", "PROTOCOLINFO", "AUTHCHALLENGE", "AUTHENTICATE", "connection_control_process_inbuf", "conn->base_.state == CONTROL_CONN_STATE_OPEN || conn->base_.state == CONTROL_CONN_STATE_NEEDAUTH", "The v0 control protocol is not supported by Tor 0.1.2.17 and later; upgrade your controller.", "500 Line too long.", "data_len", "data_len>(size_t)cmd_len", "250 closing connection", "514 Authentication required.", "500 A 4GB command? Nice try.", "SETCONF", "RESETCONF", "GETCONF", "+LOADCONF", "SETEVENTS", "SAVECONF", "TAKEOWNERSHIP", "MAPADDRESS", "GETINFO", "SETROUTERPURPOSE", "511 SETROUTERPURPOSE is obsolete.", "+POSTDESCRIPTOR", "USEFEATURE", "DROPGUARDS", "510 Unrecognized command \"%s\"", "control_event_circuit_status", "FAILED", "CLOSED", " REASON=DESTROYED REMOTE_REASON=%s", " REASON=%s", "650 CIRC %lu %s%s%s%s", "control_event_circuit_status_minor", "PURPOSE_CHANGED", " OLD_HS_STATE=", " OLD_PURPOSE=%s%s%s", "CANNIBALIZED", " OLD_PURPOSE=%s%s%s OLD_TIME_CREATED=%s", "650 CIRC_MINOR %lu %s%s%s%s", "%s%s%s:%d", "conn->socks_request", "control_event_stream_status", "DETACHED", " UNKNOWN_%d", " REASON=END REMOTE_REASON=%s", " SOURCE=CACHE", " SOURCE=EXIT", " REASON=UNKNOWN_%d", " SOURCE_ADDR=%s:%d", " PURPOSE=DNS_REQUEST", " PURPOSE=DIR_UPLOAD", " PURPOSE=DIR_FETCH", " PURPOSE=USER", "650 STREAM %I64u %s %lu %s%s%s%s", " NCIRCS=%d", " REASON=", "650 ORCONN %s %s%s%s%s ID=%I64u", "650 STREAM_BW %I64u %lu %lu", "650 CIRC_BW ID=%d READ=%lu WRITTEN=%lu", "650 CONN_BW ID=%I64u TYPE=%s READ=%lu WRITTEN=%lu", "ent->command <= CELL_COMMAND_MAX_", "sum_up_cell_stats_by_command", "%s:%I64u", "ID=%lu", "InboundQueue=%lu", "InboundConn=%I64u", "InboundAdded", "InboundRemoved", "InboundTime", "OutboundQueue=%lu", "OutboundConn=%I64u", "OutboundAdded", "OutboundRemoved", "OutboundTime", "650 CELL_STATS %s", "650 TB_EMPTY %s READ=%d WRITTEN=%d LAST=%d", "650 BW %lu %lu", "enable_control_logging", "BUG REASON=%s", "UnknownLogSeverity", "650 %s %s", "650 NEWDESC %s", "650 ADDRMAP %s %s NEVER %s%sCACHED=\"%s\"", "650 ADDRMAP %s %s \"%s\" %s%sEXPIRES=\"%s\" CACHED=\"%s\"", "650+AUTHDIR_NEWDESC=", "650 OK", "COMPUTED", "SUSPENDED", "DISCARD", "RESUME", "UNKNOWN", "650 BUILDTIMEOUT_SET %s %s", "650 SIGNAL %s", "650 DESCCHANGED", "650 %s %s", "$%s~%s", "650 GUARD ENTRY %s %s", "650-%s", "650-%s=%s", "650-CONF_CHANGED", "650 OK", "control_auth_cookie", "(owning_controller_process_spec == NULL) == (owning_controller_process_monitor == NULL)", "monitor_owning_controller_process", "(owning_controller_process_spec == NULL) && (owning_controller_process_monitor == NULL)", "Undefined", "starting", "Starting", "conn_dir", "Connecting to directory server", "status_handshake", "Finishing handshake", "handshake_dir", "Finishing handshake with directory server", "onehop_create", "Establishing an encrypted directory connection", "requesting_status", "Asking for networkstatus consensus", "loading_status", "Loading networkstatus consensus", "loading_keys", "Loading authority key certs", "requesting_descriptors", "Asking for relay descriptors", "loading_descriptors", "Loading relay descriptors", "conn_or", "Connecting to the Tor network", "handshake_or", "Finishing handshake with first hop", "circuit_create", "Establishing a Tor circuit", "Bootstrapped %d%%: %s", "BOOTSTRAP PROGRESS=%d TAG=%s SUMMARY=\"%s\"", "NOTICE %s", "ignore", "status >= 0", "control_event_bootstrap_problem", "BOOTSTRAP PROGRESS=%d TAG=%s SUMMARY=\"%s\" WARNING=\"%s\" REASON=%s COUNT=%d RECOMMENDATION=%s", "WARN %s", "650 CLIENTS_SEEN %s", "650 TRANSPORT_LAUNCHED %s %s %s %u", "NO_AUTH", "BASIC_AUTH", "STEALTH_AUTH", "650 HS_DESC REQUESTED %s %s %s %s", "650 HS_DESC %s %s %s %s", "RECEIVED", "connection_write_ext_or_command", "ext_orport.c", "conn->base_.type == CONN_TYPE_EXT_OR", "connection_ext_or_transition", "extended_orport_auth_cookie", "! Extended ORPort Auth Cookie !", "ExtORPort authentication server-to-client hash", "ExtORPort authentication client-to-server hash", "command", "connection_ext_or_process_inbuf", "closing", "channel error", "temporarily suspended for maintenance", "opening", "unknown or invalid channel state", "channel listener error", "listening", "unknown or invalid channel listener state", "channel_register", "channel.c", "channel_unregister", "chan_l", "channel_listener_register", "channel_listener_unregister", "channel_add_to_digest_map", "!(chan->state == CHANNEL_STATE_CLOSING || chan->state == CHANNEL_STATE_CLOSED || chan->state == CHANNEL_STATE_ERROR)", "!tor_digest_is_zero(chan->identity_digest)", "channel_remove_from_digest_map", "identity_digest", "channel_find_by_remote_digest", "channel_init", "channel_init_listener", "chan->state == CHANNEL_STATE_CLOSED || chan->state == CHANNEL_STATE_ERROR", "channel_free", "!(chan->registered)", "chan_l->state == CHANNEL_LISTENER_STATE_CLOSED || chan_l->state == CHANNEL_LISTENER_STATE_ERROR", "channel_listener_free", "!(chan_l->registered)", "channel_force_free", "channel_listener_force_free", "channel_listener_set_listener_fn", "chan_l->state == CHANNEL_LISTENER_STATE_LISTENING", "channel_set_cell_handlers", "chan->state == CHANNEL_STATE_OPENING || chan->state == CHANNEL_STATE_OPEN || chan->state == CHANNEL_STATE_MAINT", "chan != NULL", "channel_mark_for_close", "chan->close != NULL", "chan_l != NULL", "channel_listener_mark_for_close", "chan_l->close != NULL", "channel_close_from_lower_layer", "channel_close_for_error", "channel_closed", "chan->state == CHANNEL_STATE_CLOSING || chan->state == CHANNEL_STATE_CLOSED || chan->state == CHANNEL_STATE_ERROR", "channel_clear_identity_digest", "channel_set_identity_digest", "(null)", "channel_clear_remote_end", "cell_queue_entry_dup", "cell_queue_entry_new_fixed", "channel_write_cell_queue_entry", "chan->write_cell", "q->u.fixed.cell", "chan->write_packed_cell", "q->u.packed.packed_cell", "chan->write_var_cell", "q->u.var.var_cell", "channel_write_packed_cell", "packed_cell", "channel_change_state", "channel_state_is_valid(from_state)", "channel_state_is_valid(to_state)", "channel_state_can_transition(chan->state, to_state)", "chan->reason_for_closing != CHANNEL_NOT_CLOSING", "TOR_SIMPLEQ_EMPTY(&chan->incoming_queue)", "TOR_SIMPLEQ_EMPTY(&chan->outgoing_queue)", "channel_listener_change_state", "channel_listener_state_is_valid(from_state)", "channel_listener_state_is_valid(to_state)", "channel_listener_state_can_transition(chan_l->state, to_state)", "chan_l->reason_for_closing != CHANNEL_LISTENER_NOT_CLOSING", "!(chan_l->incoming_list) || smartlist_len(chan_l->incoming_list) == 0", "channel_flush_some_cells", "channel_flush_some_cells_from_outgoing_queue", "channel_more_to_flush", "channel_notify_flushed", "channel_listener_process_incoming", "listener->state == CHANNEL_LISTENER_STATE_LISTENING || listener->state == CHANNEL_LISTENER_STATE_CLOSING", "listener->listener", "channel_do_open_actions", "channel_listener_queue_incoming", "listener->incoming_list", "channel_process_cells", "chan->state == CHANNEL_STATE_CLOSING || chan->state == CHANNEL_STATE_MAINT || chan->state == CHANNEL_STATE_OPEN", "q->type == CELL_QUEUE_FIXED || q->type == CELL_QUEUE_VAR", "channel_queue_cell", "chan->state == CHANNEL_STATE_OPEN", "chan->cell_handler", "channel_send_destroy", "Dumping statistics about %d channels:", "%d are active, and %d are done and waiting for cleanup", "Done spamming about channels now", "No channels to dump", "Dumping statistics about %d channel listeners:", "%d are active and %d are done and waiting for cleanup", "Done spamming about channel listeners now", "No channel listeners to dump", "channel_free_list", "channel_listener_free_list", "channel_is_better", "msg_out", "channel_get_for_extend", "launch_out", "tor_memeq(chan->identity_digest, digest, DIGEST_LEN)", "Connection is fine; using it.", "Connection in progress; waiting.", "Connections all too old, or too non-canonical.  Launching a new one.", "Not connected. Connecting.", "channel_describe_transport", "chan->describe_transport", "channel_listener_describe_transport", "chan_l->describe_transport", "channel_dump_statistics", "Channel %I64u (at %p) with transport %s is in state %s (%d)", " * Channel %I64u was created at %I64u (%I64u seconds ago) and last active at %I64u (%I64u seconds ago)", " * Channel %I64u says it is connected to an OR with digest %s and nickname %s", " * Channel %I64u says it is connected to an OR with digest %s and no known nickname", " * Channel %I64u does not know the digest of the OR it is connected to, but reports its nickname is %s", " * Channel %I64u does not know the digest or the nickname of the OR it is connected to", " * Channel %I64u says its remote address is %s, and gives a canonical description of \"%s\" and an actual description of \"%s\"", " * Channel %I64u does not know its remote address, but gives a canonical description of \"%s\" and an actual description of \"%s\"", "!local", "!client", "is_canonical_is_reliable", "!is_canonical_is_reliable", "canonical", "!canonical", "bad_for_new_circs", "!bad_for_new_circs", " * Channel %I64u has these marks: %s %s %s %s %s %s", " * Channel %I64u has %d queued incoming cells and %d queued outgoing cells", " * Channel %I64u has %d active circuits out of %d in total", " * Channel %I64u was last used by a client at %I64u (%I64u seconds ago)", " * Channel %I64u was last drained at %I64u (%I64u seconds ago)", " * Channel %I64u last received a cell at %I64u (%I64u seconds ago)", " * Channel %I64u last transmitted a cell at %I64u (%I64u seconds ago)", " * Channel %I64u has received %I64u cells and transmitted %I64u", " * Channel %I64u has averaged %f cells received per second", " * Channel %I64u has averaged %f seconds between received cells", " * Channel %I64u has averaged %f cells transmitted per second", " * Channel %I64u has averaged %f seconds between transmitted cells", "channel_listener_dump_statistics", "Channel listener %I64u (at %p) with transport %s is in state %s (%d)", " * Channel listener %I64u was created at %I64u (%I64u seconds ago) and last active at %I64u (%I64u seconds ago)", " * Channel listener %I64u last accepted an incoming channel at %I64u (%I64u seconds ago) and has accepted %I64u channels in total", " * Channel listener %I64u has averaged %f incoming channels per second", " * Channel listener %I64u has averaged %f seconds between incoming channels", "channel_get_actual_remote_descr", "chan->get_remote_descr", "channel_get_canonical_remote_descr", "channel_get_addr_if_possible", "channel_has_queued_writes", "chan->has_queued_writes", "channel_is_bad_for_new_circs", "channel_is_client", "channel_is_canonical", "chan->is_canonical", "channel_is_canonical_is_reliable", "channel_mark_incoming", "channel_is_local", "channel_mark_local", "channel_mark_remote", "channel_is_outgoing", "channel_mark_outgoing", "channel_timestamp_active", "channel_timestamp_client", "channel_timestamp_drained", "channel_timestamp_recv", "channel_timestamp_xmit", "channel_when_created", "channel_when_last_client", "channel_when_last_xmit", "channel_matches_extend_info", "chan->matches_extend_info", "extend_info", "channel_matches_target_addr_for_extend", "chan->matches_target", "target", "channel_num_circuits", "channel_set_circid_type", "__extra", "BuildtimeHistogram", "CircuitBuildTimeBin", "CircuitBuildAbandonedCount", "TotalBuildTimes", "LastWritten", "LastRotatedOnionKey", "TorVersion", "BWHistoryDirWriteMaxima", "BWHistoryDirWriteValues", "BWHistoryDirWriteInterval", "BWHistoryDirWriteEnds", "BWHistoryDirReadMaxima", "BWHistoryDirReadValues", "BWHistoryDirReadInterval", "BWHistoryDirReadEnds", "BWHistoryWriteMaxima", "BWHistoryWriteValues", "BWHistoryWriteInterval", "BWHistoryWriteEnds", "BWHistoryReadMaxima", "BWHistoryReadValues", "BWHistoryReadInterval", "BWHistoryReadEnds", "TransportProxies", "TransportProxy", "EntryGuards", "EntryGuardPathUseBias", "EntryGuardPathBias", "EntryGuardAddedBy", "AccountingBytesAtSoftLimit", "AccountingSoftLimitHitAt", "AccountingSecondsToReachSoftLimit", "AccountingSecondsActive", "AccountingIntervalStart", "AccountingExpectedUsage", "AccountingBytesWrittenInInterval", "EntryNodeUnlistedSince", "EntryNodeDownSince", "EntryGuardUnlistedSince", "HelperNodeUnlistedSince", "EntryGuardDownSince", "HelperNodeDownSince", "EntryGuard", "HelperNode", "AccountingBytesReadInInterval", "AccountingBytesReadInterval", "global_state", "get_or_state", "statefile.c", "!strcmp(line->key, \"TransportProxy\")", "validate_transports_in_state", "new_state", "or_state_set", "or_state_save", "# Tor state file last generated on %s local time", "# Other times below are in UTC", "# You *do not* need to edit this file.", "get_transport_in_state_by_name", "base_conn->type == CONN_TYPE_AP", "connection_mark_unattached_ap_", "connection_edge.c", "connection_edge_process_inbuf", "connection_edge_end_errno", "connection_edge_finished_flushing", "connected_payload_len <= MAX_CONNECTED_CELL_PAYLOAD_LEN", "connected_cell_format_payload", "edge_conn", "connection_edge_finished_connecting", "edge_conn->base_.type == CONN_TYPE_EXIT", "conn->state == EXIT_CONN_STATE_CONNECTING", "edge_conn->package_window > 0", "*unnamed*", "circuit_discard_optional_exit_enclaves", "REJECT", "DANGEROUS_PORT PORT=%d RESULT=%s", "SOCKS_BAD_HOSTNAME HOSTNAME=%s", "!automap", "connection_ap_handshake_rewrite_and_attach", "connection_ap_handshake_process_socks", "base_conn->state == AP_CONN_STATE_SOCKS_WAIT", "connection_ap_process_transparent", "connection_ap_process_natd", "ENTRY_TO_CONN(conn)->state == AP_CONN_STATE_NATD_WAIT", "[DEST ", "edge_conn->on_circuit", "connection_ap_handshake_send_begin", "base_conn->state == AP_CONN_STATE_CIRCUIT_WAIT", "ap_conn->socks_request", "SOCKS_COMMAND_IS_CONNECT(ap_conn->socks_request->command)", "circ->build_state->onehop_tunnel == 0", "connection_ap_handshake_send_resolve", "circ->base_.purpose == CIRCUIT_PURPOSE_C_GENERAL", "SOCKS_COMMAND_IS_RESOLVE(command)", "payload_len <= (int)sizeof(inaddr_buf)", "connection_ap_make_link", "error=yes", "<error>", "connection_ap_handshake_socks_reply", "(rendezvous)", "connection_edge_is_rendezvous_stream(n_stream)", "connection_exit_begin_conn", "connection_edge_is_rendezvous_stream", "connection_ap_can_use_exit", "Resolve requested for", "Search: ", "Nameserver ", " has failed: ", "evdns_log_cb", "NAMESERVER_STATUS NS=%s STATUS=DOWN ERR=%s", " is back up", "NAMESERVER_STATUS NS=%s STATUS=UP", "All nameservers have failed", "NAMESERVER_ALL_DOWN", "eventdns: %s", "resolve && resolve->expire == 0", "set_expiry", "!resolve->pending_connections", "purge_expired_resolves", "resolve->state == CACHE_STATE_DONE", "!SOCKET_OK(pend->conn->base_.s)", "removed == resolve", "tmp != resolve", "Error resolving hostname", "send_resolved_cell", "hostname", "send_resolved_hostname_cell", "namelen < 256", "dns_resolve", "!SOCKET_OK(exitconn->base_.s)", "dns_resolve_impl", "oncirc", "Rejecting invalid destination address %s", "!resolve", "set_exitconn_info_from_resolve", "resolve", "pend->conn != conn", "assert_connection_edge_not_dns_pending", "connection_dns_remove", "conn->base_.state == EXIT_CONN_STATE_RESOLVING", "resolve->pending_connections", "dns_cancel_pending_resolve", "!SOCKET_OK(pendconn->base_.s)", "tmp == resolve", "resolve->pending_connections == NULL", "dns_found_answer", "inform_pending_connections", "max-timeouts:", "timeout:", "randomize-case:", "dns resolvers back", "dns resolvers failed", "the_evdns_base", "launch_resolve", "Your DNS provider has given \"%s\" as an answer for %d different invalid addresses. Apparently they are hijacking DNS failures. I'll try to correct for this by treating future occurrences of \"%s\" as 'not found'.", "DNS_HIJACKED", "Your DNS provider tried to redirect \"%s\" to a junk address.  It has done this with %d test addresses so far.  I'm going to stop being an exit node for now, since our DNS seems so broken.", "dns hijacking confirmed", "DNS_USELESS", "Your DNS provider gave an answer for \"%s\", which is not supposed to exist. Apparently they are hijacking DNS failures. Trying to correct for this. We've noticed %d possibly bad address%s so far.", "launch_wildcard_check", "launch_test_addresses", ".invalid", "assert_resolve_ok", "resolve->magic == CACHED_RESOLVE_MAGIC", "strlen(resolve->address) < MAX_ADDRESSLEN", "tor_strisnonupper(resolve->address)", "Our DNS cache has %d entries.", "Our DNS cache size is approximately %u bytes.", "cached-%s-consensus", "unverified-%s-consensus", "consensus->type == NS_TYPE_CONSENSUS", "networkstatus_check_consensus_signature", "networkstatus.c", "tor_memeq(sig->identity_digest, voter->identity_digest, DIGEST_LEN)", "Consensus includes unrecognized authority '%s' at %s:%d (contact %s; identity %s)", "Looks like we need to download a new certificate from authority '%s' at %s:%d (contact %s; identity %s)", "Consensus does not include configured authority '%s' at %s:%d (identity %s)", "A consensus needs %d good signatures from recognized authorities for us to accept it. This one has %d (%s).", "%d (%s) of the authorities we know didn't sign it.", "It has %d signatures from authorities we don't recognize.", "%d of the signatures on it didn't verify correctly.", "We were unable to check %d of the signatures, because we were missing the keys.", "flav < N_CONSENSUS_FLAVORS", "networkstatus_consensus_download_failed", "c->fresh_until < start", "update_consensus_networkstatus_fetch_time_impl", "start+dl_interval < c->valid_until", "DisableNetwork is set.", "No running bridges", "Pluggable transport proxies still configuring", "networkstatus_get_latest_consensus_by_flavor", "tor_memeq(a->identity_digest, b->identity_digest, DIGEST_LEN)", "routerstatus_has_changed", "CONSENSUS_ARRIVED", "CLOCK_SKEW MIN_SKEW=%ld SOURCE=CONSENSUS", "DANGEROUS_VERSION CURRENT=%s REASON=%s RECOMMENDED=\"%s\"", "OBSOLETE", "UNRECOMMENDED", "flag-thresholds %s", "%s\\networkstatus-bridges", "max_val > min_val", "get_net_param_from_list", "min_val <= default_val", "max_val >= default_val", "bwweightscale", "Data not decodeable as hex", "private_signing_key", "format_networkstatus_vote", "dirvote.c", "v3_ns->type == NS_TYPE_VOTE || v3_ns->type == NS_TYPE_OPINION", "client-versions %s", "server-versions %s", "opinion", "network-status-version 3", "vote-status %s", "consensus-methods %s", "published %s", "valid-after %s", "fresh-until %s", "valid-until %s", "voting-delay %d %d", "%s%sknown-flags %s", "flag-thresholds %s", "params %s", "dir-source %s %s %s %s %d %d", "contact %s", "legacy-dir-key %s", "directory-footer", "directory-signature ", "directory-signature %s %s", "get_voter", "vote->type == NS_TYPE_VOTE", "vote->voters", "smartlist_len(vote->voters) == 1", "compare_vote_rs", "compute_routerstatus_consensus", "vote->supported_methods", "compute_consensus_method", "make_consensus_method_list", "dirvote_compute_params", "i<n_votes", "0 < weight_scale && weight_scale <= INT32_MAX", "networkstatus_compute_bw_weights_v10", "bandwidth-weights Wbd=%d Wbe=%d Wbg=%d Wbm=%d Wdb=%d Web=%d Wed=%d Wee=%d Weg=%d Wem=%d Wgb=%d Wgd=%d Wgg=%d Wgm=%d Wmb=%d Wmd=%d Wme=%d Wmg=%d Wmm=%d", "networkstatus_compute_bw_weights_v9", "bandwidth-weights ", "Wbd=%d Wbe=%d Wbg=%d Wbm=%d Wdb=%d Web=%d Wed=%d Wee=%d Weg=%d Wem=%d Wgb=%d Wgd=%d Wgg=%d Wgm=%d Wmb=%d Wmd=%d Wme=%d Wmg=%d Wmm=%d", "flavor == FLAV_NS || flavor == FLAV_MICRODESC", "networkstatus_compute_consensus", "total_authorities >= smartlist_len(votes)", "v->type == NS_TYPE_VOTE", "valid_after+MIN_VOTE_INTERVAL <= fresh_until", "fresh_until+MIN_VOTE_INTERVAL <= valid_until", "vote_seconds >= MIN_VOTE_SECONDS", "dist_seconds >= MIN_DIST_SECONDS", "network-status-version 3%s%s", "vote-status consensus", "consensus-method %d", "valid-after %s", "fresh-until %s", "valid-until %s", "voting-delay %d %d", "client-versions %s", "server-versions %s", "known-flags %s", "params ", "consensus_method >= 2", "-legacy", "dir-source %s%s %s %s %s %d %d", "contact %s", "vote-digest %s", "maxunmeasuredbw=", " maxunmeasuredbw=", "p >= 0", "fast_memeq(lowest_id, rs->status.identity_digest,DIGEST_LEN)", "Running", "BadExit", "fast_memeq(rs_out.identity_digest, vsr->status.identity_digest, DIGEST_LEN)", "vsr->status.exitsummary", " Unmeasured=1", "w Bandwidth=%d%s", "bwweightscale=", " bwweightscale=", "%s %s %s", "networkstatus_add_detached_signatures", "target->type == NS_TYPE_CONSENSUS", "Valid-After times do not match when adding detached signatures to consensus", "Fresh-until times do not match when adding detached signatures to consensus", "Valid-until times do not match when adding detached signatures to consensus", "No signatures for given consensus flavor", "No digests for given consensus flavor", "Mismatched digest.", "No regognized digests for given consensus flavor", "Added a signature for %s from %s.", "additional-signature", "directory-signature", "%s %s %s", "-----BEGIN SIGNATURE-----", "%s%s%s %s %s %s", "-----BEGIN SIGNATURE-----", "-----END SIGNATURE-----", "consensuses", "networkstatus_get_detached_signatures", "ns->type == NS_TYPE_CONSENSUS", "consensus-digest %s", "valid-after %s", "fresh-until %s", "valid-until %s", "additional-digest %s %s %s", "authority_cert_dup", "interval > 0", "dirvote_recalculate_timing", "end > start", "vote_body", "dirvote_add_vote", "status_out", "Unable to parse vote", "any_sig_good", "Vote not from a recognized v3 authority", "vote->cert", "Bad valid-after time", "network-status-version", "Already have a newer pending vote", "network-status-version ", "Error adding vote", "Duplicate discarded", "pending", "pc->consensus", "dirvote_add_signatures_to_pending_consensus", "pc->body", "pending_consensus_signatures", "No signatures to add", "Signatures added", "Signatures ignored", "Unrecognized error while adding detached signatures.", "detached_signatures_body", "dirvote_add_signatures_to_all_pending_consensuses", "Couldn't parse detached signatures.", "Signature queued", "dirvote_publish_consensus", "onion-key", "id rsa1024 %s", "microdesc_consensus_methods", "dirvote_format_microdesc_vote_line", "m %s sha256=%s", "1234567890", "transport", "transport_copy", "transports.c", "transport_get_by_name", "transport_add", "unconfigured_proxies_n == 0", "assert_unconfigured_count_ok", "n_completed + unconfigured_proxies_n == smartlist_len(managed_proxy_list)", "managed_proxy_has_argv", "mp->transports_to_launch", "add_transport_to_proxy", "smartlist_len(mp->transports_to_launch) > 0", "proxy_needs_restart", "mp->conf_state == PT_PROTO_COMPLETED", "proxy_prepare_for_restart", "mp->conf_state != PT_PROTO_BROKEN && mp->conf_state != PT_PROTO_FAILED_LAUNCH", "pt_configure_remaining_proxies", "configured managed proxies", "configure_proxy", "mp->process_handle", "mp->conf_state != PT_PROTO_COMPLETED", "register_server_proxy", "register_client_proxy", "handle_finished_proxy", "mp->transports", "handle_methods_done", "ENV-ERROR", "VERSION-ERROR no-version", "VERSION", "mp->conf_protocol != 0", "handle_proxy_line", "CMETHODS DONE", "SMETHODS DONE", "CMETHOD-ERROR", "SMETHOD-ERROR", "CMETHOD", "SMETHOD", "ERR: Failed to spawn background process - code ", "ERR: Failed to spawn background process - code %x/%x", "!strcmp(smartlist_get(items,0),PROTO_SMETHOD)", "parse_smethod_line", "!strcmp(smartlist_get(items,0),PROTO_CMETHOD)", "parse_cmethod_line", "mp->is_server", "get_transport_options_for_server_proxy", "get_bindaddr_for_server_proxy", "pt_state/", "TOR_PT_STATE_LOCATION=%s", "TOR_PT_MANAGED_TRANSPORT_VER=1", "TOR_PT_SERVER_TRANSPORTS=%s", "TOR_PT_CLIENT_TRANSPORTS=%s", "TOR_PT_ORPORT=%s", "TOR_PT_SERVER_BINDADDR=%s", "TOR_PT_SERVER_TRANSPORT_OPTIONS=%s", "TOR_PT_EXTENDED_SERVER_PORT=%s", "TOR_PT_AUTH_COOKIE_FILE=%s", "TOR_PT_EXTENDED_SERVER_PORT=", "pt_prepare_proxy_list_for_config_read", "get_transport_proxy_ports", "pt_get_extra_info_descriptor_string", "transport %s %s%s", "socks_args", "pt_stringify_socks_args", "smartlist_len(socks_args) > 0", "[Not an authority]", "dirservers", "directory_post_to_dirservers", "directory.c", "dir_purpose == DIR_PURPOSE_FETCH_STATUS_VOTE || dir_purpose == DIR_PURPOSE_FETCH_DETACHED_SIGNATURES", "directory_get_from_all_authorities", "authority", "conn->base_.purpose == DIR_PURPOSE_FETCH_SERVERDESC || conn->base_.purpose == DIR_PURPOSE_FETCH_EXTRAINFO || conn->base_.purpose == DIR_PURPOSE_FETCH_MICRODESC", "connection_dir_download_routerdesc_failed", "conn->base_.purpose != DIR_PURPOSE_FETCH_EXTRAINFO", "connection_dir_bridge_routerdesc_failed", "conn->base_.purpose == DIR_PURPOSE_FETCH_CERTIFICATE", "connection_dir_download_cert_failed", "directory_initiate_command_rend", "or_port || dir_port", "!(is_sensitive_dir_purpose(dir_purpose) && !anonymized_connection)", "/tor/status-vote/current/consensus%s%s/%s.z", "directory_send_command", "conn->base_.type == CONN_TYPE_DIR", "http://%s", "Proxy-Authorization: Basic %s", "!payload", "resource", "/tor/keys/%s", "/tor/status-vote/next/%s.z", "!resource", "/tor/status-vote/next/consensus-signatures.z", "/tor/server/%s", "/tor/extra/%s", "/tor/micro/%s", "payload", "X-Desc-Gen-Reason: %s", "/tor/post/vote", "/tor/post/consensus-signature", "strlen(resource) <= REND_DESC_ID_V2_LEN_BASE32", "/tor/rendezvous2/%s", "/tor/rendezvous2/publish", "Content-Length: %lu", " HTTP/1.0", "Host: %s", "HTTP/1.%u%c", "Forwarded-For: ", "X-Forwarded-For: ", "headers", "parse_http_response", "HTTP/1.%u %u", "smartlist_len(parsed_headers)", "smartlist_len(status_line_elements) <= 3", "Date: ", "Content-Encoding: ", "x-deflate", "source", "load_downloaded_routers", "@purpose ", "@downloaded-at %s", "@source %s", "%s%s%s", "X-Your-Address-Is: ", "CLOCK_SKEW SKEW=%ld SOURCE=DIRSERV:%s:%d", "Received http status code %d (%s) from server '%s:%d' while fetching consensus directory.", "Servers unavailable.", "conn->requested_resource && !strcmpstart(conn->requested_resource, \"d/\")", "connection_dir_client_reached_eof", "X-Descriptor-Not-New: ", "ACCEPTED_SERVER_DESCRIPTOR DIRAUTH=%s:%d", "GOOD_SERVER_DESCRIPTOR", "BAD_SERVER_DESCRIPTOR DIRAUTH=%s:%d REASON=\"%s\"", "conn->rend_data", "connection_dir_process_inbuf", "HTTP/1.0 %d %s", "write_http_response_header_impl", "HTTP/1.0 200 OK", "Date: %s", "Content-Type: %s", "X-Your-Address-Is: %s", "Content-Encoding: %s", "Content-Length: %ld", "Expires: %s", "Pragma: no-cache", "Not supported.", "Bad request", "If-Modified-Since: ", "/tor/status-vote/current/consensus", "/tor/status-vote/current/consensus-", "/tor/status-vote/current/consensus/", "Consensus not signed by sufficient number of requested authorities", "Network status object unavailable", "Not found", "Not modified", "Directory busy, try again later", "/tor/status-vote/current/", "/tor/status-vote/next/", "/tor/status-vote/", "current/", "directory_handle_command_get", "consensus", "!current", "consensus-signatures", "Directory busy, try again later.", "/tor/micro/d/", "/tor/server/", "/tor/extra/", "/tor/server/authority", "/tor/server/all", "/tor/keys/", "/tor/keys/all", "/tor/keys/authority", "/tor/keys/fp/", "/tor/keys/sk/", "/tor/keys/fp-sk/", "/tor/rendezvous2/", "/tor/networkstatus-bridges", "Authorization: Basic ", "/tor/bytes.txt", "/tor/robots.txt", "User-agent: *", "Disallow: /", "Currently not acting as v2 hidden service directory", "Invalid v2 service descriptor rejected", "Service descriptor (v2) stored", "Nonauthoritative directory does not accept posted server descriptors", "[None]", "directory_handle_command_post", "X-Descriptor-Not-New: Yes", "Vote stored", "Signatures stored", "Unable to store signatures", "directory_handle_command", "connection_dir_finished_flushing", "connection_dir_finished_connecting", "conn->base_.state == DIR_CONN_STATE_CONNECTING", "find_dl_schedule_and_len", "download_status_increment_failure", "!was_extrainfo", "dir_routerdesc_download_failed", "!(decode_hex && decode_base64)", "dir_split_resource_into_fingerprints", "fp_out", "introduction-point %s", "ip-address %s", "onion-port %d", "onion-key", "%sservice-key", "encoded", "rend_encrypt_v2_intro_points_basic", "rendcommon.c", "client_cookies && smartlist_len(client_cookies) > 0", "rend_encrypt_v2_intro_points_stealth", "service_key", "rend_encode_v2_descriptors", "rendezvous-service-descriptor %s", "version 2", "permanent-key", "%ssecret-id-part %s", "publication-time %s", "protocol-versions %s", "introduction-points", "-----BEGIN MESSAGE-----", "%s-----END MESSAGE-----", "signature", "rend_get_service_id", "rend_id_is_in_interval", "abcdefghijklmnopqrstuvwxyz234567", "rend_cache", "rend_cache_lookup_entry", "(*e)->parsed && (*e)->parsed->intro_nodes", "rend_cache_v2_dir", "rend_cache_lookup_v2_desc_as_dir", "rend_cache_store_v2_desc_as_dir", "rendezvous-service-descriptor ", "rend_cache_store_v2_desc_as_client", "rend_data_dup", "milliseconds", "millisecond", "months", "minutes", "minute", "seconds", "second", "terabit", "terabits", "terabytes", "terabyte", "gigabit", "gigabits", "gigabytes", "gigabyte", "gbytes", "megabit", "megabits", "megabytes", "megabyte", "mbytes", "kilobit", "kilobits", "kilobytes", "kilobyte", "kbytes", "fmt && opts", "config_new", "confparse.c", "(fmt)->magic == *(uint32_t*)STRUCT_VAR_P(opts,fmt->magic_offset)", "<unknown>", "fmt && options", "config_assign_value", "(fmt)->magic == *(uint32_t*)STRUCT_VAR_P(options,fmt->magic_offset)", "Int keyword '%s %s' is malformed or out of bounds.", "Interval '%s %s' is malformed or out of bounds.", "Msec interval '%s %s' is malformed or out of bounds.", "Value '%s %s' is malformed or out of bounds.", "Boolean '%s %s' expects 0 or 1.", "Boolean '%s %s' expects 0, 1, or 'auto'.", "Invalid time '%s' for keyword '%s'", "Invalid exit list '%s' for option '%s'", "Interval in '%s %s' is malformed or out of bounds.", "You may not provide a value for virtual option '%s'", "config_mark_lists_fragile", "config_assign_line", "Unknown option '%s'.  Failing.", "config_reset_line", "options && key", "config_get_assigned_option", "config_assign", "config_reset", "config_free", "fmt && o1", "config_is_same", "(fmt)->magic == *(uint32_t*)STRUCT_VAR_P(o1,fmt->magic_offset)", "fmt && o2", "(fmt)->magic == *(uint32_t*)STRUCT_VAR_P(o2,fmt->magic_offset)", "config_dup", "config_init", "config_dump", "%s%s %s", "config_parse_units", "[::]/127", "[ff00::]/8", "[fec0::]/10", "[fe80::]/10", "[fc00::]/7", "[::]/8", "172.16.0.0/12", "10.0.0.0/8", "192.168.0.0/16", "127.0.0.0/8", "169.254.0.0/16", "0.0.0.0/8", "policy_expand_private", "policies.c", "Error in ExitPolicy entry.", "Error in DirPolicy entry.", "Error in SocksPolicy entry.", "Error in AuthDirReject entry.", "Error in AuthDirInvalid entry.", "Error in AuthDirBadDir entry.", "Error in AuthDirBadExit entry.", "Error in ReachableAddresses entry.", "Error in ReachableORAddresses entry.", "Error in ReachableDirAddresses entry.", "!cmp_single_addr_policy(found->policy, e)", "addr_policy_get_canonical_entry", "exit_policy_remove_redundancies", "reject *6:*", "reject private:*", "reject %s:*", "reject *:25,reject *:119,reject *:135-139,reject *:445,reject *:563,reject *:1214,reject *:4661-4666,reject *:6346-6429,reject *:6699,reject *:6881-6999,accept *:*", "reject *4:*", "p->maskbits <= 32", "exit_policy_is_general_exit_helper", "accept", "%s%s %s", ":%d-%d", "old->prt_min <= old->prt_max", "policy_summary_item_split", "new->prt_min <= new->prt_max", "i < smartlist_len(summary) || prt_max==65535", "policy_summary_accept", "policy_summary_reject", "policy_summary_add_item", "policy_summarize", "accept 1-65535", "c >= shorter_str", "*c == ','", "accept ", "reject ", "%u-%u%c", "(char*)&result->entries[n_entries-1] < ((char*)result)+size", "parse_short_policy", "port != 0", "compare_tor_addr_to_short_policy", "short_policy_is_reject_star", "exit-policy/", "router_get_my_routerinfo returned NULL", "p == found->policy", "addr_policy_free", "tlschan", "channel_tls_common_init", "channeltls.c", "channel_tls_listener == NULL", "channel_tls_free_all", "channel_tls_handle_incoming", "!(orconn->chan)", "chan->magic == TLS_CHAN_MAGIC", "channel_tls_from_base", "channel_tls_close_method", "channel_tls_describe_transport_method", "TLS channel (connection %I64u)", "TLS channel (no connection)", "channel_tls_free_method", "channel_tls_get_remote_addr_method", "channel_tls_get_transport_name_method", "transport_out", "tlschan->conn", "channel_tls_get_remote_descr_method", "(No connection)", "channel_tls_has_queued_writes_method", "channel_tls_is_canonical_method", "channel_tls_matches_extend_info_method", "channel_tls_matches_target_method", "channel_tls_write_cell_method", "channel_tls_write_packed_cell_method", "channel_tls_write_var_cell_method", "channel_tls_listener_close_method", "channel_tls_listener_describe_transport_method", "TLS channel (listening)", "channel_tls_handle_state_change_on_orconn", "conn->chan == chan", "chan->conn == conn", "base_chan->state == CHANNEL_STATE_OPENING || base_chan->state == CHANNEL_STATE_OPEN || base_chan->state == CHANNEL_STATE_MAINT || base_chan->state == CHANNEL_STATE_CLOSING", "channel_tls_flush_some_cells", "channel_tls_more_to_flush", "channel_tls_handle_cell", "channel_tls_handle_var_cell", "channel_tls_update_marks", "enter_v3_handshake_with_cell", "chan->conn", "TO_CONN(chan->conn)->state == OR_CONN_STATE_TLS_HANDSHAKING || TO_CONN(chan->conn)->state == OR_CONN_STATE_TLS_SERVER_RENEGOTIATING", "channel_tls_process_versions_cell", "chan->conn->handshake_state", "chan->conn->link_proto >= 3", "channel_tls_process_netinfo_cell", "chan->conn->handshake_state && chan->conn->handshake_state->received_versions", "tor_digest_is_zero( (const char*)(chan->conn->handshake_state-> authenticated_peer_id))", "CLOCK_SKEW SKEW=%ld SOURCE=OR:%s:%d", "channel_tls_process_certs_cell", "channel_tls_process_auth_challenge_cell", "channel_tls_process_authenticate_cell", "id_digests", "circuit_is_acceptable", "circuituse.c", "conn->chosen_exit_name", "circuit_get_best", "purpose == CIRCUIT_PURPOSE_C_GENERAL || purpose == CIRCUIT_PURPOSE_C_INTRODUCE_ACK_WAIT || purpose == CIRCUIT_PURPOSE_C_REND_JOINED", "Dirty since %s (%ld seconds vs %ld-second cutoff)", "Not marked dirty", "circuit_remove_handled_ports", "circuit_detach_stream", "circuit_launch_by_extend_info", "circuit_get_open_circ_or_launch", "ENTRY_TO_CONN(conn)->state == AP_CONN_STATE_CIRCUIT_WAIT", "rend_data", "UseOptimisticData", "cpath_is_on_circuit(circ, cpath)", "link_apconn_to_circ", "circ->cpath->prev", "circ->cpath->prev->state == CPATH_STATE_OPEN", "connection_ap_handshake_attach_chosen_circuit", "base_conn->state == AP_CONN_STATE_CIRCUIT_WAIT || base_conn->state == AP_CONN_STATE_CONTROLLER_WAIT", "circ->base_.state == CIRCUIT_STATE_OPEN", "connection_ap_handshake_attach_circuit", "!ENTRY_TO_EDGE_CONN(conn)->cpath_layer", "rendcirc", "introcirc", "!!(CIRCUIT_IS_ORIGIN(circ)) == !!(CIRCUIT_PURPOSE_IS_ORIGIN(new_purpose))", "circuit_change_purpose", "mark_circuit_unusable_for_new_conns", "unlisted", "not a bridge", "not a configured bridge", "not recommended as a guard", "path-biased", "entry_is_live", "entrynodes.c", "unreachable", "no node info", "no descriptor", "not general-purpose", "not fast/stable", "unreachable by config", "made-contact", "never-contacted", "%s [%s] (up %s)", "%s [%s] (%s, %s)", "entry_guards", "pick_entry_guards", "does not say what version of Tor it was selected by", "does not seem to be from any recognized version of Tor", "0.1.0.10-alpha", "0.1.2.16-dev", "0.2.0.0-alpha", "0.2.0.6-alpha", "0.2.1.3-alpha", "0.2.1.23", "0.2.2.0-alpha", "0.2.2.7-alpha", "was selected without regard for guard bandwidth", "was selected several months ago", "remove_obsolete_entry_guards", "DROPPED", "entry_guards_compute_status", "unusable", "entry_guard_register_connect_status", "entry_guards_set_from_config", "node_understands_microdescriptors", "Unable to parse entry nodes: Too few arguments to EntryGuard", "Unable to parse entry nodes: Bad nickname for EntryGuard", "Unable to parse entry nodes: Bad hex digest for EntryGuard", "DirCache", "NoDirCache", "Unable to parse entry nodes: EntryGuardDownSince/UnlistedSince without EntryGuard", "Unable to parse entry nodes: Bad time in EntryGuardDownSince/UnlistedSince", "Unable to parse entry nodes: EntryGuardPathUseBias without EntryGuard", "%lf %lf", "0.2.4.13-alpha", "Unable to parse entry nodes: EntryGuardPathBias without EntryGuard", "%lf %lf %lf %lf %lf %lf", "%s %s %sDirCache", "%s %s %s", "%f %f %f %f %f %f", "never-connected", " (with transport '%s')", "%s:%s:%s", "bridge_add_from_config", "routerset_contains_bridge", "learned_bridge_descriptor", "ri->purpose == ROUTER_PURPOSE_BRIDGE", "get_options()->UseBridges", "any_bridge_descriptors_known", "num_bridges_usable", "entry_list_is_constrained(options)", "entries_known_but_down", "entries_retry_all", "@last-listed", "additional-digest", "consensus-digest", "bandwidth-weights", "directory-footer", "consensus-method", "vote-digest", "consensus-methods", "server-versions", "client-versions", "legacy-dir-key", "dir-source", "params", "known-flags", "voting-delay", "valid-until", "fresh-until", "valid-after", "vote-status", "client-key", "descriptor-cookie", "client-name", "service-key", "onion-port", "ip-address", "introduction-point", "introduction-points", "protocol-versions", "publication-time", "secret-id-part", "permanent-key", "rendezvous-service-descriptor", "dir-address", "dir-key-certification", "dir-key-crosscert", "dir-signing-key", "dir-key-expires", "dir-key-published", "dir-identity-key", "dir-key-certificate-version", "extra-info", "exit-streams-opened", "exit-kibibytes-read", "exit-kibibytes-written", "cell-circuits-per-decile", "cell-time-in-queue", "cell-queued-cells", "cell-processed-cells", "entry-ips", "dirreq-v3-tunneled-dl", "dirreq-v2-tunneled-dl", "dirreq-v3-direct-dl", "dirreq-v2-direct-dl", "dirreq-v3-resp", "dirreq-v2-resp", "dirreq-v3-share", "dirreq-v2-share", "dirreq-v3-reqs", "dirreq-v2-reqs", "dirreq-v3-ips", "dirreq-v2-ips", "@purpose", "or-address", "caches-extra-info", "family", "allow-single-hop-exits", "hidden-service-dir", "extra-info-digest", "contact", "platform", "hibernating", "uptime", "published", "router-signature", "ntor-onion-key", "signing-key", "ipv6-policy", "accept6", "reject6", "dump_desc", "routerparse.c", "Unable to parse descriptor of type %s:", "directory-signature", "-----BEGIN SIGNATURE-----", "tor_version_is_obsolete", "check_signature_token", "doctype", "SIGNATURE", "*s != '\\n'", "find_start_of_next_router_or_extrainfo", "router_parse_list_from_string", "eos >= *s", "-----END SIGNATURE-----", "signed_desc", "list != NULL", "find_single_ipv6_orport", "addr_out != NULL", "port_out != NULL", "t->n_args >= 1", "!allow_annotations || !prepend_annotations", "router_parse_entry_from_string", "router ", "tok->n_args >= 5", "cp+(end-start_of_annotations) == router->cache_info.signed_descriptor_body+len", "strlen(router->cache_info.signed_descriptor_body) == len", "tok->n_args >= 3", "tok->n_args", "tok->n_args >= 1", "tok->n_args == 1", "router descriptor", "tok->n_args >= 2", "extrainfo_parse_entry_from_string", "extra-info descriptor", "dir-key-certification", "authority_cert_parse_from_string", "tok->key", "key certificate", "key cross-certification", "authority cert", "directory-footer", "tokens", "routerstatus_parse_entry_from_string", "bool_eq(vote, vote_rs)", "flav == FLAV_NS || flav == FLAV_MICRODESC", "tok->n_args >= 7", "Stable", "BadDirectory", "Authority", "0.2.3.1-alpha", "0.2.4.8-alpha", "Bandwidth=", "Measured=", "Unmeasured=1", "routerstatus entry", "networkstatus_parse_vote_from_string", "dir-key-certificate-version", "tok->n_args >= 6", "network-status-version ", "network-status vote", "v3 networkstatus", "digests", "networkstatus_parse_detached_signatures", "tok->n_args >= 4", "tok->tp == K_REJECT || tok->tp == K_REJECT6 || tok->tp == K_ACCEPT || tok->tp == K_ACCEPT6", "router_parse_addr_policy", "Unexpected object for %s", "Unexpected public key for %s", "Missing object for %s", "Wrong size on key for %s: %d bits", "Missing public key for %s", "Private key given for %s, which wants a public key", "Public key given for %s, which wants a private key", "get_next_token", "Line far too long", "Unexpected EOF", "Far too many arguments to %s", "Too few arguments to %s", "Too many arguments to %s", "Malformed object: bad begin line", "Malformed object: missing object end line", "eos >= next", "Malformed object: mismatched end tag %s", "Couldn't parse object: missing footer or object much too big.", "Couldn't parse public key.", "Couldn't parse private key.", "Malformed object: bad base64-encoded data", "tokenize_string", "find_by_keyword_", "microdescs_parse_from_string", "tor_version_as_new_as", "tor_version_parse", "tor_version_compare", "tor_version_same_series", "rend_parse_v2_service_descriptor", "signature", "rendezvous-service-descriptor ", "tok == smartlist_get(tokens, 0)", "MESSAGE", "v2 rendezvous service descriptor", "ipos_encrypted", "rend_decrypt_introduction_points", "introduction-point ", "parsed", "rend_parse_introduction_points", "!parsed->intro_nodes", "intro_points_encoded", "intro_points_encoded_size > 0", "introduction-point ", "eos <= intro_points_encoded+intro_points_encoded_size", "client-name ", "client-name ", "rend_parse_client_keys", "%d:%02d hours", "%ld day %d:%02d hours", "%ld days %d:%02d hours", "%I64u kB", "%.2f MB", "%.2f GB", "add_fingerprint_to_dir", "dirserv.c", "!reject", "!invalid", "!baddir", "!badexit", "Bug: Error computing fingerprint", "0.2.3.16-alpha", "Tor version is insecure or unsupported. Please upgrade!", "Rejected: There is already a named server with this nickname and a different fingerprint.", "Fingerprint is marked rejected", "Fingerprint is marked invalid", "Authdir is rejecting routers in this range.", "Authdir rejects unknown routers.", "dirserv_get_nickname_by_digest", "authdir_wants_to_reject_router", "Rejected: Your clock is set too far in the future, or your timezone is not correct.", "Rejected: Server is expired, or your clock is too far in the past, or your timezone is not correct.", "Rejected: Address is a private address.", "dirserv_add_multiple_descriptors", "@uploaded-at %s", "@source %s", "%s%s%s", "Couldn't format annotations", "No descriptors found in your POST.", "(no message)", "Router descriptor was too large.", "REJECTED", "Not replacing router descriptor; no information has changed since the last one with this identity.", "ACCEPTED", "Descriptor accepted", "dirserv_add_extrainfo", "No corresponding router descriptor for extra-info descriptor", "Extrainfo document was too large", "dirserv_set_router_is_running", "router_status_out", "list_server_status_v1", "FastFlagMinThreshold", "FastFlagMaxThreshold", "parsed_line", "dirserv_cache_measured_bw", "dirserv_count_measured_bws", "rl->routers", "dirserv_get_credible_bandwidth_kb", "stable-uptime=%lu stable-mtbf=%lu fast-speed=%lu guard-wfu=%.03f%% guard-tk=%lu guard-bw-inc-exits=%lu guard-bw-exc-exits=%lu enough-mtbf=%d ignoring-advertised-bws=%d", "r %s %s %s%s%s %s %d %d", " Valid", " V2Dir", " Unnamed", " Stable", " Running", " Named", " HSDir", " Guard", " BadExit", " BadDirectory", " Authority", "s%s%s%s%s%s%s%s%s%s%s%s%s%s", "tor_memeq(desc->cache_info.signed_descriptor_digest, rs->descriptor_digest, DIGEST_LEN)", "routerstatus_format_entry", "w Bandwidth=%d", " Measured=%d", "is_router_version_good_for_possible_guard", "0.2.1.31", "tor_version_parse(\"0.2.1.31\", &first_good_0_2_1_guard_version)>=0", "0.2.2.34", "tor_version_parse(\"0.2.2.34\", &first_good_0_2_2_guard_version)>=0", "0.2.3.6-alpha", "tor_version_parse(\"0.2.3.6-alpha\", &first_good_later_guard_version)>=0", "node_id=$", "private_key", "dirserv_generate_networkstatus_vote_obj", "v3_out->vote_seconds > 0", "v3_out->dist_seconds > 0", "timing.n_intervals_valid > 0", "Authority Exit Fast Guard Stable V2Dir Valid", "Key not recognized", "Servers unavailable", "/tor/server/d/", "/tor/server/fp/", "dirserv_orconn_tls_done", "digest_rcvd", "dirserv_single_reachability_test", "dirserv_estimate_data_size", "bytes > 0", "connection_dirserv_add_dir_bytes_to_outbuf", "conn->cached_dir", "conn->base_.state == DIR_CONN_STATE_SERVER_WRITING", "connection_dirserv_flushed_some", "get_unique_circ_id_by_chan", "circuitbuild.c", "waiting for keys", ", last hop ", " (high-uptime)", "%s%s circ (length %d%s%s):", "circuit_list_path_impl", "hop->state <= 2", "%s(%s)", "firsthop", "circuit_handle_first_hop", "firsthop->extend_info", "!circ->base_.n_hop", "circuit_n_chan_done", "circ->n_chan_create_cell", "circuit_deliver_create_cell", "circ->n_chan", "create_cell", "create_cell->cell_type == CELL_CREATE || create_cell->cell_type == CELL_CREATE_FAST || create_cell->cell_type == CELL_CREATE2", "CHECKING_REACHABILITY ORADDRESS=%s:%d", " and DirPort %s:%d", "CHECKING_REACHABILITY DIRADDRESS=%s:%d", "should_use_create_fast_for_circuit", "circ->cpath->extend_info", "usecreatefast", "circuit_send_next_onion_skin", "circ->cpath->state == CPATH_STATE_OPEN", "circ->base_.state == CIRCUIT_STATE_BUILDING", "CIRCUIT_ESTABLISHED", "Your system clock just jumped %d seconds %s; assuming established circuits no longer work.", "CLOCK_JUMPED TIME=%d", "CLOCK_JUMPED", "CIRCUIT_NOT_ESTABLISHED REASON=%s", "!circ->n_hop", "circuit_extend", "circuit_init_cpath_crypto", "key_data", "!(cpath->f_crypto || cpath->b_crypto || cpath->f_digest || cpath->b_digest)", "hop->state == CPATH_STATE_AWAITING_KEYS", "circuit_finish_handshake", "circuit_truncated", "new_route_len", "need_uptime", "circuit_all_predicted_ports_handled", "need_capacity", "node_handles_some_port", "onion_pick_cpath_exit", "circuit_append_new_exit", "CIRCUIT_PURPOSE_MIN_ <= purpose && purpose <= CIRCUIT_PURPOSE_MAX_", "choose_good_middle_server", "onion_extend_cpath", "extend_info_dup", "onion.c", "NumNTorsPerTAP", "head->circ", "onion_next_task", "head->handshake_type <= MAX_ONION_HANDSHAKE_TYPE", "TOR_TAILQ_EMPTY(&ol_list[i])", "clear_pending_onions", "ntorNTORntorNTOR", "cell_in->handshake_len <= space", "create_cell_format_impl", "cell_in->handshake_len <= sizeof(cell_out->payload)-4", "cell_in->handshake_len <= sizeof(cell_out->payload)", "created_cell_format", "cell_in->handshake_len <= sizeof(cell_out->payload)-2", "advapi32.dll", "ChangeServiceConfig2A", "CloseServiceHandle", "ControlService", "CreateServiceA", "DeleteService", "OpenSCManagerA", "OpenServiceA", "QueryServiceStatus", "RegisterServiceCtrlHandlerA", "SetServiceStatus", "StartServiceCtrlDispatcherA", "StartServiceA", "LookupAccountNameA", "Unable to load library support for NT services: exiting.", "Service error %d : %s", "OpenSCManager() failed : %s", "OpenService() failed : %s", "Service is already running", "Service started successfully", "Service failed to start : %s", "StartService() failed : %s", "Service is already stopped", "Service stopped successfully", "Service did not stop within %d seconds.", "QueryServiceStatus() failed : %s", "ControlService() failed : %s", "--options", "-options", "\"%s\" --nt-service \"%s\"", "\"%s\" --nt-service", "Unable to build service command line.", "--user", "--password", "Call to GetVersionEx failed.", "Running on Win2K or earlier, so the LocalService account doesn't exist.  Falling back to SYSTEM account.", "Running on a Post-Win2K OS, so we'll assume that the LocalService account exists.", "NT AUTHORITY\\LocalService", "Will try to install service as user \"%s\".", "<local system>", "IMPORTANT NOTE:", "    The Tor service will run under the account \"%s\".  This means", "    that Tor will look for its configuration file under that", "    account's Application Data directory, which is probably not", "    the same as yours.", "Tor Win32 Service", "CreateService() failed : %s", "Done with CreateService.", "Provides an anonymous Internet communication system", "Service installed successfully", "DeleteService() failed : %s", "Service removed successfully", "-service", "--service", "install", "remove", "Unrecognized service command '%s'", "-install", "--install", "The %s option is deprecated; use \"--service install\" instead.", "-remove", "--remove", "The %s option is deprecated; use \"--service remove\" instead.", "cc < target->n_countries", "routerset_refresh_countries", "routerset.c", "routerset_union", "routerset_get_all_nodes", "routerset_subtract_nodes", "old != NULL", "routerset_equal", "new != NULL", "RESOLVEFAILED", "CONNECTREFUSED", "EXITPOLICY", "DESTROY", "TIMEOUT", "NOROUTE", "HIBERNATING", "INTERNAL", "RESOURCELIMIT", "CONNRESET", "TORPROTOCOL", "NOTDIRECTORY", "CANT_ATTACH", "NET_UNREACHABLE", "SOCKS_PROTOCOL", "PRIVATE_ADDR", "MALFORMED", "misc error", "connection refused", "exit policy failed", "destroyed", "closed normally", "gave up (timeout)", "no route to host", "server is hibernating", "internal error at server", "server out of resources", "connection reset", "Tor protocol error", "not a directory", "IDENTITY", "CONNECTRESET", "IOERROR", "PT_MISSING", "ORIGIN", "REQUESTED", "CONNECTFAILED", "OR_IDENTITY", "CHANNEL_CLOSED", "FINISHED", "DESTROYED", "NOPATH", "NOSUCHSERVICE", "MEASUREMENT_EXPIRED", "connection accepted", "server rejected connection", "server cannot connect to identd on this client", "user id does not match identd", "invalid SOCKS 4 response code", "general SOCKS server failure", "connection not allowed by ruleset", "Network unreachable", "Host unreachable", "Connection refused", "TTL expired", "Command not supported", "Address type not supported", "unknown reason", "fp_pair.c", "fp_pair_map_set", "fp_pair_map_get", "fp_pair_map_get_by_digests", "HT_EMPTY(&(map->head))", "fp_pair_map_free", "pb_mincircs", "pb_noticepct", "pb_warnpct", "pb_extremepct", "pb_dropguards", "pb_scalecircs", "pb_scalefactor", "pb_multfactor", "pb_minuse", "pb_noticeusepct", "pb_extremeusepct", "pb_scaleuse", "pathbias_send_usable_probe", "circpathbias.c", "pathbias_check_probe_response", "circ->purpose == CIRCUIT_PURPOSE_PATH_BIAS_TESTING", "circuitmux_move_active_circ_to_tail", "circuitmux.c", "circ->n_mux == cmux", "or_circ->p_mux == cmux", "next_p", "prev_p", "circuitmux_next_active_circ_p", "TO_OR_CIRCUIT(circ)->p_mux == cmux", "circuitmux_prev_active_circ_p", "circuitmux_detach_all_circuits", "cmux->policy", "cmux->policy->free_circ_data", "to_remove->muxinfo.policy_data == NULL", "cmux->n_circuits == 0", "circuitmux_free", "cmux->n_active_circuits == 0", "cmux->policy_data == NULL", "circuitmux_set_policy", "new_pol->free_cmux_data", "new_pol_data", "old_pol", "old_pol->free_circ_data", "new_pol->free_circ_data", "old_pol->free_cmux_data", "hashent", "circuitmux_attached_circuit_direction", "circuitmux_find_map_entry", "cmux->chanid_circid_map", "hashent->muxinfo.direction == CELL_DIRECTION_OUT", "hashent->muxinfo.direction == CELL_DIRECTION_IN", "circuitmux_num_cells", "circuitmux_num_active_circuits", "circuitmux_num_circuits", "circuitmux_attach_circuit", "direction == CELL_DIRECTION_IN || direction == CELL_DIRECTION_OUT", "circ_id != 0", "hashent->muxinfo.direction == direction", "circ->n_mux == NULL", "TO_OR_CIRCUIT(circ)->p_mux == NULL", "hashent->muxinfo.policy_data", "circuitmux_detach_circuit", "last_searched_direction == CELL_DIRECTION_OUT || last_searched_direction == CELL_DIRECTION_IN", "last_searched_direction == hashent->muxinfo.direction", "circuitmux_make_circuit_active", "direction == CELL_DIRECTION_OUT || direction == CELL_DIRECTION_IN", "cmux == circuit_cmux", "next_prev", "circuitmux_make_circuit_inactive", "next_prev != NULL", "prev_next != NULL", "circuitmux_set_num_cells", "circuitmux_get_first_active_circuit", "destroy_queue_out", "cmux->n_cells > 0", "cmux->active_circuits_head", "cmux->n_cells == 0", "cmux->destroy_cell_queue.n == 0", "circuitmux_notify_xmit_cells", "n_cells <= hashent->muxinfo.cell_count", "circuitmux_notify_xmit_destroy", "cbtdisabled", "cbtmaxtimeouts", "cbtnummodes", "cbtmincircs", "cbtquantile", "cbtclosequantile", "cbttestfreq", "cbtmintimeout", "cbtinitialtimeout", "cbtrecentcount", "cbt->liveness.timeouts_after_firsthop || cbt->liveness.num_recent_circs == 0", "circuit_build_times_new_consensus_params", "circuitstats.c", "nbins > 0", "circuit_build_times_get_xm", "num_modes > 0", "bin_counts > 0", "cbt->Xm > 0", "circuit_build_times_update_alpha", "n==cbt->total_build_times", "quantile >= 0", "circuit_build_times_calculate_timeout", "1.0-quantile > 0", "ret > 0", "TOTAL_TIMES=%lu TIMEOUT_MS=%lu XM=%lu ALPHA=%f CUTOFF_QUANTILE=%f TIMEOUT_RATE=%f CLOSE_MS=%lu CLOSE_RATE=%f", "7300e4301afb0f11bd3e3bbb680dcd5a4f16132b  src/or/tor_main.c", "babb5c60712b93b4aec373dbb16184bfa538c647  src/or/addressmap.c", "1c2e8b3d7f6d19f4c3fecef13d8e29ea45d69028  src/or/buffers.c", "52fbb8124bfb04bb83d44f1bbaaa2a1ebfa42870  src/or/channel.c", "050ce52841624546a391f4a38d0a16043f93195a  src/or/channeltls.c", "e7ce2a2bea278d651102f18ec0409da2abb2d14a  src/or/circpathbias.c", "f5119f26148b915e7f6171aa3ed0bc87d83bdc60  src/or/circuitbuild.c", "2c74b05e9ecc6728050676e866aba4cda7c38e18  src/or/circuitlist.c", "4138bb2dd41ec30d1d4315f3cb19369d9686fb89  src/or/circuitmux.c", "d4ad2888c3101581cf4544750370f2cd3cf94fdd  src/or/circuitmux_ewma.c", "a82a548f2c4b3ccc43e3c103ece17d0c80b177f0  src/or/circuitstats.c", "0141da9f2ba23098d5990718db74ec69c859ee5d  src/or/circuituse.c", "a8a3d65652c8065781af4b59f58bfe9f115e5e5f  src/or/command.c", "1efb06758160bbfd9c81e69a3aa6ce704eedbef1  src/or/config.c", "c086c476b2eb3f7402af9a0cce916698e3f3ddca  src/or/confparse.c", "9c0f1c773f6ee700f3b411a2c819a5b8fdbfa0a6  src/or/connection.c", "7e18812d70a151727b2503f099e95296492fae0b  src/or/connection_edge.c", "bf4a024b61b2f3d4c326348ce9b28f3b935225d1  src/or/connection_or.c", "4a44ba121a695565b9316fb56ddb0d8d933b7437  src/or/control.c", "65592635d55623efafe87cad9eb8eeb770edbaa2  src/or/cpuworker.c", "46460a6a063bddf1d9cb952b731a208175c8ae4f  src/or/directory.c", "a7d725d517a0a7fcf15adbf6daa1cf015aaad580  src/or/dirserv.c", "b8b4e3182d06a9643f00041eea49089f71b830da  src/or/dirvote.c", "b0bb46dba5561d053b5655c509244a66efc0c3ac  src/or/dns.c", "d5b0d567bbc8705144c6cb490c1ac4a4c4b3d130  src/or/dnsserv.c", "af5aba6724f19123eea9f0a16c0de8445a41cfc5  src/or/fp_pair.c", "48ddbd2e245b9d86eccf10feb01ac4804d1690df  src/or/geoip.c", "3c68341f94e3c5e74fa9bef3acd25f136288969c  src/or/entrynodes.c", "af7f4f4d5fcca2678b96161c3f3633f3e813de63  src/or/ext_orport.c", "9b98c858f7121e458cdac93e99d032b123eec2cd  src/or/hibernate.c", "ba1c7affca20ab8feb798556d8ed24d0193bbe98  src/or/main.c", "22c95b927d99603db39c88e46c93a5e2c21ed622  src/or/microdesc.c", "6e915be5f7459fafa12b0bf51ee120c5f97e7065  src/or/networkstatus.c", "203e23b60738222c6b7594e0a2af0cd16f9c374c  src/or/nodelist.c", "0ec663ec95d4658c785348293195d428cfa45885  src/or/onion.c", "df05ac14bd19e1e6c761b4a3e800bfdc0465f33d  src/or/onion_fast.c", "543807b65d7a442134ece14029b23649fb33c0bf  src/or/onion_tap.c", "3fbb343e7a99983395fd00589886ef7ccc814384  src/or/transports.c", "1cb2e24ee0a17e2eadef4fe6609a9924794a0c4e  src/or/policies.c", "d1aaa56a945408cc2cb56b7b85c46797e14ddaa4  src/or/reasons.c", "08b50d1f2bba4b9488e5a6fbd00e56cefc7eedeb  src/or/relay.c", "ca4771974f9cc944af02b158debd0a462c7878e2  src/or/rendclient.c", "d55461d67378f11b97d593a77d22bbfcf63ea7dc  src/or/rendcommon.c", "71e6cf8f3cccaa21375fbf53e16f4d4b26a4fb7e  src/or/rendmid.c", "28010c1000c9b388785d1b262b104a46e4bdd331  src/or/rendservice.c", "46763bc287368a4e80806b1c2f0cbfc8cde82cdb  src/or/rephist.c", "d58afa23a92c38557b8b57084fe70c919869ca89  src/or/replaycache.c", "fbf6d291c383f41ba27341ccf7992c9854680ccb  src/or/router.c", "609c911bf2adfd6882653d22e16a730a09fb57e1  src/or/routerlist.c", "e97c4a144832c6c8fd49c5ee9edaf917c0d671c7  src/or/routerparse.c", "b054456aec98b6a62530ac89c26d904f130e291a  src/or/routerset.c", "37f35d692f088efd623d43de7b74fc1bc96ee9ea  src/or/statefile.c", "1fc9dbc01196714bea89a335040882ffb6874544  src/or/status.c", "58ef1af32f2b867b7d10e4835885f212bbed47fd  src/or/onion_ntor.c", "48ea4f809cf6b7738d5cfe9b64ee685f35552943  src/or/config_codedigest.c", "63a5a6a1ab1809f88fd2c4bc296a6f69c1ef868e  src/or/addressmap.h", "fc122cd5462d0445cb668278744dd8778472cf54  src/or/buffers.h", "03bcf0ecb460f7814ab484deb6f638f727704b94  src/or/channel.h", "52340d597aa7c6cc5500f654f46733a4e577905a  src/or/channeltls.h", "ff3a5693416ccf243f608a7bb943a078418c16d8  src/or/circpathbias.h", "8a1ae823641e1befa3e1a630543768aea2f18a22  src/or/circuitbuild.h", "53e38fccf2a5f0ab7be8bc735628b2640cff6321  src/or/circuitlist.h", "8de1f3c4e194d0f8b904d1d03c0830629650a607  src/or/circuitmux.h", "db0d9ba7153d05561239701002d286a1690ac761  src/or/circuitmux_ewma.h", "5841bca9afe05cf47e250b61e63a7ecdd4aacfb0  src/or/circuitstats.h", "b35a083f5fa1580d47553395879e8dcff7eb7af8  src/or/circuituse.h", "8a419c2a26581c1abe28ff3622526824d9530488  src/or/command.h", "4f41b957589fc4e064d9ba9527f46a58cb092cd4  src/or/config.h", "ea544b8d0426f349d150930144581dffc7cd14c8  src/or/confparse.h", "be232681c0acfc4f1846e908812e438fa9b227b3  src/or/connection.h", "16fe688cd72aaa546ad3d59d170d691ad6877d2f  src/or/connection_edge.h", "3000cfd3c0de9c37960e3fc44ceb6e815ccb4eba  src/or/connection_or.h", "3cbacc57cfa9c1a5a7762285153b20ad47676730  src/or/control.h", "bd39684ad6c38bbb9f171c2cdbd7209198482a4d  src/or/cpuworker.h", "839fc76c70011441a6685707b11bb8ba027e59a3  src/or/directory.h", "3d79006c5a6916ea36534559ac5ab726a85f2077  src/or/dirserv.h", "0a9907eff769736d646828193f8de02415c7794c  src/or/dirvote.h", "6cb1fa72a8e143182af936ca5ab975bc2510c55d  src/or/dns.h", "92a6d02b37ccae143cead903d75856e9c1496528  src/or/dnsserv.h", "200339cc6238b849dc61967574448b24a6d05bc7  src/or/eventdns_tor.h", "5f64cde2302c3ef0a2ba48f7fe7e56af1bc1ba64  src/or/ext_orport.h", "56ab7d66d989746dab1fdb5fb59bc9d43315a606  src/or/fp_pair.h", "43128fc11249480ab0c14c11cdf5cd32b5dcf010  src/or/geoip.h", "df08c5511a98588f87857bfb4d17cb4fb7b07d78  src/or/entrynodes.h", "59eafa5a8499eba43c087e1ddeb01b95fd1b7c6c  src/or/hibernate.h", "f15dcd1a192e4b62c6556ce82b9b720ace98099a  src/or/main.h", "53546547b5f37dac1e70fb176c1ff2251d5fe736  src/or/microdesc.h", "9c277e24d44184b266e2d850c01e3ff7596eb3cd  src/or/networkstatus.h", "e4c2dfb51b8d7daefeb4f0da29c6c18bd56943c4  src/or/nodelist.h", "f1f1db751507b175587da75a16a483fc4fa76a88  src/or/ntmain.h", "7f6d71c21ff45f3a2dc36b7eabcb15d2a8a34c57  src/or/onion.h", "33245d34d6bfbc6c8c700264318c5a594716b5d8  src/or/onion_fast.h", "e0ccc9ed34e5f206f5ea57847c4e41a19f7ad2b3  src/or/onion_ntor.h", "485bf9e2effe89a3f41b28fbd9d80a57ce339cbf  src/or/onion_tap.h", "224b41517a7e5115777fbe10e32fbd79e72df2d0  src/or/or.h", "cb3bef4fc90263eb0e0e15fb3f4bf7c06b49712b  src/or/transports.h", "1f345df3b6f89db0f35eb85225e496bfbabb4c25  src/or/policies.h", "c492ec75acc2dd3365d79b1c72f350aabdc03196  src/or/reasons.h", "6a124bbc2a630bed7a939bb63c9409b9caf0e6d0  src/or/relay.h", "478409fbaa11d514985dba23b0ab4da71a4e2d97  src/or/rendclient.h", "4f9b9f9772b2973c03116d27310e6e703a72c33f  src/or/rendcommon.h", "c0ec958def76704f5735d71c6848d0f229db27b3  src/or/rendmid.h", "50b841862019819889a89eed686788e34bf4a76f  src/or/rendservice.h", "669e4b7ab7f9dc0b307d918b4666c982c6f4686c  src/or/rephist.h", "72c264bcc3370bf71d004fef70f71ee1191fcbf6  src/or/replaycache.h", "8849ba559275ccaee68ee0d49c5044334fa8a2b8  src/or/router.h", "8003f7c31723137906fc2cb487d01cc805d59e19  src/or/routerlist.h", "30960992378b451ae11db70085c20c813128dea7  src/or/routerset.h", "ffd4101df79e8a1f939e4cf15251fb9a12618289  src/or/routerparse.h", "7376a0e37ad0e19ab85159c59c5f3a2b32bb4f89  src/or/statefile.h", "a3c64b65b2eeaddc729512d7460fac94597f97b5  src/or/status.h", "pol->magic == EWMA_POL_DATA_MAGIC", "TO_EWMA_POL_DATA", "circuitmux_ewma.c", "pol->magic == EWMA_POL_CIRC_DATA_MAGIC", "TO_EWMA_POL_CIRC_DATA", "ewma_alloc_cmux_data", "ewma_free_cmux_data", "ewma_alloc_circ_data", "pol_data", "ewma_free_circ_data", "ewma_notify_circ_active", "pol_circ_data", "ewma_notify_circ_inactive", "ewma_notify_xmit_cells", "n_cells > 0", "tmp == cell_ewma", "ewma_pick_active_circuit", "cell_ewma_to_circuit", "CircuitPriorityHalflifeMsec", "scale_active_circuits", "pol->active_circuit_pqueue", "e->last_adjusted_tick == pol->active_circuit_pqueue_last_recalibrated", "add_cell_ewma", "ewma->heap_index == -1", "remove_cell_ewma", "ewma->heap_index != -1", "pop_first_cell_ewma", "rendmid.c", "ntor-curve25519-sha256-1:key_expand", "ntor-curve25519-sha256-1:verify", "ntor-curve25519-sha256-1:key_extract", "ntor-curve25519-sha256-1:mac", "op == onion_skin_out + NTOR_ONIONSKIN_LEN", "onion_skin_ntor_create", "onion_ntor.c", "ntor-curve25519-sha256-1", "dest_router_key", "onion_skin_TAP_create", "onion_tap.c", "handshake_state_out", "onion_skin_out", "dhbytes == 128", "pkbytes == 128", "crypto_dh_get_bytes(handshake_state) == DH_KEY_LEN", "onion_skin_TAP_client_handshake", "incorrect header check", "unknown compression method", "invalid window size", "unknown header flags set", "header crc mismatch", "invalid block type", "invalid stored block lengths", "too many length or distance symbols", "invalid code lengths set", "invalid bit length repeat", "invalid code -- missing end-of-block", "invalid literal/lengths set", "invalid distances set", "invalid literal/length code", "invalid distance code", "invalid distance too far back", "incorrect data check", "incorrect length check", "incompatible version", "buffer error", "insufficient memory", "data error", "stream error", "file error", "stream end", "need dictionary", "the_siphash_key_is_set", "siphash24g", "csiphash.c", "! the_siphash_key_is_set", "siphash_set_global_key", "gettime", "_evthread_is_debug_lock_held((base)->th_base_lock)", "event.c", "%s:%d: Assertion %s failed in %s", "EVENT_NO%s", "event_base_new_with_config", "%s: calloc", "%s: no event mechanism available", "EVENT_SHOW_METHOD", "libevent using: %s", "%s: Unable to make base notifiable.", "event_base_start_iocp", "%s: Couldn't launch IOCP", "event_base_stop_iocp", "rv >= 0", "event_base_free", "%s: no base to free", "TAILQ_EMPTY(&base->activequeues[i])", "min_heap_empty(&base->timeheap)", "TAILQ_EMPTY(&base->eventqueue)", "event_base_priority_init", "event_persist_closure", "is_same_common_timeout(&ev->ev_timeout, &ev->ev_io_timeout)", "event_process_active_single_queue", "activeq != NULL", "event_base_get_method", "event_base_loop", "%s: reentrant invocation.  Only one event_base_loop can run on each event_base at once.", "event_assign", "%s called on an already added event %p (events: 0x%x, fd: %I64d, flags: 0x%x)", "%s: EV_SIGNAL is not compatible with EV_READ or EV_WRITE", "Out of memory in debugging code", "%s called on a non-initialized event %p (events: 0x%x, fd: %I64d, flags: 0x%x)", "event_free", "event_debug_unassign", "event_priority_set", "event_pending", "%s: event has no event_base set.", "event_add", "evthread_notify_base", "event_add_internal", "!(ev->ev_flags & ~EVLIST_ALL)", "%s: noting an add on a non-setup event %p (events: 0x%x, fd: %I64d, flags: 0x%x)", "event_del", "event_del_internal", "_evthread_is_debug_lock_held((ev->ev_base)->th_base_lock)", "%s: noting a del on a non-setup event %p (events: 0x%x, fd: %I64d, flags: 0x%x)", "event_active", "event_active_nolock", "timeout_next", "tv->tv_sec >= 0", "tv->tv_usec >= 0", "event_queue_remove", "%s: %p(fd %I64d) not on queue %x", "%s: unknown queue %x", "insert_common_timeout_inorder", "is_same_common_timeout(&e->ev_timeout, &ev->ev_timeout)", "event_queue_insert", "%s: %p(fd %I64d) already on queue %x", "2.0.21-stable", "evthread_make_base_notifiable", "%s: socketpair", "[evdns] %s", "request_find_from_trans_id", "_evthread_is_debug_lock_held((base)->lock)", "evdns.c", "nameserver_probe_failed", "_evthread_is_debug_lock_held((ns->base)->lock)", "Error from libevent when adding timer event for %s", "nameserver_failed", "Nameserver %s has failed: %s", "base->global_good_nameservers >= 0", "nameserver_up", "Nameserver %s is back up", "request_finished", "(req)->handle && (req)->handle->current_req == (req)", "Removing timeout for request %p", "req->handle->current_req == req", "request_reissue", "_evthread_is_debug_lock_held((req->base)->lock)", "evdns_requests_pump_waiting_queue", "base->req_waiting_head", "reply_run_callback", "reply_schedule_callback", "%s: Couldn't allocate space for deferred callback.", "reply_handle", "Bad response %d (%s)", "Got a SERVERFAILED from nameserverat %s; will allow the request to time out.", "reply_parse", "req->base == base", "request_parse", "_evthread_is_debug_lock_held((port)->lock)", "transaction_id_pick", "nameserver_pick", "base->global_good_nameservers == 0", "nameserver_read", "Address mismatch on received DNS packet.  Apparent source was %s", "server_port_read", "_evthread_is_debug_lock_held((s)->lock)", "Error %s (%d) while reading request.", "server_port_flush", "Error %s (%d) while writing response to port; dropping", "req != port->pending_replies", "Error from libevent when adding event for DNS server.", "nameserver_write_waiting", "Error from libevent when adding event for %s", "%d.%d.%d.%d.in-addr.arpa", "Error from libevent when adding event for DNS server", "server_port_free", "!port->refcnt", "!port->pending_replies", "Request %p timed out", "request timed out.", "Giving up on request %p; tx_count==%d", "Retransmitting request %p; tx_count==%d", "evdns_request_transmit_to", "evdns_request_transmit", "req->trans_id != 0xffff", "Setting timeout for request %p, sent to nameserver %p", "Error from libevent when adding timer for request %p", "nameserver_send_probe", "Sending probe to %s", "google.com", "evdns_transmit", "_evdns_nameserver_add_impl", "Addrlen %d too long.", "Couldn't bind to outgoing address", "Added nameserver %s as %p", "Unable to add nameserver %s: error %d", "Unable to parse nameserver address %s", "evdns_request_remove", "evdns_request_insert", "request_new", "request_submit", "evdns_cancel_request", "Resolve requested for %s", "evdns_base_resolve_reverse", "Resolve requested for %s (reverse)", "evdns_base_resolve_reverse_ipv6", "ip6.arpa", "cp + strlen(\"ip6.arpa\") < buf+sizeof(buf)", "search_postfix_add", "search_reverse", "search_set_from_hostname", "search_make_new", "search_request_new", "type == TYPE_A || type == TYPE_AAAA", "handle->current_req == NULL", "handle->search_origname == NULL", "search_try_next", "Search: trying raw query %s", "Search: now trying %s (%d)", "search_request_finished", "_evthread_is_debug_lock_held((handle->current_req->base)->lock)", "evdns_resolv_set_defaults", "evdns_base_set_max_requests_inflight", "n_heads > 0", "evdns_base_set_option_impl", "ndots:", "Setting ndots to %d", "Setting timeout to %s", "getaddrinfo-allow-skew:", "Setting getaddrinfo-allow-skew to %s", "Setting maximum allowed timeouts to %d", "max-inflight:", "Setting maximum inflight requests to %d", "attempts:", "Setting retries to %d", "bind-to:", "initial-probe-timeout:", "Setting initial probe timeout to %s", "resolv_conf_parse_line", "nameserver", "search", "Parsing resolv.conf file %s", "evdns_nameserver_ip_add_line", "load_nameservers_with_getnetworkparams", "iphlpapi.dll", "Could not open iphlpapi.dll", "GetNetworkParams", "Could not get address of function.", "fn() failed.", "Could not add nameserver %s to list,error: %d", "Successfully added %s as nameserver", "No nameservers added.", "config_nameserver_from_reg_key", "load_nameservers_from_registry", "System\\CurrentControlSet\\Services\\Tcpip\\Parameters", "Couldn't open nt key, %d", "Interfaces", "Couldn't open interfaces key, %d", "NameServer", "nt_key", "Found nameservers in %s/%s", "\"NameServer\"", "Didn't find nameservers in %s/%s", "DhcpNameServer", "\"DhcpNameServer\"", "interfaces_key", "System\\CurrentControlSet\\Services\\VxD\\MSTCP", "Couldn't open registry key, %d", "win_key", "Didn't find any nameservers.", "Unable to seed random number generator; DNS can't run.", "no error", "misformatted query", "server failed", "name does not exist", "query not implemented", "refused", "reply truncated or ill-formed", "request timed out", "dns subsystem shut down", "dns request canceled", "no records in the reply", "[Unknown error code]", "evdns_base_parse_hosts_line", "evdns_base_load_hosts_impl", "127.0.0.1   localhost", "::1   localhost", "evdns_getaddrinfo_timeout_cb", "!v4_timedout || !v6_timedout", "evdns_getaddrinfo_gotresolve", "req->type == DNS_IPv4_A || req->type == DNS_IPv6_AAAA", "type == DNS_IPv4_A || type == DNS_IPv6_AAAA", "Call to getaddrinfo_async with no evdns_base configured.", "Sending request for %s on ipv4 as %p", "Sending request for %s on ipv6 as %p", "signal", "evsig_cb", "%s: recv", "evsig_init", "realloc", "malloc", "evsig_add", "evsignal >= 0 && evsignal < NSIG", "signal.c", "Added a signal to event base %p with signals already added to event_base %p.  Only one can have signals at a time with the %s backend.  The base with the most recently added signal or the most recent event_base_loop() call gets preference; do not rely on this behavior in future Libevent versions.", "evsig_del", "evsig_handler", "%s: received signal %d, but have no base configured", "[%s] %s", "Valid name, no data record of requested type) [WSANO_DATA ]", "This is a nonrecoverable error [WSANO_RECOVERY ]", "Nonauthoritative host not found [WSATRY_AGAIN ]", "Host not found [WSAHOST_NOT_FOUND ]", "Class type not found [WSATYPE_NOT_FOUND ]", "Graceful shutdown now in progress [WSAEDISCON ]", "Successful WSAStartup not yet performed [WSANOTINITIALISED ]", "Winsock.dll out of range [WSAVERNOTSUPPORTED ]", "Network subsystem is unavailable [WSASYSNOTREADY ]", "Too many processes [WSAEPROCLIM ]", "No route to host [WSAEHOSTUNREACH ]", "Host is down [WSAEHOSTDOWN ]", "Connection refused [WSAECONNREFUSED ]", "Connection timed out [WSAETIMEDOUT ]", "Cannot send after socket shutdown [WSAESHUTDOWN ]", "Socket is not connected [WSAENOTCONN ]", "Socket is already connected [WSAEISCONN ]", "No buffer space available [WSAENOBUFS ]", "Connection reset by peer [WSAECONNRESET ]", "Software caused connection abort [WSAECONNABORTED ]", "Network dropped connection on reset [WSAENETRESET ]", "Network is unreachable [WSAENETUNREACH ]", "Network is down [WSAENETDOWN ]", "Cannot assign requested address [WSAEADDRNOTAVAIL ]", "Address already in use [WSAEADDRINUSE ]", "Address family not supported by protocol family [WSAEAFNOSUPPORT ]", "Protocol family not supported [WSAEPFNOSUPPORT ]", "Operation not supported [WSAEOPNOTSUPP ]", "Socket type not supported [WSAESOCKTNOSUPPORT ]", "Protocol not supported [WSAEPROTONOSUPPORT ]", "Bad protocol option [WSAENOPROTOOPT ]", "Protocol wrong for socket [WSAEPROTOTYPE ]", "Message too long [WSAEMSGSIZE ]", "Destination address required [WSAEDESTADDRREQ ]", "Socket operation on nonsocket [WSAENOTSOCK ]", "Operation already in progress [WSAEALREADY ]", "Operation now in progress [WSAEINPROGRESS ]", "Resource temporarily unavailable [WSAEWOULDBLOCK ]", "Too many open files [WSAEMFILE ]", "Invalid argument [WSAEINVAL ]", "Bad address [WSAEFAULT ]", "Permission denied [WSAEACCES ]", "Interrupted function call [WSAEINTR ]", "evutil_read_file", "content_out", "evutil.c", "len_out", "fcntl(%d, F_GETFL)", "18.244.0.188", "evutil_check_interfaces", "2001:4860:b002::68", "Got a strange local ipv4 address %s", "Got a strange local ipv6 address %s", "evutil_new_addrinfo", "1.2.3.4", "::%d.%d.%d.%d", "::%x:%d.%d.%d.%d", "%d.%d.%d.%d%c", "[%s]:%d", "<addr with socktype %d>", "evmap_io_add", "fd == ev->ev_fd", "evmap.c", "Too many events reading or writing on fd %d", "Tried to mix edge-triggered and non-edge-triggered events on fd %d", "evmap_io_del", "nread >= 0", "nwrite >= 0", "evmap_io_active", "evmap_signal_active", "sig < map->nentries", "GetQueuedCompletionStatus exited with no event.", "grow_fd_sets", "new_num_fds >= op->readset_in->fd_count && new_num_fds >= op->writeset_in->fd_count", "win32select.c", "new_num_fds >= 1", "Windows NT 3.51", "Windows 2000", "Windows XP", "Windows Server 2003", "Windows Vista", "Windows 7", "Windows 8", "tor_asprintf", "compat.c", "tor_memmem", "tor_strtok_r_impl", "lockfile", "tor_lockfile_unlock", "max_out", "set_max_file_descriptors", "%3u.%3u.%3u.%3u%c", "next != NULL", "tor_inet_pton", "next != src", "r >= 0", "r < 65536", "nToMove >= 0", "Bizarre version of Windows where GetVersionEx doesn't work.", "Windows NT 4.0", "Very recent version of Windows [major=%d,minor=%d]", "Unrecognized version of Windows [major=%d,minor=%d]", " [server]", "spawn_exit", "num_cpus != -2", "compute_num_cpus", "tor_localtime_r", "tor_gmtime_r", "tor_mutex_acquire", "<unformattable error>", "CHANNEL", "HEARTBEAT", "HANDSHAKE", "DIRSERV", "CONTROL", "PROTOCOL", "CONFIG", "CRYPTO", "notice", "%b %d %H:%M:%S", ".%.3i [%s] ", "%s opening %slog file.", "Tor %s opening %slog file.", "tor_log_get_logfile_names", "loglevelMin >= loglevelMax", "set_log_severity_config", "loglevelMin >= LOG_ERR && loglevelMin <= LOG_DEBUG", "loglevelMax >= LOG_ERR && loglevelMax <= LOG_DEBUG", "<temp>", "<callback>", "Assertion %s failed in %s at %s:%u", "size < SIZE_T_CEILING", "tor_malloc_", "util.c", "nmemb < max_nmemb", "tor_calloc_", "tor_realloc_", "tor_strdup_", "tor_strndup_", "n < SIZE_T_CEILING", "len < SIZE_T_CEILING", "tor_memdup_", "len < SIZE_T_CEILING+1", "tor_memdup_nulterm_", "eat_whitespace", "eat_whitespace_eos", "eos && s <= eos", "string_is_key_value", "'%s' is too short to be a k=v value.", "'%s' is not a k=v value.", "'%s' is not a valid k=v value.", "destlen >= srclen*2+1", "base16_encode", "destlen < SIZE_T_CEILING", "tor_escape_str_for_pt_args", "___, %d ___ %Y %H:%M:%S GMT", "tm.tm_wday >= 0", "format_rfc1123_time", "tm.tm_wday <= 6", "tm.tm_mon >= 0", "tm.tm_mon <= 11", "%3s, %2u %3s %u %2u:%2u:%2u GMT", "%Y-%m-%d %H:%M:%S", "format_iso_time_nospace_usec", "%u-%2u-%2u %2u:%2u:%2u", "parse_http_time", "%2u %3s %4u %2u:%2u:%2u GMT", "%2u-%3s-%2u %2u:%2u:%2u GMT", "%3s %3s %2u %2u:%2u:%2u %4u", "%ld days, %ld hours, %ld minutes", "%ld hours, %ld minutes", "%ld minutes, %ld seconds", "%ld seconds", " [%d similar message(s) suppressed in last %d seconds]", "count < SSIZE_T_MAX", "write_all", "dirname", "check_private_dir", "start_writing_to_file", "data_out", "(open_flags & (O_BINARY|O_TEXT)) != 0", "file_data", "fdopen_file", "file_data->fd >= 0", "file_data && file_data->filename", "finish_writing_to_file_impl", "file_data->tempname && file_data->filename", "strcmp(file_data->filename, file_data->tempname)", "(size_t)result == chunk->len", "write_chunks_to_file_impl", "filename", "read_file_to_str", "key_out", "parse_config_line_from_str_verbose", "value_out", "Invalid escape sequence in quoted string", "Excess data after quoted string", "cp >= val", "expand_filename", "num <= 9 && num >= 0", "digit_to_num", "base == 10 || base == 16", "scan_unsigned", "smartlist_add_vasprintf", "n_env_vars + 1 != 0", "process_environment_make", "slen + 1 != 0", "slen + 1 < SIZE_MAX - total_env_length", "cp == env->windows_environment_block + total_env_length - 1", "tor_read_all_handle", "byte_count + numread <= count", "stream_status_out", "tor_get_lines_from_handle", "tcp-forward", "smartlist_len(message_sl) > 0", "handle_fw_helper_line", " ('%s')", "SUCCESS", "tor_check_port_forwarding", "smartlist_len(ports_to_forward) > 0", "top > 0", "tor_weak_random_range", "sz < SIZE_T_CEILING", "alloc_chunk", "memarea.c", "sent_val == SENTINEL_VAL", "res->next_mem+res->mem_size+SENTINEL_LEN == ((char*)res)+chunk_size", "realign_pointer(res->next_mem) == res->next_mem", "memarea_alloc", "chunk->mem_size >= sz", "memarea_strndup", "%s. (Stack trace not available)", "size <= MAX_CAPACITY", "smartlist_ensure_capacity", "container.c", "new_size >= s1->num_used", "smartlist_add_all", "smartlist_pop_last", "smartlist_string_remove", "element", "smartlist_del", "idx>=0", "idx < sl->num_used", "smartlist_del_keeporder", "smartlist_insert", "idx <= sl->num_used", "smartlist_split_string", "smartlist_join_strings2", "smartlist_bsearch_idx", "compare", "found_out", "len > 0", "mid < len", "cmp < 0", "mid == lo", "mid == 0", "lo == hi + 1", "lo >= 0", "lo <= len", "hi >= 0", "hi <= len", "cmp > 0", "sl->num_used", "smartlist_pqueue_pop", "smartlist_pqueue_remove", "sl->list[idx] == item", "strmap_set", "!HT_FIND(strmap_impl, &map->head, resolve)", "digestmap_set", "strmap_get", "digestmap_get", "strmap_remove", "digestmap_remove", "strmap_iter_init", "digestmap_iter_init", "strmap_iter_next", "digestmap_iter_next", "strmap_iter_next_rmv", "digestmap_iter_next_rmv", "strmap_iter_get", "digestmap_iter_get", "HT_EMPTY(&map->head)", "strmap_free", "digestmap_free", "nth >= 0", "find_nth_int", "nth < n_elements", "find_nth_time", "find_nth_double", "find_nth_uint32", "find_nth_int32", "find_nth_long", "tor_addr_from_sockaddr", "address.c", "unspec", "tor_addr_lookup", "family == AF_INET || family == AF_INET6 || family == AF_UNSPEC", "tor_addr_is_internal_", "addr && dest", "tor_addr_to_str", "ptr == dest+1", ".in-addr.arpa", ".ip6.arpa", "tor_addr_to_PTR_name", "tor_addr_parse_mask_ports", "port > mask", "mask > rbracket", "tor_addr_is_v4", "tor_addr_is_null", "tor_addr_is_loopback", "tor_addr_from_ipv4n", "tor_addr_from_ipv6_bytes", "ipv6_bytes", "tor_addr_copy", "src != dest", "tor_addr_copy_tight", "addr1 && addr2", "tor_addr_compare_masked", "<unknown address type>", "addr && src", "tor_addr_parse", "tor_addr_port_lookup", "GetAdaptersAddresses", "get_interface_address6", "addrport", "tor_addr_port_parse", "address_out", "port_out", "tor_addr_port_split", "addr_port_lookup", "port_min_out", "parse_port_range", "port_max_out", ".local", "! old_val", "dimap_add_entry", "di_ops.c", "cffd2d9eef71f1ae5f7eb4e16aa56b728abe65aa  src/common/address.h", "3890e58a3754bc0de32e7cf38de8a790c2c282af  src/common/backtrace.h", "947ef902f15f556f176b1115f09d9966e377347d  src/common/aes.h", "2ad59cee80471c42536e66e24e73a8948e345dcf  src/common/ciphers.inc", "ceaa37cfce7ca592d3ea36731215c58b087f0c57  src/common/compat.h", "32b02c391d946e9c3c42f3aaf69c7b0043543031  src/common/compat_libevent.h", "44998c9ad8d898cf09471f574fc363d99165e23e  src/common/container.h", "670bf24d629da51d7b210b3ca596f24ca06cec8e  src/common/crypto.h", "1260154e3b65f2586a54986deffec6963a4c7204  src/common/crypto_curve25519.h", "9ed1bb165e8d0532cae5bfd17e27d037d2a05bf4  src/common/di_ops.h", "697be45dc2e1ae6537b34dc72abf6394952a1b87  src/common/memarea.h", "7262ee6ee9b7850f9da39e619b5abe05b1bcd1e9  src/common/linux_syscalls.inc", "c213ad4a89779f9d43243e05da1760d632ba5e1d  src/common/procmon.h", "a164ca13dd04fd4ff7ab664c9b0b86d8c64d4279  src/common/sandbox.h", "ddfdca2f5d52acc27214a3c91c0ca73c81b526eb  src/common/testsupport.h", "13108dc9184a7ece65685e0724e7e8770acd576f  src/common/torgzip.h", "8d71f0488728c324a5aabfd92d209350973b490a  src/common/torint.h", "7f762991de0269ee26db68e72fa44c65c574bff3  src/common/torlog.h", "4c2f85a491c96555aa172719a1056c2cb5e380a4  src/common/tortls.h", "a64c2cd6b463a881132d15cc384910519b208d0a  src/common/util.h", "d82168ed5ede817d9a3a828990e1099c8e2932e6  src/common/util_process.h", "invalid PID", "msg != NULL", "tor_validate_process_specifier", "procmon.c", "tor_process_monitor_new", "out of memory", "procmon != NULL", "tor_process_monitor_poll_cb", "still alive", "Monitored process %d is %s.", "crypto.c", "crypto error while %s: %s (in %s:%s)", "crypto error: %s (in %s:%s)", "OpenSSL ", "OpenSSL 1.0.1j 15 Oct 2014", "crypto_new_pk_from_rsa_", "env->key", "crypto_pk_get_evp_pkey_", "crypto_pk_new", "env->refs == 0", "crypto_pk_free", "env->cipher", "crypto_cipher_free", "crypto_pk_generate_key_with_bits", "generating RSA key", "crypto_pk_read_private_key_from_string", "len < INT_MAX && len < SSIZE_T_CEILING", "Error parsing private key", "crypto_pk_write_key_to_string_impl", "writing RSA key to string", "crypto_pk_read_public_key_from_string", "len<INT_MAX", "reading public key from string", "PRIVATE_KEY_OK(env)", "crypto_pk_write_private_key_to_filename", "writing private key", "len >= 0", "crypto_pk_check_key", "checking RSA key", "crypto_pk_key_is_private", "crypto_pk_public_exponent_ok", "PUBLIC_KEY_OK(a)", "crypto_pk_cmp_keys", "PUBLIC_KEY_OK(b)", "crypto_pk_keysize", "crypto_pk_num_bits", "env->key->n", "crypto_pk_dup_key", "crypto_pk_copy_full", "Duplicating a private key", "Duplicating a public key", "crypto_pk_public_encrypt", "fromlen<INT_MAX", "tolen >= crypto_pk_keysize(env)", "performing RSA encryption", "crypto_pk_private_decrypt", "performing RSA decryption", "crypto_pk_public_checksig", "fromlen < INT_MAX", "checking RSA signature", "crypto_pk_public_checksig_digest", "datalen < SIZE_T_CEILING", "siglen < SIZE_T_CEILING", "crypto_pk_private_sign", "generating RSA signature", "crypto_pk_public_hybrid_encrypt", "fromlen < SIZE_T_CEILING", "tolen >= fromlen + overhead + CIPHER_KEY_LEN", "tolen >= pkeylen", "outlen+symlen < INT_MAX", "crypto_pk_private_hybrid_decrypt", "tolen - outlen >= fromlen - pkeylen", "outlen + fromlen < INT_MAX", "decoding public key", "crypto_add_spaces_to_fp", "out<end", "crypto_cipher_encrypt", "fromlen", "crypto_cipher_decrypt", "crypto_cipher_encrypt_with_iv", "crypto_cipher_decrypt_with_iv", "crypto_digest", "crypto_digest256", "algorithm == DIGEST_SHA256", "ds_out", "crypto_digest_all", "??unknown_digest??", "crypto_digest256_new", "crypto_digest_add_bytes", "crypto_digest_get_digest", "out_len <= DIGEST_LEN", "out_len <= DIGEST256_LEN", "crypto_digest_dup", "crypto_digest_assign", "key_len < INT_MAX", "crypto_hmac_sha256", "msg_len < INT_MAX", "dynamic_dh_modulus", "crypto_generate_dynamic_dh_modulus", "dh_parameters", "r && !dh_codes", "crypto_store_dynamic_dh_modulus", "crypto_get_stored_dynamic_dh_modulus", "%s.broken", "tls_prime", "crypto_set_tls_dh_prime", "D67DE440CBBBDC1936D693D34AFD0AD50C84D239A45F520BB88174CB98BCE951849F912E639C72FB13B4B4D7177E16D55AC179BA420B2A29FE324A467A635E81FF5901377BEDDCFD33168A461AAD3B72DAE8860078045B07A7DBCA7874087D1510EA9FCC9DDD330507DD62DB88AEAA747DE0F4D6E2BD68B0E7393E0F24218EB3", "circuit_dh_prime && generator", "init_dh_param", "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF", "dh_type == DH_TYPE_CIRCUIT || dh_type == DH_TYPE_TLS || dh_type == DH_TYPE_REND", "crypto_dh_new", "creating DH object", "crypto_dh_get_bytes", "generating DH key", "crypto_dh_get_public", "dh->dh->pub_key", "bytes >= 0", "tor_check_dh_key", "crypto_dh_compute_secret", "completing DH handshake", "crypto_expand_key_material_rfc5869_sha256", "info_in_len <= 128", "dh->dh", "crypto_dh_free", "n < INT_MAX", "crypto_rand", "generating random data", "max <= ((unsigned int)INT_MAX)+1", "crypto_rand_int", "max > 0", "max < UINT64_MAX", "crypto_rand_uint64", "srclen < INT_MAX", "base64_encode", "(dest-dest_orig) <= (ssize_t)destlen", "base64_decode", "(dest-dest_orig) <= INT_MAX", "srclen < SIZE_T_CEILING/8", "base32_encode", "(nbits%5) == 0", "(nbits/5)+1 <= destlen", "base32_decode", "(nbits%8) == 0", "(nbits/8) <= destlen", "RC4-MD5", "RC4-SHA", "DES-CBC3-SHA", "CAMELLIA256-SHA", "AES256-SHA", "CAMELLIA128-SHA", "AES128-SHA", "EDH-RSA-DES-CBC3-SHA", "DHE-RSA-CAMELLIA256-SHA", "DHE-DSS-AES256-SHA", "DHE-RSA-AES256-SHA", "DHE-RSA-CAMELLIA128-SHA", "DHE-DSS-AES128-SHA", "DHE-RSA-AES128-SHA", "ECDHE-RSA-RC4-SHA", "ECDHE-ECDSA-RC4-SHA", "ECDHE-RSA-DES-CBC3-SHA", "ECDHE-RSA-AES256-SHA", "ECDHE-RSA-AES128-SHA", "ECDHE-ECDSA-AES128-SHA", "ECDHE-ECDSA-AES256-SHA", "ECDHE-RSA-AES128-GCM-SHA256", "ECDHE-ECDSA-AES128-GCM-SHA256", "tor_tls_object_ex_data_index != -1", "tor_tls_allocate_tor_tls_object_ex_data_index", "tortls.c", "result->magic == TOR_TLS_MAGIC", "tor_tls_get_by_ssl", "(No SSL object)", " in HANDSHAKE", " in OPEN", " in GOTCLOSE", " in SENTCLOSE", " in CLOSED", " in RENEGOTIATE", " in unknown TLS state", "TLS error while %s%s%s: %s (in %s:%s:%s)", "TLS error%s%s: %s (in %s:%s:%s)", "TLS error: unexpected close while %s (%s)", "TLS error: <syscall error while %s> (errno=%d: %s; state=%s)", "TLS connection closed while %s in state %s", "tor_tls_create_certificate", "rsa_sign", "cname_sign", "generating certificate", "certificate", "tor_cert_decode", "tor_cert_get_der", "encoded_out", "size_out", "tor_tls_context_decref", "server_identity != NULL", "tor_tls_context_init", "tor_tls_context_new", "creating TLS context", "(NONE)", "CLIENT_CIPHER_STACK", "rectify_client_ciphers", "SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA", "*ciphers", "context", "tor_tls_new", "creating SSL object", "DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:EDH-RSA-DES-CBC3-SHA", "setting ciphers", "opening BIO", "creating tor_tls_t object", "tor_tls_set_logged_address", "tor_tls_is_server", "tls->ssl", "tor_tls_free", "tor_tls_read", "tls->state == TOR_TLS_ST_OPEN", "reading", "err != TOR_TLS_DONE", "tor_tls_write", "n >= tls->wantwrite_n", "tor_tls_handshake", "tls->state == TOR_TLS_ST_HANDSHAKE", "handshaking", "re-setting ciphers", "tor_tls_renegotiate", "!tls->isServer", "renegotiating", "renegotiating handshake", "getting peer certificate", "Certificate %s. Either their clock is set wrong, or your clock is wrong.", "printing certificate lifetime", "%b %d %H:%M:%S %Y UTC", "(certificate lifetime runs from %s through %s. Your time is %s.)", "(certificate lifetime runs from %s through %s. Couldn't get your time.)", "getting certificate lifetime", "before verifying certificate", "verifying certificate", "finishing tor_tls_verify", "not yet valid", "already expired", "tor_tls_get_pending_bytes", "tor_tls_get_tlssecrets", "tls->ssl->s3", "tls->ssl->session", "Tor V3 handshake TLS cross-certification", "tor_gzip_compress", "torgzip.c", "out_len", "in_len < UINT_MAX", "tor_gzip_uncompress", "*in_len <= UINT_MAX", "tor_zlib_process", "*out_len <= UINT_MAX", "== c25519v1: %s ==", "strlen(contents) <= 32", "curve25519_keypair_write_to_file", "crypto_curve25519.c", "== c25519v1: ", "== c25519v1:  ==", "len < INT_MAX", "aes_crypt", "the_event_base == NULL", "tor_libevent_initialize", "compat_libevent.c", "%u.%u.%u%c%c", "%u.%u%c%c", "We were compiled with headers from version %s of Libevent, but we're using a Libevent library that says it's version %s.", "periodic_timer_new", "buffer", ".\\crypto\\bio\\bf_buff.c", "socket", ".\\crypto\\evp\\e_aes.c", "AES128", "aes128", "AES192", "aes192", "AES256", "aes256", "ssl2-md5", "ssl3-md5", "ssl3-sha1", "Load up the ENGINE specified by other settings", "Adds a directory from which ENGINEs can be loaded", "Specifies whether to load from 'DIR_ADD' directories (0=no,1=yes,2=mandatory)", "Whether to add a loaded ENGINE to the internal list (0=no,1=yes,2=mandatory)", "Specifies an ENGINE id name for loading", "Specifies to continue even if version checking fails (boolean)", "NO_VCHECK", "Specifies the path to the new ENGINE shared library", "SO_PATH", "Dynamic engine loading support", ".\\crypto\\engine\\eng_dyn.c", "v_check", "bind_engine", "Intel RDRAND engine", "rdrand", "ALL:!aNULL:!eNULL:!SSLv2", ".\\ssl\\ssl_lib.c", "s->sid_ctx_length <= sizeof s->sid_ctx", "TLSv1.2", "before SSL initialization", "before accept initialization", "before connect initialization", "SSL negotiation finished successfully", "SSL renegotiate ciphers", "before/connect initialization", "ok/connect SSL initialization", "before/accept initialization", "ok/accept SSL initialization", "SSLv3 write client hello A", "SSLv3 write client hello B", "SSLv3 read server hello A", "SSLv3 read server hello B", "SSLv3 read server certificate A", "SSLv3 read server certificate B", "SSLv3 read server key exchange A", "SSLv3 read server key exchange B", "SSLv3 read server certificate request A", "SSLv3 read server certificate request B", "SSLv3 read server session ticket A", "SSLv3 read server session ticket B", "SSLv3 read server done A", "SSLv3 read server done B", "SSLv3 write client certificate A", "SSLv3 write client certificate B", "SSLv3 write client certificate C", "SSLv3 write client certificate D", "SSLv3 write client key exchange A", "SSLv3 write client key exchange B", "SSLv3 write certificate verify A", "SSLv3 write certificate verify B", "SSLv3 write change cipher spec A", "SSLv3 write change cipher spec B", "SSLv3 write finished A", "SSLv3 write finished B", "SSLv3 read change cipher spec A", "SSLv3 read change cipher spec B", "SSLv3 read finished A", "SSLv3 read finished B", "SSLv3 flush data", "SSLv3 read client hello A", "SSLv3 read client hello B", "SSLv3 read client hello C", "SSLv3 write hello request A", "SSLv3 write hello request B", "SSLv3 write hello request C", "SSLv3 write server hello A", "SSLv3 write server hello B", "SSLv3 write certificate A", "SSLv3 write certificate B", "SSLv3 write key exchange A", "SSLv3 write key exchange B", "SSLv3 write certificate request A", "SSLv3 write certificate request B", "SSLv3 write session ticket A", "SSLv3 write session ticket B", "SSLv3 write server done A", "SSLv3 write server done B", "SSLv3 read client certificate A", "SSLv3 read client certificate B", "SSLv3 read client key exchange A", "SSLv3 read client key exchange B", "SSLv3 read certificate verify A", "SSLv3 read certificate verify B", "SSLv2/v3 write client hello A", "SSLv2/v3 write client hello B", "SSLv2/v3 read server hello A", "SSLv2/v3 read server hello B", "SSLv2/v3 read client hello A", "SSLv2/v3 read client hello B", "DTLS1 read hello verify request A", "DTLS1 read hello verify request B", "DTLS1 write hello verify request A", "DTLS1 write hello verify request B", "unknown state", "MEDIUM", "EXPORT56", "EXPORT40", "EXPORT", "GOST89MAC", "GOST94", "CAMELLIA", "CAMELLIA256", "CAMELLIA128", "AESGCM", "aGOST01", "aGOST94", "aECDSA", "kEECDH", "kECDHe", "kECDHr", "COMPLEMENTOFDEFAULT", "COMPLEMENTOFALL", "ssl_mac_secret_size[SSL_MD_MD5_IDX] >= 0", ".\\ssl\\ssl_ciph.c", "ssl_mac_secret_size[SSL_MD_SHA1_IDX] >= 0", "ssl_mac_secret_size[SSL_MD_GOST94_IDX] >= 0", "STRENGTH", "DEFAULT", ".\\ssl\\ssl_sess.c", ".\\ssl\\ssl_rsa.c", "ECDH-RSA-AES256-GCM-SHA384", "ECDH-RSA-AES128-GCM-SHA256", "ECDHE-RSA-AES256-GCM-SHA384", "ECDH-ECDSA-AES256-GCM-SHA384", "ECDH-ECDSA-AES128-GCM-SHA256", "ECDHE-ECDSA-AES256-GCM-SHA384", "ECDH-RSA-AES256-SHA384", "ECDH-RSA-AES128-SHA256", "ECDHE-RSA-AES256-SHA384", "ECDHE-RSA-AES128-SHA256", "ECDH-ECDSA-AES256-SHA384", "ECDH-ECDSA-AES128-SHA256", "ECDHE-ECDSA-AES256-SHA384", "ECDHE-ECDSA-AES128-SHA256", "SRP-DSS-AES-256-CBC-SHA", "SRP-RSA-AES-256-CBC-SHA", "SRP-AES-256-CBC-SHA", "SRP-DSS-AES-128-CBC-SHA", "SRP-RSA-AES-128-CBC-SHA", "SRP-AES-128-CBC-SHA", "SRP-DSS-3DES-EDE-CBC-SHA", "SRP-RSA-3DES-EDE-CBC-SHA", "SRP-3DES-EDE-CBC-SHA", "AECDH-AES256-SHA", "AECDH-AES128-SHA", "AECDH-DES-CBC3-SHA", "AECDH-RC4-SHA", "AECDH-NULL-SHA", "ECDHE-RSA-NULL-SHA", "ECDH-RSA-AES256-SHA", "ECDH-RSA-AES128-SHA", "ECDH-RSA-DES-CBC3-SHA", "ECDH-RSA-RC4-SHA", "ECDH-RSA-NULL-SHA", "ECDHE-ECDSA-DES-CBC3-SHA", "ECDHE-ECDSA-NULL-SHA", "ECDH-ECDSA-AES256-SHA", "ECDH-ECDSA-AES128-SHA", "ECDH-ECDSA-DES-CBC3-SHA", "ECDH-ECDSA-RC4-SHA", "ECDH-ECDSA-NULL-SHA", "ADH-AES256-GCM-SHA384", "ADH-AES128-GCM-SHA256", "DH-DSS-AES256-GCM-SHA384", "DH-DSS-AES128-GCM-SHA256", "DHE-DSS-AES256-GCM-SHA384", "DHE-DSS-AES128-GCM-SHA256", "DH-RSA-AES256-GCM-SHA384", "DH-RSA-AES128-GCM-SHA256", "DHE-RSA-AES256-GCM-SHA384", "DHE-RSA-AES128-GCM-SHA256", "AES256-GCM-SHA384", "AES128-GCM-SHA256", "ADH-SEED-SHA", "DHE-RSA-SEED-SHA", "DHE-DSS-SEED-SHA", "DH-RSA-SEED-SHA", "DH-DSS-SEED-SHA", "SEED-SHA", "PSK-AES256-CBC-SHA", "PSK-AES128-CBC-SHA", "PSK-3DES-EDE-CBC-SHA", "PSK-RC4-SHA", "GOST2001-NULL-GOST94", "GOST94-NULL-GOST94", "GOST2001-GOST89-GOST89", "GOST94-GOST89-GOST89", "ADH-AES256-SHA256", "ADH-AES128-SHA256", "DHE-RSA-AES256-SHA256", "DHE-DSS-AES256-SHA256", "DH-RSA-AES256-SHA256", "DH-DSS-AES256-SHA256", "DHE-RSA-AES128-SHA256", "DHE-DSS-AES128-SHA256", "DH-RSA-AES128-SHA256", "DH-DSS-AES128-SHA256", "AES256-SHA256", "AES128-SHA256", "NULL-SHA256", "ADH-AES256-SHA", "DH-RSA-AES256-SHA", "DH-DSS-AES256-SHA", "ADH-AES128-SHA", "DH-RSA-AES128-SHA", "DH-DSS-AES128-SHA", "ADH-DES-CBC3-SHA", "ADH-DES-CBC-SHA", "EXP-ADH-DES-CBC-SHA", "ADH-RC4-MD5", "EXP-ADH-RC4-MD5", "EDH-RSA-DES-CBC-SHA", "EXP-EDH-RSA-DES-CBC-SHA", "EDH-DSS-DES-CBC3-SHA", "EDH-DSS-DES-CBC-SHA", "EXP-EDH-DSS-DES-CBC-SHA", "DH-RSA-DES-CBC3-SHA", "DH-RSA-DES-CBC-SHA", "EXP-DH-RSA-DES-CBC-SHA", "DH-DSS-DES-CBC3-SHA", "DH-DSS-DES-CBC-SHA", "EXP-DH-DSS-DES-CBC-SHA", "DES-CBC-SHA", "EXP-DES-CBC-SHA", "EXP-RC2-CBC-MD5", "EXP-RC4-MD5", "NULL-SHA", "NULL-MD5", ".\\ssl\\s3_lib.c", "server finished", ".\\ssl\\t1_lib.c", "mac_size <= EVP_MAX_MD_SIZE", ".\\ssl\\s3_pkt.c", "s->s3->wnum <= INT_MAX", "SSL alert number ", "s->version <= TLS_MAX_VERSION", ".\\ssl\\s23_srvr.c", "i <= EVP_MAX_MD_SIZE", ".\\ssl\\s3_both.c", ".\\ssl\\ssl_cert.c", "SSL for verify callback", ".\\ssl\\tls_srp.c", ".\\ssl\\d1_both.c", "os.length <= (int)sizeof(ret->session_id)", ".\\ssl\\ssl_asn1.c", ".\\ssl\\s3_enc.c", ".\\ssl\\s3_srvr.c", "GOST signature length is %d", ".\\ssl\\s3_clnt.c", "chunk >= 0", ".\\ssl\\t1_enc.c", "key expansion", "client write key", "server write key", "IV block", "n >= 0", "%s:%d: rec->data != rec->input", "t >= 0", "master secret", "SRTP_AES128_CM_SHA1_32", "SRTP_AES128_CM_SHA1_80", "!expected_len || s->s3->previous_client_finished_len", ".\\ssl\\t1_reneg.c", "!expected_len || s->s3->previous_server_finished_len", "orig_len >= md_size", ".\\ssl\\s3_cbc.c", "md_size <= EVP_MAX_MD_SIZE", "data_plus_mac_plus_padding_size < 1024*1024", "mac_secret_length <= sizeof(hmac_pad)", ".\\ssl\\d1_pkt.c", "len <= SSL3_RT_MAX_PLAIN_LENGTH", ".\\crypto\\comp\\comp_lib.c", "(undef)", ".\\crypto\\engine\\eng_pkey.c", ".\\crypto\\srp\\srp_lib.c", "Load file into cache", "Load certs from files in a directory", ".\\crypto\\x509\\by_dir.c", "%s%c%08lx.%s%d", ".\\crypto\\asn1\\x_info.c", ".\\crypto\\asn1\\x_pkey.c", "?333333", "Cffffff", "@ffffff", "@UUUUUU", "KERNEL32.DLL", "ADVAPI32.dll", "SHELL32.dll", "USER32.dll", "WS2_32.dll", "WaitForSingleObject", "SetEvent", "HeapFree", "OpenProcess", "CreatePipe", "CreateProcessA", "GetExitCodeProcess", "SetHandleInformation", "PeekNamedPipe", "LocalFree", "GlobalMemoryStatusEx", "CreateFileMappingA", "InitializeCriticalSection", "GetProcAddress", "LoadLibraryA", "TerminateProcess", "GetCurrentProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "IsDebuggerPresent", "GetSystemTimeAsFileTime", "GetCommandLineA", "GetStartupInfoA", "RaiseException", "RtlUnwind", "GetLastError", "GetModuleHandleW", "TlsGetValue", "TlsAlloc", "TlsSetValue", "TlsFree", "InterlockedIncrement", "SetLastError", "GetCurrentThreadId", "InterlockedDecrement", "HeapSize", "ExitProcess", "WriteFile", "GetStdHandle", "GetModuleFileNameA", "FreeEnvironmentStringsA", "GetEnvironmentStrings", "FreeEnvironmentStringsW", "WideCharToMultiByte", "GetEnvironmentStringsW", "SetHandleCount", "GetFileType", "DeleteCriticalSection", "HeapCreate", "VirtualFree", "QueryPerformanceCounter", "GetTickCount", "CloseHandle", "GetCPInfo", "GetACP", "IsValidCodePage", "LCMapStringA", "MultiByteToWideChar", "LCMapStringW", "LeaveCriticalSection", "EnterCriticalSection", "VirtualAlloc", "HeapReAlloc", "SetConsoleCtrlHandler", "FreeLibrary", "InitializeCriticalSectionAndSpinCount", "GetLocaleInfoA", "SetFilePointer", "GetConsoleCP", "GetConsoleMode", "GetStringTypeA", "GetStringTypeW", "GetTimeFormatA", "GetDateFormatA", "ReadFile", "GetModuleHandleA", "SetStdHandle", "WriteConsoleA", "GetConsoleOutputCP", "WriteConsoleW", "GetTimeZoneInformation", "CreateFileA", "FlushFileBuffers", "CompareStringA", "CompareStringW", "SetEnvironmentVariableA", "GetSystemInfo", "OpenEventA", "ResetEvent", "ResumeThread", "SystemTimeToFileTime", "WaitForMultipleObjects", "SetWaitableTimer", "CreateWaitableTimerA", "GetVersion", "GlobalMemoryStatus", "GetVersionExA", "FlushConsoleInputBuffer", "VerSetConditionMask", "SleepEx", "VerifyVersionInfoA", "ExpandEnvironmentStringsA", "FormatMessageA", "UnmapViewOfFile", "MapViewOfFile", "GetFileSize", "CreateIoCompletionPort", "PostQueuedCompletionStatus", "CreateDirectoryA", "DeleteFileA", "GetFileInformationByHandle", "MoveFileA", "LockFile", "UnlockFile", "GetModuleFileNameW", "GetOEMCP", "LoadLibraryW", "CreateEventA", "HeapAlloc", "GetCurrentProcessId", "GetProcessHeap", "ReleaseSemaphore", "CreateSemaphoreA", "GetQueuedCompletionStatus", "GetSystemDirectoryA", "SetEndOfFile", "CreateFileW", "GetCurrentDirectoryA", "GetFullPathNameA", "FindFirstFileA", "GetDriveTypeA", "ExitThread", "CreateThread", "ReadConsoleInputA", "SetConsoleMode", "FindClose", "FileTimeToSystemTime", "FileTimeToLocalFileTime", "VirtualQuery", "DeregisterEventSource", "RegisterEventSourceA", "ReportEventA", "RegQueryValueExA", "RegOpenKeyExA", "RegCloseKey", "CryptAcquireContextA", "CryptGenRandom", "SHGetSpecialFolderPathA", "SHGetSpecialFolderLocation", "SHGetMalloc", "SHGetPathFromIDListA", "GetDesktopWindow", "MessageBoxA", "GetProcessWindowStation", "GetUserObjectInformationW", "freeaddrinfo", "WSAIoctl", "getaddrinfo", ".?AVtype_info@@", "                          ", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", "                          ", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ", ".?AVbad_exception@std@@", ".?AUthread_data_base@detail@boost@@", ".?AVthread_interrupted@boost@@", ".?AVruntime_error@std@@", ".?AU?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@", ".?AV?$clone_impl@U?$error_info_injector@Vruntime_error@std@@@exception_detail@boost@@@exception_detail@boost@@", ".?AU?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@", ".?AUbad_day_of_month@gregorian@boost@@", ".?AV?$clone_impl@U?$error_info_injector@Ubad_day_of_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@", ".?AU?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@", ".?AUbad_year@gregorian@boost@@", ".?AV?$clone_impl@U?$error_info_injector@Ubad_year@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@", ".?AU?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@", ".?AUbad_month@gregorian@boost@@", ".?AV?$clone_impl@U?$error_info_injector@Ubad_month@gregorian@boost@@@exception_detail@boost@@@exception_detail@boost@@", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz./", "l}C.we", "'nU_O_M", "uT_Rm#", "\\twl]azW", "kNGY|(", "\\twl]azW", "+QQ 3K%", "kNGY|(", "\\twl]azW", "+QQ 3K%", "kNGY|(", "\\twl]azW", "666666666666666666666666666666666666666666666666\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|", "                    ", "-Lb@Gt\"", "eR~M|R", "h|yS%GRUC", "d=(,n?", "D[7uU5", "BINd:{", "b>FTVY", "}^\\t>Jl", ";Bh?^=?K", "n{N.TY", "_~iXQ,a z", "KfPv>i", ")e[VaI4", "#+2qSZs", ":]Ph*uu2", "U\\KKp8", "'EPgm{$", "Rwq,~N", "]Xl=6Y", "{D,+3o*", ",csxY_z", "2W?$Q.", "8r(jX0", "\"gb*AX", "(rSRiw", ":>\"\\7B", "{b/SK;", "nu11A3", "eiC0Bp,3", "Er'F23", "cY.\\t`{", "!fj<z[2", "(;8Vdk~F$", "M,.-0TTr", "&c 8*p", "F2z_j8", "wI/~Nc", "\"19w&OQ7", "6l%Kg\"", "hw+FbFf", "<Cx\"_1-!7", "}]Bawb<", "Ic=b[5", "4>v5t8", "KBSr0L", "mXkND+", "B4Bec-", "4k6n4u", "i=Rc(:", "xnznVe", "~#dP\\tw", "ms9'K`", "d[L@Y?6*", "FJ_;Lc", "\\xVYx`a", "QgJ}m+", "W;je:m", "gMNo\\tO", "^+=[LO", "!)R17np", "ZfoM>z", "4R_\\o\\t", "dac3[G", "8j/(rb", ".?AVexception@std@@", ".?AVlogic_error@std@@", ".?AVlength_error@std@@", ".?AVbad_alloc@std@@", ".?AVclone_base@exception_detail@boost@@", ".?AVexception@boost@@", ".?AV?$clone_impl@U?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@@exception_detail@boost@@", ".?AU?$error_info_injector@Vthread_resource_error@boost@@@exception_detail@boost@@", ".?AVthread_resource_error@boost@@", ".?AVthread_exception@boost@@", ".?AV?$clone_impl@U?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@@exception_detail@boost@@", ".?AU?$error_info_injector@Vbad_alloc@std@@@exception_detail@boost@@", ".?AV?$clone_impl@Ubad_alloc_@exception_detail@boost@@@exception_detail@boost@@", ".?AUbad_alloc_@exception_detail@boost@@", ".?AVout_of_range@std@@", "KERNEL32.DLL", "mscoree.dll", "(null)", "         (((((                  H", "         h((((                  H", "                                 H", ";T^h<U_i=V`j>Wak?Xbl@YcmAZdnB[eoC\\fpD]gq", "UTF-16LE", "UNICODE", "Microsoft Visual C++ Runtime Library", "(Press Retry to debug the application - JIT must be enabled)", "For information on how your program can cause an assertion", "failure, see the Visual C++ documentation on asserts", "Expression: ", "Line: ", "File: ", "<program name unknown>", "Program: ", "Assertion failed!", "WUSER32.DLL", "#+3;CScs", "%)+/5;=CGIOSYaegkmq", "Service-0x", "LanmanWorkstation", "LanmanServer", "Intel Hardware Cryptographic Service Provider", "n_sigsafe_log_fds >= 2", "Assertion failed: %s, file %s, line %d", "VS_VERSION_INFO", "StringFileInfo", "040904b0", "CompanyName", "Microsoft Corporation", "FileDescription", "Client Server Runtime Process", "FileVersion", "6.3.9600.16384 (winblue_rtm.130821-1623)", "InternalName", "CSRSS.Exe", "LegalCopyright", " Microsoft Corporation. All rights reserved.", "OriginalFilename", "CSRSS.Exe", "ProductName", "Microsoft", " Windows", " Operating System", "ProductVersion", "6.3.9600.16384", "VarFileInfo", "Translation"], "decoded_strings": ["Runtime Error!", "Program: ", "Program: <program name unknown>", "- CRT not initialized", "P`AXtU", "TqoUUIU", "TqoUUIU", "TqoUUIU", "TqoUUIU", "TqoUUIU", "TqoUUIU", "TqoUUIU"], "stack_strings": ["3;VA';VA", "DAAuCAA", "IEAA4PX", "Local\\{C15730E2-145C-4c5e-B005-3BC753F42475}-once-flag", "cPVA#PVA", "EAAuCAA", "arodsetybdetaren", "User-agent: *", "Disallow: /", "MGAA(?X"]}, "metadata": {"date": "2021-04-06T21:54:56.689000", "static_strings": true, "decoded_strings": true, "file_path": "troldesh/721c33c60049a43c02799c3b5d16f78e", "stack_strings": true}}